fit_amcmc <- Mhorseshoe::approximate_algorithm(standardized_W, z,
iteration = 10000)
toc()
knitr::opts_chunk$set(echo = TRUE)
beta3 <- fit_amcmc$beta
beta <- fit_amcmc$beta
# beta trace plot 확인
for (i in 1:length(non_zero_index)) {
print(ggplot(data = data.frame(X = 1:nrow(beta), Y = beta[, non_zero_index[i]])) + geom_line(mapping = aes(x = X, y = Y)) + labs(x = str_c("beta ", non_zero_index[i]), y = "value", title = str_c("true value = ", non_zero_coefficents[i])) + coord_cartesian(ylim = c(min(beta[, non_zero_index[i]]),max(beta[, non_zero_index[i]]))))
}
data.frame(fit_Mamcmc$active_set, fit_Mamcmc$meff) %>% View()
fit_Mamcmc$local_shrinkage_parameter[1:4414, non_zero_index] %>% View()
fit_Mamcmc$beta[1:4414, non_zero_index] %>% View()
fit_Mamcmc$diagonal_delta
tic()
fit_Mamcmc <- Mhorseshoe::modified_approximate_algorithm(standardized_W, z,
iteration = 10000)
toc()
beta <- fit_Mamcmc$beta
# beta trace plot 확인
for (i in 1:length(non_zero_index)) {
print(ggplot(data = data.frame(X = 1:nrow(beta), Y = beta[, non_zero_index[i]])) + geom_line(mapping = aes(x = X, y = Y)) + labs(x = str_c("beta ", non_zero_index[i]), y = "value", title = str_c("true value = ", non_zero_coefficents[i])) + coord_cartesian(ylim = c(min(beta[, non_zero_index[i]]),max(beta[, non_zero_index[i]]))))
}
?which
library(Mhorseshoe)
library(Mhorseshoe)
knitr::opts_chunk$set(echo = TRUE)
tic()
fit_amcmc <- Mhorseshoe::approximate_algorithm(standardized_W, z,
iteration = 10000)
library(Mhorseshoe)
knitr::opts_chunk$set(echo = TRUE)
which(c(1,2,3) > 1 & c(1,2,3 < 3))
which(c(1,2,3) > 1 & c(1,2,3) < 3)
which(c(1,2,3) > 1 & c(1,2,3) < 3)
tic()
fit_amcmc <- Mhorseshoe::approximate_algorithm(standardized_W, z,
iteration = 10000)
library(Mhorseshoe)
knitr::opts_chunk$set(echo = TRUE)
tic()
fit_amcmc <- Mhorseshoe::approximate_algorithm(standardized_W, z,
iteration = 10000)
toc()
beta3 <- fit_amcmc$beta
beta <- fit_amcmc$beta
# beta trace plot 확인
for (i in 1:length(non_zero_index)) {
print(ggplot(data = data.frame(X = 1:nrow(beta), Y = beta[, non_zero_index[i]])) + geom_line(mapping = aes(x = X, y = Y)) + labs(x = str_c("beta ", non_zero_index[i]), y = "value", title = str_c("true value = ", non_zero_coefficents[i])) + coord_cartesian(ylim = c(min(beta[, non_zero_index[i]]),max(beta[, non_zero_index[i]]))))
}
tic()
fit_horsehsoe <- horseshoe(z, standardized_W,
method.tau = "halfCauchy",
method.sigma = "Jeffreys",
burn = 2500, nmc = 2500)
toc()
beta <- fit_horsehsoe$BetaSamples
# horseshoe
for (i in 1:length(non_zero_index)) {
print(ggplot(data = data.frame(X = 1:ncol(beta), Y = beta[non_zero_index[i], ])) +
geom_line(mapping = aes(x = X, y = Y)) +
labs(x = str_c("beta ", non_zero_index[i]),
y = "value", title = str_c("true value = ", non_zero_coefficents[i])))
}
library(Mhorseshoe)
knitr::opts_chunk$set(echo = TRUE)
# 시뮬레이션 데이터 생성
N <- 300
p <- 1000
W <- Mhorseshoe::make_W(N = N, p = p)
standardized_W <- scale(W[,-1], center = TRUE, scale = TRUE)
response_list <- Mhorseshoe::make_response(standardized_W, non_zero = 30,
SD = 1)
z <- response_list[[1]]
non_zero_index <- response_list[[2]]
non_zero_coefficents <- response_list[[3]]
tic()
fit_amcmc <- Mhorseshoe::approximate_algorithm(standardized_W, z,
iteration = 3000)
toc()
beta3 <- fit_amcmc$beta
for (i in 1:length(non_zero_index)) {
cat(i,"번째 horseshoe",
sum((beta2[non_zero_index[i], ] - non_zero_coefficents[i])^2), "\n")
cat(i,"번째 approximate",
sum((beta3[5001:10000, non_zero_index[i]] - non_zero_coefficents[i])^2), "\n")
cat(i,"번째 Mapproximate",
sum((beta1[5001:10000, non_zero_index[i]] - non_zero_coefficents[i])^2), "\n")
}
beta <- fit_amcmc$beta
# beta trace plot 확인
for (i in 1:length(non_zero_index)) {
print(ggplot(data = data.frame(X = 1:nrow(beta), Y = beta[, non_zero_index[i]])) + geom_line(mapping = aes(x = X, y = Y)) + labs(x = str_c("beta ", non_zero_index[i]), y = "value", title = str_c("true value = ", non_zero_coefficents[i])) + coord_cartesian(ylim = c(min(beta[, non_zero_index[i]]),max(beta[, non_zero_index[i]]))))
}
tic()
fit_Mamcmc <- Mhorseshoe::modified_approximate_algorithm(standardized_W, z,
k = 5,
iteration = 3000)
toc()
beta <- fit_Mamcmc$beta
# beta trace plot 확인
for (i in 1:length(non_zero_index)) {
print(ggplot(data = data.frame(X = 1:nrow(beta), Y = beta[, non_zero_index[i]])) + geom_line(mapping = aes(x = X, y = Y)) + labs(x = str_c("beta ", non_zero_index[i]), y = "value", title = str_c("true value = ", non_zero_coefficents[i])) + coord_cartesian(ylim = c(min(beta[, non_zero_index[i]]),max(beta[, non_zero_index[i]]))))
}
tic()
fit_Mamcmc <- Mhorseshoe::modified_approximate_algorithm(standardized_W, z,
k = 1,
iteration = 3000)
toc()
beta <- fit_Mamcmc$beta
# beta trace plot 확인
for (i in 1:length(non_zero_index)) {
print(ggplot(data = data.frame(X = 1:nrow(beta), Y = beta[, non_zero_index[i]])) + geom_line(mapping = aes(x = X, y = Y)) + labs(x = str_c("beta ", non_zero_index[i]), y = "value", title = str_c("true value = ", non_zero_coefficents[i])) + coord_cartesian(ylim = c(min(beta[, non_zero_index[i]]),max(beta[, non_zero_index[i]]))))
}
beta <- fit_amcmc$beta
# beta trace plot 확인
for (i in 1:length(non_zero_index)) {
print(ggplot(data = data.frame(X = 1:nrow(beta), Y = beta[, non_zero_index[i]])) + geom_line(mapping = aes(x = X, y = Y)) + labs(x = str_c("beta ", non_zero_index[i]), y = "value", title = str_c("true value = ", non_zero_coefficents[i])) + coord_cartesian(ylim = c(min(beta[, non_zero_index[i]]),max(beta[, non_zero_index[i]]))))
}
tic()
fit_horsehsoe <- horseshoe(z, standardized_W,
method.tau = "halfCauchy",
method.sigma = "Jeffreys",
burn = 1500, nmc = 1500)
toc()
# 각각의 L2 norm loss 구하기
beta1 <- fit_Mamcmc$beta
beta2 <- fit_horsehsoe$BetaSamples
beta3 <- fit_amcmc$beta
for (i in 1:length(non_zero_index)) {
cat(i,"번째 horseshoe",
sum((beta2[non_zero_index[i], ] - non_zero_coefficents[i])^2), "\n")
cat(i,"번째 approximate",
sum((beta3[1501:3000, non_zero_index[i]] - non_zero_coefficents[i])^2), "\n")
cat(i,"번째 Mapproximate",
sum((beta1[1501:3000, non_zero_index[i]] - non_zero_coefficents[i])^2), "\n")
}
tic()
fit_Mamcmc <- Mhorseshoe::modified_approximate_algorithm(standardized_W, z,
k = 0,
iteration = 3000)
toc()
# 각각의 L2 norm loss 구하기
beta1 <- fit_Mamcmc$beta
beta2 <- fit_horsehsoe$BetaSamples
beta3 <- fit_amcmc$beta
for (i in 1:length(non_zero_index)) {
cat(i,"번째 horseshoe",
sum((beta2[non_zero_index[i], ] - non_zero_coefficents[i])^2), "\n")
cat(i,"번째 approximate",
sum((beta3[1501:3000, non_zero_index[i]] - non_zero_coefficents[i])^2), "\n")
cat(i,"번째 Mapproximate",
sum((beta1[1501:3000, non_zero_index[i]] - non_zero_coefficents[i])^2), "\n")
}
beta <- fit_Mamcmc$beta
# beta trace plot 확인
for (i in 1:length(non_zero_index)) {
print(ggplot(data = data.frame(X = 1:nrow(beta), Y = beta[, non_zero_index[i]])) + geom_line(mapping = aes(x = X, y = Y)) + labs(x = str_c("beta ", non_zero_index[i]), y = "value", title = str_c("true value = ", non_zero_coefficents[i])) + coord_cartesian(ylim = c(min(beta[, non_zero_index[i]]),max(beta[, non_zero_index[i]]))))
}
tic()
fit_Mamcmc <- Mhorseshoe::modified_approximate_algorithm(standardized_W, z,
k = 0,
iteration = 5000)
toc()
# 각각의 L2 norm loss 구하기
beta1 <- fit_Mamcmc$beta
beta2 <- fit_horsehsoe$BetaSamples
beta3 <- fit_amcmc$beta
for (i in 1:length(non_zero_index)) {
cat(i,"번째 horseshoe",
sum((beta2[non_zero_index[i], ] - non_zero_coefficents[i])^2), "\n")
cat(i,"번째 approximate",
sum((beta3[1501:3000, non_zero_index[i]] - non_zero_coefficents[i])^2), "\n")
cat(i,"번째 Mapproximate",
sum((beta1[1501:3000, non_zero_index[i]] - non_zero_coefficents[i])^2), "\n")
}
beta <- fit_Mamcmc$beta
# beta trace plot 확인
for (i in 1:length(non_zero_index)) {
print(ggplot(data = data.frame(X = 1:nrow(beta), Y = beta[, non_zero_index[i]])) + geom_line(mapping = aes(x = X, y = Y)) + labs(x = str_c("beta ", non_zero_index[i]), y = "value", title = str_c("true value = ", non_zero_coefficents[i])) + coord_cartesian(ylim = c(min(beta[, non_zero_index[i]]),max(beta[, non_zero_index[i]]))))
}
# 각각의 L2 norm loss 구하기
beta1 <- fit_Mamcmc$beta
beta2 <- fit_horsehsoe$BetaSamples
beta3 <- fit_amcmc$beta
for (i in 1:length(non_zero_index)) {
cat(i,"번째 horseshoe",
sum((beta2[non_zero_index[i], ] - non_zero_coefficents[i])^2), "\n")
cat(i,"번째 approximate",
sum((beta3[1501:3000, non_zero_index[i]] - non_zero_coefficents[i])^2), "\n")
cat(i,"번째 Mapproximate",
sum((beta1[2501:5000, non_zero_index[i]] - non_zero_coefficents[i])^2), "\n")
}
tic()
fit_amcmc <- Mhorseshoe::approximate_algorithm(standardized_W, z,
iteration = 3000)
toc()
# 각각의 L2 norm loss 구하기
beta1 <- fit_Mamcmc$beta
beta2 <- fit_horsehsoe$BetaSamples
beta3 <- fit_amcmc$beta
for (i in 1:length(non_zero_index)) {
cat(i,"번째 horseshoe",
sum((beta2[non_zero_index[i], ] - non_zero_coefficents[i])^2), "\n")
cat(i,"번째 approximate",
sum((beta3[1501:3000, non_zero_index[i]] - non_zero_coefficents[i])^2), "\n")
cat(i,"번째 Mapproximate",
sum((beta1[2501:5000, non_zero_index[i]] - non_zero_coefficents[i])^2), "\n")
}
# 시뮬레이션 데이터 생성
N <- 300
p <- 3000
W <- Mhorseshoe::make_W(N = N, p = p)
standardized_W <- scale(W[,-1], center = TRUE, scale = TRUE)
response_list <- Mhorseshoe::make_response(standardized_W, non_zero = 30,
SD = 1)
z <- response_list[[1]]
non_zero_index <- response_list[[2]]
non_zero_coefficents <- response_list[[3]]
tic()
fit_Mamcmc <- Mhorseshoe::modified_approximate_algorithm(standardized_W, z,
k = 0,
iteration = 5000)
toc()
tic()
fit_Mamcmc <- Mhorseshoe::modified_approximate_algorithm(standardized_W, z,
k = 1,
iteration = 5000)
toc()
# 각각의 L2 norm loss 구하기
beta1 <- fit_Mamcmc$beta
beta <- fit_Mamcmc$beta
# beta trace plot 확인
for (i in 1:length(non_zero_index)) {
print(ggplot(data = data.frame(X = 1:nrow(beta), Y = beta[, non_zero_index[i]])) + geom_line(mapping = aes(x = X, y = Y)) + labs(x = str_c("beta ", non_zero_index[i]), y = "value", title = str_c("true value = ", non_zero_coefficents[i])) + coord_cartesian(ylim = c(min(beta[, non_zero_index[i]]),max(beta[, non_zero_index[i]]))))
}
tic()
fit_amcmc <- Mhorseshoe::approximate_algorithm(standardized_W, z,
iteration = 5000)
toc()
beta <- fit_amcmc$beta
# beta trace plot 확인
for (i in 1:length(non_zero_index)) {
print(ggplot(data = data.frame(X = 1:nrow(beta), Y = beta[, non_zero_index[i]])) + geom_line(mapping = aes(x = X, y = Y)) + labs(x = str_c("beta ", non_zero_index[i]), y = "value", title = str_c("true value = ", non_zero_coefficents[i])) + coord_cartesian(ylim = c(min(beta[, non_zero_index[i]]),max(beta[, non_zero_index[i]]))))
}
beta <- fit_Mamcmc$beta
# beta trace plot 확인
for (i in 1:length(non_zero_index)) {
print(ggplot(data = data.frame(X = 1:nrow(beta), Y = beta[, non_zero_index[i]])) + geom_line(mapping = aes(x = X, y = Y)) + labs(x = str_c("beta ", non_zero_index[i]), y = "value", title = str_c("true value = ", non_zero_coefficents[i])) + coord_cartesian(ylim = c(min(beta[, non_zero_index[i]]),max(beta[, non_zero_index[i]]))))
}
# 각각의 L2 norm loss 구하기
beta1 <- fit_Mamcmc$beta
beta2 <- fit_horsehsoe$BetaSamples
beta3 <- fit_amcmc$beta
for (i in 1:length(non_zero_index)) {
cat(i,"번째 horseshoe",
sum((beta2[non_zero_index[i], ] - non_zero_coefficents[i])^2), "\n")
cat(i,"번째 approximate",
sum((beta3[2501:5000, non_zero_index[i]] - non_zero_coefficents[i])^2), "\n")
cat(i,"번째 Mapproximate",
sum((beta1[2501:5000, non_zero_index[i]] - non_zero_coefficents[i])^2), "\n")
}
# 각각의 L2 norm loss 구하기
beta1 <- fit_Mamcmc$beta
beta2 <- fit_horsehsoe$BetaSamples
beta3 <- fit_amcmc$beta
for (i in 1:length(non_zero_index)) {
#cat(i,"번째 horseshoe",
#    sum((beta2[non_zero_index[i], ] - non_zero_coefficents[i])^2), "\n")
cat(i,"번째 approximate",
sum((beta3[2501:5000, non_zero_index[i]] - non_zero_coefficents[i])^2), "\n")
cat(i,"번째 Mapproximate",
sum((beta1[2501:5000, non_zero_index[i]] - non_zero_coefficents[i])^2), "\n")
}
# 시뮬레이션 데이터 생성
N <- 200
p <- 2000
W <- Mhorseshoe::make_W(N = N, p = p)
standardized_W <- scale(W[,-1], center = TRUE, scale = TRUE)
response_list <- Mhorseshoe::make_response(standardized_W, non_zero = 50,
SD = 1)
z <- response_list[[1]]
non_zero_index <- response_list[[2]]
non_zero_coefficents <- response_list[[3]]
# 시뮬레이션 데이터 생성
N <- 200
p <- 2000
W <- Mhorseshoe::make_W(N = N, p = p)
standardized_W <- scale(W[,-1], center = TRUE, scale = TRUE)
response_list <- Mhorseshoe::make_response(standardized_W, non_zero = 30,
SD = 1)
z <- response_list[[1]]
non_zero_index <- response_list[[2]]
non_zero_coefficents <- response_list[[3]]
tic()
fit_Mamcmc <- Mhorseshoe::modified_approximate_algorithm(standardized_W, z,
k = 1,
iteration = 5000)
tic()
fit_Mamcmc <- Mhorseshoe::modified_approximate_algorithm(standardized_W, z,
k = 5,
iteration = 5000)
toc()
# 각각의 L2 norm loss 구하기
beta1 <- fit_Mamcmc$beta
beta <- fit_Mamcmc$beta
# beta trace plot 확인
for (i in 1:length(non_zero_index)) {
print(ggplot(data = data.frame(X = 1:nrow(beta), Y = beta[, non_zero_index[i]])) + geom_line(mapping = aes(x = X, y = Y)) + labs(x = str_c("beta ", non_zero_index[i]), y = "value", title = str_c("true value = ", non_zero_coefficents[i])) + coord_cartesian(ylim = c(min(beta[, non_zero_index[i]]),max(beta[, non_zero_index[i]]))))
}
tic()
fit_amcmc <- Mhorseshoe::approximate_algorithm(standardized_W, z,
iteration = 5000)
toc()
beta3 <- fit_amcmc$beta
beta <- fit_amcmc$beta
# beta trace plot 확인
for (i in 1:length(non_zero_index)) {
print(ggplot(data = data.frame(X = 1:nrow(beta), Y = beta[, non_zero_index[i]])) + geom_line(mapping = aes(x = X, y = Y)) + labs(x = str_c("beta ", non_zero_index[i]), y = "value", title = str_c("true value = ", non_zero_coefficents[i])) + coord_cartesian(ylim = c(min(beta[, non_zero_index[i]]),max(beta[, non_zero_index[i]]))))
}
beta <- fit_Mamcmc$beta
# beta trace plot 확인
for (i in 1:length(non_zero_index)) {
print(ggplot(data = data.frame(X = 1:nrow(beta), Y = beta[, non_zero_index[i]])) + geom_line(mapping = aes(x = X, y = Y)) + labs(x = str_c("beta ", non_zero_index[i]), y = "value", title = str_c("true value = ", non_zero_coefficents[i])) + coord_cartesian(ylim = c(min(beta[, non_zero_index[i]]),max(beta[, non_zero_index[i]]))))
}
non_zero_coefficents
tic()
fit_Mamcmc <- Mhorseshoe::modified_approximate_algorithm(standardized_W, z,
k = 5,
iteration = 10000)
toc()
tic()
fit_Mamcmc <- Mhorseshoe::modified_approximate_algorithm(standardized_W, z,
k = 10,
iteration = 10000)
library(Mhorseshoe)
knitr::opts_chunk$set(echo = TRUE)
tic()
fit_Mamcmc <- Mhorseshoe::modified_approximate_algorithm(standardized_W, z,
k = 5,
iteration = 10000)
toc()
# 각각의 L2 norm loss 구하기
beta1 <- fit_Mamcmc$beta
beta <- fit_Mamcmc$beta
# beta trace plot 확인
for (i in 1:length(non_zero_index)) {
print(ggplot(data = data.frame(X = 1:nrow(beta), Y = beta[, non_zero_index[i]])) + geom_line(mapping = aes(x = X, y = Y)) + labs(x = str_c("beta ", non_zero_index[i]), y = "value", title = str_c("true value = ", non_zero_coefficents[i])) + coord_cartesian(ylim = c(min(beta[, non_zero_index[i]]),max(beta[, non_zero_index[i]]))))
}
tic()
fit_amcmc <- Mhorseshoe::approximate_algorithm(standardized_W, z,
iteration = 10000)
toc()
beta <- fit_amcmc$beta
# beta trace plot 확인
for (i in 1:length(non_zero_index)) {
print(ggplot(data = data.frame(X = 1:nrow(beta), Y = beta[, non_zero_index[i]])) + geom_line(mapping = aes(x = X, y = Y)) + labs(x = str_c("beta ", non_zero_index[i]), y = "value", title = str_c("true value = ", non_zero_coefficents[i])) + coord_cartesian(ylim = c(min(beta[, non_zero_index[i]]),max(beta[, non_zero_index[i]]))))
}
tic()
fit_horsehsoe <- horseshoe(z, standardized_W,
method.tau = "halfCauchy",
method.sigma = "Jeffreys",
burn = 0, nmc = 10000)
tic()
fit_horsehsoe <- horseshoe(z, standardized_W,
method.tau = "halfCauchy",
method.sigma = "Jeffreys",
burn = 0, nmc = 5000)
# 시뮬레이션 데이터 생성
N <- 200
p <- 1000
W <- Mhorseshoe::make_W(N = N, p = p)
standardized_W <- scale(W[,-1], center = TRUE, scale = TRUE)
response_list <- Mhorseshoe::make_response(standardized_W, non_zero = 50,
SD = 1, fixed_coefficients = 1)
z <- response_list[[1]]
non_zero_index <- response_list[[2]]
non_zero_coefficents <- response_list[[3]]
tic()
fit_amcmc <- Mhorseshoe::approximate_algorithm(standardized_W, z,
iteration = 10000)
toc()
library(Mhorseshoe)
tic()
fit_amcmc <- Mhorseshoe::approximate_algorithm(standardized_W, z,
iteration = 10000)
library(Mhorseshoe)
knitr::opts_chunk$set(echo = TRUE)
tic()
fit_amcmc <- Mhorseshoe::approximate_algorithm(standardized_W, z,
iteration = 10000)
toc()
knitr::opts_chunk$set(echo = TRUE)
tic()
fit_Mamcmc <- Mhorseshoe::modified_approximate_algorithm(standardized_W, z,
k = 5,
iteration = 10000)
toc()
beta <- fit_Mamcmc$beta
# beta trace plot 확인
for (i in 1:length(non_zero_index)) {
print(ggplot(data = data.frame(X = 1:nrow(beta), Y = beta[, non_zero_index[i]])) + geom_line(mapping = aes(x = X, y = Y)) + labs(x = str_c("beta ", non_zero_index[i]), y = "value", title = str_c("true value = ", non_zero_coefficents[i])) + coord_cartesian(ylim = c(min(beta[, non_zero_index[i]]),max(beta[, non_zero_index[i]]))))
}
beta <- fit_amcmc$beta
# beta trace plot 확인
for (i in 1:length(non_zero_index)) {
print(ggplot(data = data.frame(X = 1:nrow(beta), Y = beta[, non_zero_index[i]])) + geom_line(mapping = aes(x = X, y = Y)) + labs(x = str_c("beta ", non_zero_index[i]), y = "value", title = str_c("true value = ", non_zero_coefficents[i])) + coord_cartesian(ylim = c(min(beta[, non_zero_index[i]]),max(beta[, non_zero_index[i]]))))
}
# 시뮬레이션 데이터 생성
N <- 200
p <- 1000
W <- Mhorseshoe::make_W(N = N, p = p)
standardized_W <- scale(W[,-1], center = TRUE, scale = TRUE)
response_list <- Mhorseshoe::make_response(standardized_W, non_zero = 50,
SD = 0.1, fixed_coefficients = 1)
z <- response_list[[1]]
non_zero_index <- response_list[[2]]
non_zero_coefficents <- response_list[[3]]
tic()
fit_amcmc <- Mhorseshoe::approximate_algorithm(standardized_W, z,
iteration = 10000)
tic()
fit_amcmc <- Mhorseshoe::approximate_algorithm(standardized_W, z,
iteration = 5000)
tic()
fit_amcmc <- Mhorseshoe::approximate_algorithm(standardized_W, z,
iteration = 5000)
tic()
fit_Mamcmc <- Mhorseshoe::modified_approximate_algorithm(standardized_W, z,
k = 10,
iteration = 5000)
toc()
beta <- fit_Mamcmc$beta
# beta trace plot 확인
for (i in 1:length(non_zero_index)) {
print(ggplot(data = data.frame(X = 1:nrow(beta), Y = beta[, non_zero_index[i]])) + geom_line(mapping = aes(x = X, y = Y)) + labs(x = str_c("beta ", non_zero_index[i]), y = "value", title = str_c("true value = ", non_zero_coefficents[i])) + coord_cartesian(ylim = c(min(beta[, non_zero_index[i]]),max(beta[, non_zero_index[i]]))))
}
tic()
fit_horsehsoe <- horseshoe(z, standardized_W,
method.tau = "halfCauchy",
method.sigma = "Jeffreys",
burn = 0, nmc = 5000)
toc()
beta <- fit_horsehsoe$BetaSamples
# horseshoe
for (i in 1:length(non_zero_index)) {
print(ggplot(data = data.frame(X = 1:ncol(beta), Y = beta[non_zero_index[i], ])) +
geom_line(mapping = aes(x = X, y = Y)) +
labs(x = str_c("beta ", non_zero_index[i]),
y = "value", title = str_c("true value = ", non_zero_coefficents[i])))
}
# 각각의 L2 norm loss 구하기
beta1 <- fit_Mamcmc$beta
beta2 <- fit_horsehsoe$BetaSamples
beta3 <- fit_amcmc$beta
for (i in 1:length(non_zero_index)) {
cat(i,"번째 horseshoe",
sum((beta2[non_zero_index[i], 2501:5000] - non_zero_coefficents[i])^2), "\n")
cat(i,"번째 approximate",
sum((beta3[2501:5000, non_zero_index[i]] - non_zero_coefficents[i])^2), "\n")
cat(i,"번째 Mapproximate",
sum((beta1[2501:5000, non_zero_index[i]] - non_zero_coefficents[i])^2), "\n")
}
# 시뮬레이션 데이터 생성
N <- 200
p <- 1000
W <- Mhorseshoe::make_W(N = N, p = p)
standardized_W <- scale(W[,-1], center = TRUE, scale = TRUE)
response_list <- Mhorseshoe::make_response(standardized_W, non_zero = 40,
SD = 0.1, fixed_coefficients = 1)
z <- response_list[[1]]
non_zero_index <- response_list[[2]]
non_zero_coefficents <- response_list[[3]]
tic()
fit_amcmc <- Mhorseshoe::approximate_algorithm(standardized_W, z,
iteration = 5000)
toc()
beta <- fit_amcmc$beta
# beta trace plot 확인
for (i in 1:length(non_zero_index)) {
print(ggplot(data = data.frame(X = 1:nrow(beta), Y = beta[, non_zero_index[i]])) + geom_line(mapping = aes(x = X, y = Y)) + labs(x = str_c("beta ", non_zero_index[i]), y = "value", title = str_c("true value = ", non_zero_coefficents[i])) + coord_cartesian(ylim = c(min(beta[, non_zero_index[i]]),max(beta[, non_zero_index[i]]))))
}
tic()
fit_Mamcmc <- Mhorseshoe::modified_approximate_algorithm(standardized_W, z,
k = 10,
iteration = 5000)
toc()
# 각각의 L2 norm loss 구하기
beta1 <- fit_Mamcmc$beta
beta <- fit_Mamcmc$beta
# beta trace plot 확인
for (i in 1:length(non_zero_index)) {
print(ggplot(data = data.frame(X = 1:nrow(beta), Y = beta[, non_zero_index[i]])) + geom_line(mapping = aes(x = X, y = Y)) + labs(x = str_c("beta ", non_zero_index[i]), y = "value", title = str_c("true value = ", non_zero_coefficents[i])) + coord_cartesian(ylim = c(min(beta[, non_zero_index[i]]),max(beta[, non_zero_index[i]]))))
}
tic()
fit_horsehsoe <- horseshoe(z, standardized_W,
method.tau = "halfCauchy",
method.sigma = "Jeffreys",
burn = 0, nmc = 5000)
toc()
# 각각의 L2 norm loss 구하기
beta1 <- fit_Mamcmc$beta
beta2 <- fit_horsehsoe$BetaSamples
beta3 <- fit_amcmc$beta
for (i in 1:length(non_zero_index)) {
cat(i,"번째 horseshoe",
sum((beta2[non_zero_index[i], 2501:5000] - non_zero_coefficents[i])^2), "\n")
cat(i,"번째 approximate",
sum((beta3[2501:5000, non_zero_index[i]] - non_zero_coefficents[i])^2), "\n")
cat(i,"번째 Mapproximate",
sum((beta1[2501:5000, non_zero_index[i]] - non_zero_coefficents[i])^2), "\n")
}
