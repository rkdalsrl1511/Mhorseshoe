simulation_xi <- log(xiout)
sigmaout <- R.matlab::readMat("C:/Users/rkdal/OneDrive/바탕 화면/horseshoe_jo-master/sigma.mat")
sigmaout <- as.vector(sigmaout$sigmaSqout)
lambdaout <- R.matlab::readMat("C:/Users/rkdal/OneDrive/바탕 화면/horseshoe_jo-master/lambdaout.mat")
lambdaout <- lambdaout$lambdaout
View(lambdaout)
lambdaout <- R.matlab::readMat("C:/Users/rkdal/OneDrive/바탕 화면/horseshoe_jo-master/lambdaout.mat")
lambdaout <- t(lambdaout$lambdaout)
View(lambdaout)
# active set
etaout <- lambdaout^(-2)
View(etaout)
# active set
mat_active_set <- rep(0, 5000)
etaout[1, ] * xiout[1] < 10^3
sum(etaout[1, ] * xiout[1] < 10^3)
for (i in 1:5000) {
mat_active_set[i] <- sum(etaout[i, ] * xiout[i] < 10^3)
}
mat_active_set
ggplot(data = data.frame(X = 101:5000,
R_active_set = example_spend_time$total_active_column[101:5000],
mat_active_set = mat_active_set[101:5000])) +
geom_line(mapping = aes(x = X, y = R_active_set, color = "R_active_set")) +
geom_line(mapping = aes(x = X, y = mat_active_set, color = "mat_active_set")) +
labs(x = "iteration", y = "number of active set")
R_active_set <- rep(0, 5000)
for (i in 1:5000)
for (i in 1:5000) {
R_active_set[i] <- sum(example$local_shrinkage_parameter[i, ] * example$global_shrinkage_parameter[i] < 10^3)
}
ggplot(data = data.frame(X = 101:5000,
R_active_set = R_active_set[101:5000],
mat_active_set = mat_active_set[101:5000])) +
geom_line(mapping = aes(x = X, y = R_active_set, color = "R_active_set")) +
geom_line(mapping = aes(x = X, y = mat_active_set, color = "mat_active_set")) +
labs(x = "iteration", y = "number of active set")
ggplot(data = data.frame(X = 101:5000,
R_active_set = R_active_set[101:5000],
mat_active_set = mat_active_set[101:5000])) +
geom_line(mapping = aes(x = X, y = R_active_set, color = "R_active_set"), alpha = 0.7) +
geom_line(mapping = aes(x = X, y = mat_active_set, color = "mat_active_set"), alpha = 0.7) +
labs(x = "iteration", y = "number of active set")
# xi
ggplot(data = data.frame(X = 1:5000,
R_xi = log(example$global_shrinkage_parameter),
mat_xi = simulation_xi)) +
geom_line(mapping = aes(x = X, y = R_xi, color = "R_xi"), alpha = 0.7) +
geom_line(mapping = aes(x = X, y = mat_xi, color = "mat_xi"), alpha = 0.7)
View(example)
View(example_spend_time)
sum(example$spend_time$total_time)
# xi
ggplot(data = data.frame(X = 1:5000,
R_xi = log(example$global_shrinkage_parameter),
mat_xi = simulation_xi)) +
geom_line(mapping = aes(x = X, y = R_xi, color = "R_xi"), alpha = 0.7) +
geom_line(mapping = aes(x = X, y = mat_xi, color = "mat_xi"), alpha = 0.7)
# active set
mat_active_set <- rep(0, 5000)
etaout <- lambdaout^(-2)
for (i in 1:5000)
mat_active_set[i] <- sum(etaout[i, ] * xiout[i] < 10^3)
R_active_set <- rep(0, 5000)
for (i in 1:5000) {
R_active_set[i] <- sum(example$local_shrinkage_parameter[i, ] * example$global_shrinkage_parameter[i] < 10^3)
}
ggplot(data = data.frame(X = 101:5000,
R_active_set = R_active_set[101:5000],
mat_active_set = mat_active_set[101:5000])) +
geom_line(mapping = aes(x = X, y = R_active_set, color = "R_active_set"), alpha = 0.7) +
geom_line(mapping = aes(x = X, y = mat_active_set, color = "mat_active_set"), alpha = 0.7) +
labs(x = "iteration", y = "number of active set")
sum(example$spend_time$step1)
X <- matrix(c(1,2,3), nrow = 3, ncol = 3)
View(X)
d <- c(3,6,9)
d * X
X
d * X
d * t(X)
d <- c(3,4,5)
X
X
d * t(X)
diag(d)
diag(d) %*% t(X)
d * t(X)
diag(d) %*% t(X)
svd(X)
svd(X)$d
(svd(X)$d)^2
sum(1+(svd(X)$d)^2)
1+(svd(X)$d)^2
(svd(X)$d)^2
prod(1+(svd(X)$d)^2)
1+(svd(X)$d)^2
prod(c(1,2,3))
svd(d * t(X))
prod(1+svd(d * t(X))$d^2)
prod(1+svd(X * d)$d^2)
prod(1+svd(d * t(X))$d^2)
prod(1+svd(X * d)$d^2)
svd(X * d)$d^2
svd(d * t(X))$d^2
svd(d * t(X))
svd(d * t(X))
svd(X * d)
svd(d * t(X))
svd(X * d)
svd(d * t(X))
svd(X * d)
svd(d * t(X))
svd(X * d)
library(Mhorseshoe)
knitr::opts_chunk$set(echo = TRUE)
example <- Mhorseshoe::approximate_horseshoe(miru$W, miru$Z, iteration = 5000, step_check = TRUE)
library(Mhorseshoe)
knitr::opts_chunk$set(echo = TRUE)
example <- Mhorseshoe::approximate_horseshoe(miru$W, miru$Z, iteration = 5000, step_check = TRUE)
library(Mhorseshoe)
knitr::opts_chunk$set(echo = TRUE)
example <- Mhorseshoe::approximate_horseshoe(miru$W, miru$Z, iteration = 5000, step_check = TRUE)
library(Mhorseshoe)
knitr::opts_chunk$set(echo = TRUE)
example <- Mhorseshoe::approximate_horseshoe(miru$W, miru$Z, iteration = 5000, step_check = TRUE)
library(Mhorseshoe)
knitr::opts_chunk$set(echo = TRUE)
example <- Mhorseshoe::approximate_horseshoe(miru$W, miru$Z, iteration = 5000, step_check = TRUE)
example <- Mhorseshoe::approximate_horseshoe(miru$W, miru$Z, iteration = 5000, step_check = TRUE)
library(Mhorseshoe)
example <- Mhorseshoe::approximate_horseshoe(miru$W, miru$Z, iteration = 5000, step_check = TRUE)
library(Mhorseshoe)
knitr::opts_chunk$set(echo = TRUE)
example <- Mhorseshoe::approximate_horseshoe(miru$W, miru$Z, iteration = 5000, step_check = TRUE)
library(Mhorseshoe)
knitr::opts_chunk$set(echo = TRUE)
example <- Mhorseshoe::approximate_horseshoe(miru$W, miru$Z, iteration = 5000, step_check = TRUE)
library(Mhorseshoe)
library(Mhorseshoe)
knitr::opts_chunk$set(echo = TRUE)
example <- Mhorseshoe::approximate_horseshoe(miru$W, miru$Z, iteration = 5000, step_check = TRUE)
sum(example$spend_time$step1)
library(Mhorseshoe)
knitr::opts_chunk$set(echo = TRUE)
sum(example$spend_time$step1)
example <- Mhorseshoe::approximate_horseshoe(miru$W, miru$Z, iteration = 500, step_check = TRUE)
sum(example$spend_time$step1)
library(Mhorseshoe)
library(Mhorseshoe)
knitr::opts_chunk$set(echo = TRUE)
example <- Mhorseshoe::approximate_horseshoe(miru$W, miru$Z, iteration = 500, step_check = TRUE)
sum(example$spend_time$step1)
library(Mhorseshoe)
knitr::opts_chunk$set(echo = TRUE)
example <- Mhorseshoe::approximate_horseshoe(miru$W, miru$Z, iteration = 5000, step_check = TRUE)
sum(example$spend_time$step1)
m_example <- Mhorseshoe::modified_horseshoe(miru$W, miru$Z, iteration = 5000, step_check = TRUE)
sum(m_example$spend_time$total_time)
sum(example$spend_time$step1)
sum(m_example$spend_time$total_time)
# xi
ggplot(data = data.frame(X = 1:5000,
R_xi = log(example$global_shrinkage_parameter),
mat_xi = simulation_xi)) +
geom_line(mapping = aes(x = X, y = R_xi, color = "R_xi"), alpha = 0.7) +
geom_line(mapping = aes(x = X, y = mat_xi, color = "mat_xi"), alpha = 0.7)
# example beta trace plot
example_beta <- example$beta
example_spend_time <- example$spend_time
example_sigma <- example$sigma_parameter
ggplot(data = data.frame(X = 1:length(example_sigma),
Y = example_sigma)) +
geom_line(mapping = aes(x = X, y = Y))
# xi
ggplot(data = data.frame(X = 1:5000,
R_xi = log(example$global_shrinkage_parameter),
mat_xi = simulation_xi)) +
geom_line(mapping = aes(x = X, y = R_xi, color = "R_xi"), alpha = 0.7) +
geom_line(mapping = aes(x = X, y = mat_xi, color = "mat_xi"), alpha = 0.7)
# active set
mat_active_set <- rep(0, 5000)
etaout <- lambdaout^(-2)
for (i in 1:5000)
for (i in 1:5000) {
mat_active_set[i] <- sum(etaout[i, ] * xiout[i] < 10^3)
}
R_active_set <- rep(0, 5000)
for (i in 1:5000) {
R_active_set[i] <- sum(example$local_shrinkage_parameter[i, ] * example$global_shrinkage_parameter[i] < 10^3)
}
ggplot(data = data.frame(X = 101:5000,
R_active_set = R_active_set[101:5000],
mat_active_set = mat_active_set[101:5000])) +
geom_line(mapping = aes(x = X, y = R_active_set, color = "R_active_set"), alpha = 0.7) +
geom_line(mapping = aes(x = X, y = mat_active_set, color = "mat_active_set"), alpha = 0.7) +
labs(x = "iteration", y = "number of active set")
miru <- readRDS(file = "C:/Users/rkdal/OneDrive/바탕 화면/시뮬레이션 세팅/set5-set10/0522_set5_sig1_seed1.rds")
miru$N
miru$p
dim(miru$W) # disign matrix
miru$real.beta # true beta
miru$real.beta # true beta
miru$Z # response variable
miru$real.sig # sigma = 1
miru$SNR # signal to noise
example_non_zero_index <- 1:10
example_non_zero_coefficents <- 1
example <- Mhorseshoe::approximate_horseshoe(miru$W, miru$Z, iteration = 5000, step_check = TRUE)
# xi
ggplot(data = data.frame(X = 1:5000,
R_xi = log(example$global_shrinkage_parameter),
mat_xi = simulation_xi)) +
geom_line(mapping = aes(x = X, y = R_xi, color = "R_xi"), alpha = 0.7) +
geom_line(mapping = aes(x = X, y = mat_xi, color = "mat_xi"), alpha = 0.7)
miru <- readRDS(file = "C:/Users/rkdal/OneDrive/바탕 화면/시뮬레이션 세팅/set5-set10/0522_set7_sig4_seed1.rds")
miru$N
miru$p
dim(miru$W) # disign matrix
miru$real.beta # true beta
miru$real.beta # true beta
miru$Z # response variable
miru$real.sig # sigma = 4
miru$SNR # signal to noise
example_non_zero_index <- 1:40
example_non_zero_coefficents <- 1
example <- Mhorseshoe::approximate_horseshoe(miru$W, miru$Z, iteration = 5000, step_check = TRUE)
ggplot(data = data.frame(X = 101:5000,
R_active_set = R_active_set[101:5000],
mat_active_set = mat_active_set[101:5000])) +
geom_line(mapping = aes(x = X, y = R_active_set, color = "R_active_set"), alpha = 0.7) +
geom_line(mapping = aes(x = X, y = mat_active_set, color = "mat_active_set"), alpha = 0.7) +
labs(x = "iteration", y = "number of active set")
ggplot(data = data.frame(X = 101:5000,
R_active_set = R_active_set[101:5000],
mat_active_set = mat_active_set[101:5000])) +
geom_line(mapping = aes(x = X, y = R_active_set, color = "R_active_set"), alpha = 0.7) +
geom_line(mapping = aes(x = X, y = mat_active_set, color = "mat_active_set"), alpha = 0.7) +
labs(x = "iteration", y = "number of active set")
miru <- readRDS(file = "C:/Users/rkdal/OneDrive/바탕 화면/시뮬레이션 세팅/set5-set10/0522_set8_sig4_seed1.rds")
miru$N
miru$p
dim(miru$W) # disign matrix
miru$real.beta # true beta
miru$real.beta # true beta
miru$Z # response variable
miru$real.sig # sigma = 4
miru$SNR # signal to noise
example_non_zero_index <- 1:50
example_non_zero_coefficents <- 1
example <- Mhorseshoe::approximate_horseshoe(miru$W, miru$Z, iteration = 5000, step_check = TRUE)
sum(example$spend_time$total_time)
?horseshoe
horseshoe(miru$Z, miru$W, method.tau = "halfCauchy", tau = 1,
method.sigma = "Jeffreys", burn = 0, nmc = 5000)
tic()
horseshoe(miru$Z, miru$W, method.tau = "halfCauchy", tau = 1,
method.sigma = "Jeffreys", burn = 0, nmc = 5000)
toc()
sum(example$spend_time$total_time)
library(Mhorseshoe)
example <- Mhorseshoe::approximate_horseshoe(miru$W, miru$Z, iteration = 5000, step_check = TRUE)
library(Mhorseshoe)
knitr::opts_chunk$set(echo = TRUE)
example <- Mhorseshoe::approximate_horseshoe(miru$W, miru$Z, iteration = 5000, step_check = TRUE)
library(Mhorseshoe)
knitr::opts_chunk$set(echo = TRUE)
example <- Mhorseshoe::approximate_horseshoe(miru$W, miru$Z, iteration = 5000, step_check = TRUE)
library(Mhorseshoe)
knitr::opts_chunk$set(echo = TRUE)
example <- Mhorseshoe::approximate_horseshoe(miru$W, miru$Z, iteration = 5000, step_check = TRUE)
library(Mhorseshoe)
knitr::opts_chunk$set(echo = TRUE)
example <- Mhorseshoe::approximate_horseshoe(miru$W, miru$Z, iteration = 5000, step_check = TRUE)
library(Mhorseshoe)
knitr::opts_chunk$set(echo = TRUE)
sum(m_example$spend_time$total_time)
sum(example$spend_time$total_time)
sum(m_example$spend_time$total_time)
# 이름을 다룰 폴더들의 경로(폴더만 있어야 함)
file.dir <- "C:/Users/rkdal/OneDrive/바탕 화면/hitoi시리즈/새 폴더"
library(tidyverse)
folder.list <- list.files(path = file.dir)
folder.dir <- str_c(file.dir, "/", folder.list)
# 이름을 다룰 폴더들의 경로(폴더만 있어야 함)
file.dir <- "C:/Users/rkdal/OneDrive/바탕 화면/hitoi시리즈/새 폴더"
folder.list <- list.files(path = file.dir)
folder.dir <- str_c(file.dir, "/", folder.list)
# 이름을 다룰 폴더들의 경로(폴더만 있어야 함)
file.dir <- "C:/Users/rkdal/OneDrive/바탕 화면/새 폴더"
folder.list <- list.files(path = file.dir)
folder.dir <- str_c(file.dir, "/", folder.list)
# 파일 이름 제한
name.limit <- 4
# 확장자 이름 길이(dot 포함)
extension.length <- 4
# 본문
for (i in 1:length(folder.dir)) {
# 폴더의 파일 리스트 추출
file.list <- list.files(path = folder.dir[i])
for (j in 1:length(file.list)) {
# 이전 이름
prevname <- str_c(folder.dir[i], "/", file.list[j])
# 이름 변경
while (str_length(file.list[j]) < name.limit + extension.length) {
file.list[j] <- str_c("0", file.list[j])
newname <- str_c(folder.dir[i], "/", file.list[j])
file.rename(from = prevname, to = newname)
prevname <- newname
}
}
}
# 이름을 다룰 폴더들의 경로(폴더만 있어야 함)
total_file_dir <- "C:/Users/rkdal/OneDrive/바탕 화면/새 폴더"
total_file_list <- list.files(path = total_file_dir)
total_folder_dir <- paste0(total_file_dir, "/", total_file_list)
for (k in 1:length(total_folder_dir)) {
file_dir <- total_folder_dir[k]
folder_dir <- list.dirs(path = file_dir)[-1]
# 파일 번호 부여 패턴 설정
total_file_length <- length(list.files(path = folder_dir))
name_limit <- str_length(as.character(total_file_length))
start_number <- 1
# 각 폴더에 대한 반복문
for (i in 1:length(folder_dir)) {
file_pattern <- str_split(list.files(path = folder_dir[i]), pattern = "\\.")
for (j in 1:length(file_pattern)) {
existing_dir <- paste0(folder_dir[i], "/",
file_pattern[[j]][1], ".", file_pattern[[j]][2])
need_zero <- name_limit - str_length(as.character(start_number))
new_dir <- paste0(file_dir, "/",
str_dup("0", need_zero), start_number, ".", file_pattern[[j]][2])
file.copy(from = existing_dir, to = new_dir)
start_number <- start_number + 1
}
}
}
# 이름을 다룰 폴더들의 경로(폴더만 있어야 함)
total_file_dir <- "C:/Users/rkdal/OneDrive/바탕 화면/새 폴더"
total_file_list <- list.files(path = total_file_dir)
total_folder_dir <- paste0(total_file_dir, "/", total_file_list)
for (k in 1:length(total_folder_dir)) {
file_dir <- total_folder_dir[k]
folder_dir <- list.dirs(path = file_dir)[-1]
# 파일 번호 부여 패턴 설정
total_file_length <- length(list.files(path = folder_dir))
name_limit <- str_length(as.character(total_file_length))
start_number <- 1
# 각 폴더에 대한 반복문
for (i in 1:length(folder_dir)) {
file_pattern <- str_split(list.files(path = folder_dir[i]), pattern = "\\.")
for (j in 1:length(file_pattern)) {
existing_dir <- paste0(folder_dir[i], "/",
file_pattern[[j]][1], ".", file_pattern[[j]][2])
need_zero <- name_limit - str_length(as.character(start_number))
new_dir <- paste0(file_dir, "/",
str_dup("0", need_zero), start_number, ".", file_pattern[[j]][2])
file.copy(from = existing_dir, to = new_dir)
start_number <- start_number + 1
}
}
}
library(tidyverse)
# 이름을 다룰 폴더들의 경로(폴더만 있어야 함)
total_file_dir <- "C:/Users/rkdal/OneDrive/바탕 화면/새 폴더"
total_file_list <- list.files(path = total_file_dir)
total_folder_dir <- paste0(total_file_dir, "/", total_file_list)
for (k in 1:length(total_folder_dir)) {
file_dir <- total_folder_dir[k]
folder_dir <- list.dirs(path = file_dir)[-1]
# 파일 번호 부여 패턴 설정
total_file_length <- length(list.files(path = folder_dir))
name_limit <- str_length(as.character(total_file_length))
start_number <- 1
# 각 폴더에 대한 반복문
for (i in 1:length(folder_dir)) {
file_pattern <- str_split(list.files(path = folder_dir[i]), pattern = "\\.")
for (j in 1:length(file_pattern)) {
existing_dir <- paste0(folder_dir[i], "/",
file_pattern[[j]][1], ".", file_pattern[[j]][2])
need_zero <- name_limit - str_length(as.character(start_number))
new_dir <- paste0(file_dir, "/",
str_dup("0", need_zero), start_number, ".", file_pattern[[j]][2])
file.copy(from = existing_dir, to = new_dir)
start_number <- start_number + 1
}
}
}
# 이름을 다룰 폴더들의 경로(폴더만 있어야 함)
total_file_dir <- "C:/Users/rkdal/OneDrive/바탕 화면/새 폴더"
total_file_list <- list.files(path = total_file_dir)
total_folder_dir <- paste0(total_file_dir, "/", total_file_list)
for (k in 1:length(total_folder_dir)) {
file_dir <- total_folder_dir[k]
folder_dir <- list.dirs(path = file_dir)[-1]
# 파일 번호 부여 패턴 설정
total_file_length <- length(list.files(path = folder_dir))
name_limit <- str_length(as.character(total_file_length))
start_number <- 1
# 각 폴더에 대한 반복문
for (i in 1:length(folder_dir)) {
file_pattern <- str_split(list.files(path = folder_dir[i]), pattern = "\\.")
for (j in 1:length(file_pattern)) {
existing_dir <- paste0(folder_dir[i], "/",
file_pattern[[j]][1], ".", file_pattern[[j]][2])
need_zero <- name_limit - str_length(as.character(start_number))
new_dir <- paste0(file_dir, "/",
str_dup("0", need_zero), start_number, ".", file_pattern[[j]][2])
file.copy(from = existing_dir, to = new_dir)
start_number <- start_number + 1
}
}
}
# 이름을 다룰 폴더들의 경로(폴더만 있어야 함)
total_file_dir <- "C:/Users/rkdal/OneDrive/바탕 화면/새 폴더"
total_file_list <- list.files(path = total_file_dir)
total_folder_dir <- paste0(total_file_dir, "/", total_file_list)
for (k in 1:length(total_folder_dir)) {
file_dir <- total_folder_dir[k]
folder_dir <- list.dirs(path = file_dir)[-1]
# 파일 번호 부여 패턴 설정
total_file_length <- length(list.files(path = folder_dir))
name_limit <- str_length(as.character(total_file_length))
start_number <- 1
# 각 폴더에 대한 반복문
for (i in 1:length(folder_dir)) {
file_pattern <- str_split(list.files(path = folder_dir[i]), pattern = "\\.")
for (j in 1:length(file_pattern)) {
existing_dir <- paste0(folder_dir[i], "/",
file_pattern[[j]][1], ".", file_pattern[[j]][2])
need_zero <- name_limit - str_length(as.character(start_number))
new_dir <- paste0(file_dir, "/",
str_dup("0", need_zero), start_number, ".", file_pattern[[j]][2])
file.copy(from = existing_dir, to = new_dir)
start_number <- start_number + 1
}
}
}
library(tidyverse)
# 이름을 다룰 폴더들의 경로(폴더만 있어야 함)
total_file_dir <- "C:/Users/rkdal/OneDrive/바탕 화면/새 폴더"
total_file_list <- list.files(path = total_file_dir)
total_folder_dir <- paste0(total_file_dir, "/", total_file_list)
for (k in 1:length(total_folder_dir)) {
file_dir <- total_folder_dir[k]
folder_dir <- list.dirs(path = file_dir)[-1]
# 파일 번호 부여 패턴 설정
total_file_length <- length(list.files(path = folder_dir))
name_limit <- str_length(as.character(total_file_length))
start_number <- 1
# 각 폴더에 대한 반복문
for (i in 1:length(folder_dir)) {
file_pattern <- str_split(list.files(path = folder_dir[i]), pattern = "\\.")
for (j in 1:length(file_pattern)) {
existing_dir <- paste0(folder_dir[i], "/",
file_pattern[[j]][1], ".", file_pattern[[j]][2])
need_zero <- name_limit - str_length(as.character(start_number))
new_dir <- paste0(file_dir, "/",
str_dup("0", need_zero), start_number, ".", file_pattern[[j]][2])
file.copy(from = existing_dir, to = new_dir)
start_number <- start_number + 1
}
}
}
install.packages("roxygen2")
install.packages("devtools", "testthat")
install.packages("invgamma")
library(Mhorseshoe)
library(invgamma)
remove.packages("invgamma")
install.packages(invgamma)
install.packages("invgamma")
install.packages("invgamma")
library(invgamma)
rinvgamma(n = 10000, shape = 5, rate = 5)
mean(rinvgamma(n = 10000, shape = 5, rate = 5))
mean(rinvgamma(n = 10000, shape = 10, rate = 5))
mean(rgamma(n = 10000, shape = 10, rate = 5))
mean(1/rgamma(n = 10000, shape = 10, rate = 5))
mean(1/rgamma(n = 10000, shape = 30, rate = 5))
mean(rinvgamma(n = 10000, shape = 30, rate = 5))
?rgamma
?horseshoe
install.packages("horseshoe")
?horseshoe
library(horseshoe)
?horseshoe
.Machine$double.eps
?lm
?structure
library(Mhorseshoe)
1 -
5
1 -
5
1 -
5
1 - 5
- 5
1 -
5
- 5
-5
?horseshoe
use_mit_license()
use_mit_licence()
use_mit_license()
install.packages("usethis")
use_mit_license()
usethis::use_mit_license()
?horseshoe()
?horseshoe
