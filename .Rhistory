# global shrinkage parameter trace plot
ggplot(data = data.frame(X = 1:length(global_parameter), Y = log(global_parameter))) +
geom_line(mapping = aes(x = X, y = Y))
mean(log(global_parameter[2501:5000]))
# local shrinkage parameter trace plot(non-zero)
for (i in 1:length(non_zero_index)) {
print(ggplot(data = data.frame(X = 2501:nrow(local_parameter),
Y = local_parameter[2501:5000, non_zero_index[i]])) +
geom_line(mapping = aes(x = X, y = Y)) +
labs(x = str_c("eta ", non_zero_index[i]), y = "value") +
coord_cartesian(ylim = c(min(local_parameter[, non_zero_index[i]]),
max(local_parameter[2501:5000, non_zero_index[i]]))))
print(mean(local_parameter[2501:5000, non_zero_index[i]]))
}
N <- 300
p <- 1000
W <- Mhorseshoe::make_W(N = N, p = p)
standardized_W <- scale(W[,-1], center = TRUE, scale = TRUE)
response_list <- Mhorseshoe::make_response(standardized_W, non_zero = 30,
SD = 1, fixed_coefficients = 10)
z <- response_list[[1]]
non_zero_index <- response_list[[2]]
non_zero_coefficents <- response_list[[3]]
# approximate 모델 적합
fit_Mhorseshoe <- Mhorseshoe::approximate_algorithm(standardized_W, z,
iteration = 5000, s = 0.01,
xi = 1, sigma = 1, w = 0,
step_check = FALSE)
beta <- fit_Mhorseshoe$beta
global_parameter <- fit_Mhorseshoe$global_shrinkage_parameter
local_parameter <- fit_Mhorseshoe$local_shrinkage_parameter
sigma <- fit_Mhorseshoe$sigma_parameter
# 시각화
# global shrinkage parameter trace plot
ggplot(data = data.frame(X = 1:length(global_parameter), Y = log(global_parameter))) +
geom_line(mapping = aes(x = X, y = Y))
mean(log(global_parameter[2501:5000]))
# local shrinkage parameter trace plot(non-zero)
for (i in 1:length(non_zero_index)) {
print(ggplot(data = data.frame(X = 2501:nrow(local_parameter),
Y = local_parameter[2501:5000, non_zero_index[i]])) +
geom_line(mapping = aes(x = X, y = Y)) +
labs(x = str_c("eta ", non_zero_index[i]), y = "value") +
coord_cartesian(ylim = c(min(local_parameter[, non_zero_index[i]]),
max(local_parameter[2501:5000, non_zero_index[i]]))))
print(mean(local_parameter[2501:5000, non_zero_index[i]]))
}
# approximate 모델 적합
fit_Mhorseshoe <- Mhorseshoe::approximate_algorithm(standardized_W, z,
iteration = 5000, s = 0.01,
xi = 1, sigma = 1, w = 0,
step_check = FALSE)
beta <- fit_Mhorseshoe$beta
global_parameter <- fit_Mhorseshoe$global_shrinkage_parameter
local_parameter <- fit_Mhorseshoe$local_shrinkage_parameter
sigma <- fit_Mhorseshoe$sigma_parameter
# 시각화
# global shrinkage parameter trace plot
ggplot(data = data.frame(X = 1:length(global_parameter), Y = log(global_parameter))) +
geom_line(mapping = aes(x = X, y = Y))
mean(log(global_parameter[2501:5000]))
# local shrinkage parameter trace plot(non-zero)
for (i in 1:length(non_zero_index)) {
print(ggplot(data = data.frame(X = 2501:nrow(local_parameter),
Y = local_parameter[2501:5000, non_zero_index[i]])) +
geom_line(mapping = aes(x = X, y = Y)) +
labs(x = str_c("eta ", non_zero_index[i]), y = "value") +
coord_cartesian(ylim = c(min(local_parameter[, non_zero_index[i]]),
max(local_parameter[2501:5000, non_zero_index[i]]))))
print(mean(local_parameter[2501:5000, non_zero_index[i]]))
}
N <- 300
p <- 1000
W <- Mhorseshoe::make_W(N = N, p = p)
standardized_W <- scale(W[,-1], center = TRUE, scale = TRUE)
response_list <- Mhorseshoe::make_response(standardized_W, non_zero = 30,
SD = 5, fixed_coefficients = 10)
z <- response_list[[1]]
non_zero_index <- response_list[[2]]
non_zero_coefficents <- response_list[[3]]
# approximate 모델 적합
fit_Mhorseshoe <- Mhorseshoe::approximate_algorithm(standardized_W, z,
iteration = 5000, s = 0.01,
xi = 1, sigma = 1, w = 0,
step_check = FALSE)
beta <- fit_Mhorseshoe$beta
global_parameter <- fit_Mhorseshoe$global_shrinkage_parameter
local_parameter <- fit_Mhorseshoe$local_shrinkage_parameter
sigma <- fit_Mhorseshoe$sigma_parameter
# 시각화
# global shrinkage parameter trace plot
ggplot(data = data.frame(X = 1:length(global_parameter), Y = log(global_parameter))) +
geom_line(mapping = aes(x = X, y = Y))
mean(log(global_parameter[2501:5000]))
# sigma trace plot
ggplot(data = data.frame(X = 100:length(sigma), Y = sigma[100:length(sigma)])) +
geom_line(mapping = aes(x = X, y = Y))
# sigma trace plot
ggplot(data = data.frame(X = 100:length(sigma), Y = sigma[100:length(sigma)])) +
geom_line(mapping = aes(x = X, y = Y))
# local shrinkage parameter trace plot(non-zero)
for (i in 1:length(non_zero_index)) {
print(ggplot(data = data.frame(X = 2501:nrow(local_parameter),
Y = local_parameter[2501:5000, non_zero_index[i]])) +
geom_line(mapping = aes(x = X, y = Y)) +
labs(x = str_c("eta ", non_zero_index[i]), y = "value") +
coord_cartesian(ylim = c(min(local_parameter[, non_zero_index[i]]),
max(local_parameter[2501:5000, non_zero_index[i]]))))
print(mean(local_parameter[2501:5000, non_zero_index[i]]))
}
# beta trace plot 확인
for (i in 1:length(non_zero_index)) {
print(ggplot(data = data.frame(X = 1:nrow(beta), Y = beta[, non_zero_index[i]])) + geom_line(mapping = aes(x = X, y = Y)) + labs(x = str_c("beta ", non_zero_index[i]), y = "value", title = str_c("true value = ", non_zero_coefficents[i])) + coord_cartesian(ylim = c(min(beta[, non_zero_index[i]]),max(beta[, non_zero_index[i]]))))
}
# sigma trace plot
ggplot(data = data.frame(X = 100:length(sigma), Y = sigma[100:length(sigma)])) +
geom_line(mapping = aes(x = X, y = Y))
mean(log(global_parameter[2501:5000]))
c(rep(1, 5), rep(5, 5))
N <- 300
p <- 1000
W <- Mhorseshoe::make_W(N = N, p = p)
standardized_W <- scale(W[,-1], center = TRUE, scale = TRUE)
response_list <- Mhorseshoe::make_response(standardized_W, non_zero = 30,
SD = 1,
fixed_coefficients = c(rep(1, 10),
rep(5, 10),
rep(10, 10)))
z <- response_list[[1]]
non_zero_index <- response_list[[2]]
non_zero_coefficents <- response_list[[3]]
# approximate 모델 적합
fit_Mhorseshoe <- Mhorseshoe::approximate_algorithm(standardized_W, z,
iteration = 5000, s = 0.01,
xi = 1, sigma = 1, w = 0,
step_check = FALSE)
beta <- fit_Mhorseshoe$beta
global_parameter <- fit_Mhorseshoe$global_shrinkage_parameter
local_parameter <- fit_Mhorseshoe$local_shrinkage_parameter
sigma <- fit_Mhorseshoe$sigma_parameter
# 시각화
# global shrinkage parameter trace plot
ggplot(data = data.frame(X = 1:length(global_parameter), Y = log(global_parameter))) +
geom_line(mapping = aes(x = X, y = Y))
mean(log(global_parameter[2501:5000]))
# local shrinkage parameter trace plot(non-zero)
for (i in 1:length(non_zero_index)) {
print(ggplot(data = data.frame(X = 2501:nrow(local_parameter),
Y = local_parameter[2501:5000, non_zero_index[i]])) +
geom_line(mapping = aes(x = X, y = Y)) +
labs(x = str_c("eta ", non_zero_index[i]), y = "value") +
coord_cartesian(ylim = c(min(local_parameter[, non_zero_index[i]]),
max(local_parameter[2501:5000, non_zero_index[i]]))))
print(mean(local_parameter[2501:5000, non_zero_index[i]]))
}
# beta trace plot 확인
for (i in 1:length(non_zero_index)) {
print(ggplot(data = data.frame(X = 1:nrow(beta), Y = beta[, non_zero_index[i]])) + geom_line(mapping = aes(x = X, y = Y)) + labs(x = str_c("beta ", non_zero_index[i]), y = "value", title = str_c("true value = ", non_zero_coefficents[i])) + coord_cartesian(ylim = c(min(beta[, non_zero_index[i]]),max(beta[, non_zero_index[i]]))))
}
# approximate 모델 적합
fit_Mhorseshoe <- Mhorseshoe::approximate_algorithm(standardized_W, z,
iteration = 5000, s = 0.01,
xi = 1, sigma = 1, w = 0,
step_check = FALSE)
beta <- fit_Mhorseshoe$beta
global_parameter <- fit_Mhorseshoe$global_shrinkage_parameter
local_parameter <- fit_Mhorseshoe$local_shrinkage_parameter
sigma <- fit_Mhorseshoe$sigma_parameter
# 시각화
# global shrinkage parameter trace plot
ggplot(data = data.frame(X = 1:length(global_parameter), Y = log(global_parameter))) +
geom_line(mapping = aes(x = X, y = Y))
mean(log(global_parameter[2501:5000]))
# 시각화
# global shrinkage parameter trace plot
ggplot(data = data.frame(X = 1:length(global_parameter), Y = log(global_parameter))) +
geom_line(mapping = aes(x = X, y = Y))
# local shrinkage parameter trace plot(non-zero)
for (i in 1:length(non_zero_index)) {
print(ggplot(data = data.frame(X = 2501:nrow(local_parameter),
Y = local_parameter[2501:5000, non_zero_index[i]])) +
geom_line(mapping = aes(x = X, y = Y)) +
labs(x = str_c("eta ", non_zero_index[i]), y = "value") +
coord_cartesian(ylim = c(min(local_parameter[, non_zero_index[i]]),
max(local_parameter[2501:5000, non_zero_index[i]]))))
print(mean(local_parameter[2501:5000, non_zero_index[i]]))
}
N <- 300
p <- 1000
W <- Mhorseshoe::make_W(N = N, p = p)
standardized_W <- scale(W[,-1], center = TRUE, scale = TRUE)
response_list <- Mhorseshoe::make_response(standardized_W, non_zero = 30,
SD = 1,
fixed_coefficients = c(rep(1, 10),
rep(5, 15),
rep(10, 5)))
z <- response_list[[1]]
non_zero_index <- response_list[[2]]
non_zero_coefficents <- response_list[[3]]
# approximate 모델 적합
fit_Mhorseshoe <- Mhorseshoe::approximate_algorithm(standardized_W, z,
iteration = 5000, s = 0.01,
xi = 1, sigma = 1, w = 0,
step_check = FALSE)
beta <- fit_Mhorseshoe$beta
global_parameter <- fit_Mhorseshoe$global_shrinkage_parameter
local_parameter <- fit_Mhorseshoe$local_shrinkage_parameter
sigma <- fit_Mhorseshoe$sigma_parameter
# 시각화
# global shrinkage parameter trace plot
ggplot(data = data.frame(X = 1:length(global_parameter), Y = log(global_parameter))) +
geom_line(mapping = aes(x = X, y = Y))
mean(log(global_parameter[2501:5000]))
# approximate 모델 적합
fit_Mhorseshoe <- Mhorseshoe::approximate_algorithm(standardized_W, z,
iteration = 5000, s = 0.01,
xi = 1, sigma = 1, w = 0,
step_check = FALSE)
beta <- fit_Mhorseshoe$beta
global_parameter <- fit_Mhorseshoe$global_shrinkage_parameter
local_parameter <- fit_Mhorseshoe$local_shrinkage_parameter
sigma <- fit_Mhorseshoe$sigma_parameter
# 시각화
# global shrinkage parameter trace plot
ggplot(data = data.frame(X = 1:length(global_parameter), Y = log(global_parameter))) +
geom_line(mapping = aes(x = X, y = Y))
mean(log(global_parameter[2501:5000]))
N <- 300
p <- 1000
W <- Mhorseshoe::make_W(N = N, p = p)
standardized_W <- scale(W[,-1], center = TRUE, scale = TRUE)
response_list <- Mhorseshoe::make_response(standardized_W, non_zero = 30,
SD = 1,
fixed_coefficients = c(rep(0.1, 10),
rep(0.5, 15),
rep(1, 5)))
z <- response_list[[1]]
non_zero_index <- response_list[[2]]
non_zero_coefficents <- response_list[[3]]
# approximate 모델 적합
fit_Mhorseshoe <- Mhorseshoe::approximate_algorithm(standardized_W, z,
iteration = 5000, s = 0.01,
xi = 1, sigma = 1, w = 0,
step_check = FALSE)
beta <- fit_Mhorseshoe$beta
global_parameter <- fit_Mhorseshoe$global_shrinkage_parameter
local_parameter <- fit_Mhorseshoe$local_shrinkage_parameter
sigma <- fit_Mhorseshoe$sigma_parameter
# 시각화
# global shrinkage parameter trace plot
ggplot(data = data.frame(X = 1:length(global_parameter), Y = log(global_parameter))) +
geom_line(mapping = aes(x = X, y = Y))
mean(log(global_parameter[2501:5000]))
N <- 300
p <- 1000
W <- Mhorseshoe::make_W(N = N, p = p)
standardized_W <- scale(W[,-1], center = TRUE, scale = TRUE)
response_list <- Mhorseshoe::make_response(standardized_W, non_zero = 30,
SD = 0.1,
fixed_coefficients = c(rep(0.1, 10),
rep(0.5, 15),
rep(1, 5)))
z <- response_list[[1]]
non_zero_index <- response_list[[2]]
non_zero_coefficents <- response_list[[3]]
# approximate 모델 적합
fit_Mhorseshoe <- Mhorseshoe::approximate_algorithm(standardized_W, z,
iteration = 5000, s = 0.01,
xi = 1, sigma = 1, w = 0,
step_check = FALSE)
beta <- fit_Mhorseshoe$beta
global_parameter <- fit_Mhorseshoe$global_shrinkage_parameter
local_parameter <- fit_Mhorseshoe$local_shrinkage_parameter
sigma <- fit_Mhorseshoe$sigma_parameter
# 시각화
# global shrinkage parameter trace plot
ggplot(data = data.frame(X = 1:length(global_parameter), Y = log(global_parameter))) +
geom_line(mapping = aes(x = X, y = Y))
mean(log(global_parameter[2501:5000]))
# local shrinkage parameter trace plot(non-zero)
for (i in 1:length(non_zero_index)) {
print(ggplot(data = data.frame(X = 2501:nrow(local_parameter),
Y = local_parameter[2501:5000, non_zero_index[i]])) +
geom_line(mapping = aes(x = X, y = Y)) +
labs(x = str_c("eta ", non_zero_index[i]), y = "value") +
coord_cartesian(ylim = c(min(local_parameter[, non_zero_index[i]]),
max(local_parameter[2501:5000, non_zero_index[i]]))))
print(mean(local_parameter[2501:5000, non_zero_index[i]]))
}
N <- 300
p <- 1000
W <- Mhorseshoe::make_W(N = N, p = p)
standardized_W <- scale(W[,-1], center = TRUE, scale = TRUE)
response_list <- Mhorseshoe::make_response(standardized_W, non_zero = 30,
SD = 0.1,
fixed_coefficients = c(rep(0.1, 10),
rep(0.5, 10),
rep(1, 10)))
z <- response_list[[1]]
non_zero_index <- response_list[[2]]
non_zero_coefficents <- response_list[[3]]
# approximate 모델 적합
fit_Mhorseshoe <- Mhorseshoe::approximate_algorithm(standardized_W, z,
iteration = 5000, s = 0.01,
xi = 1, sigma = 1, w = 0,
step_check = FALSE)
beta <- fit_Mhorseshoe$beta
global_parameter <- fit_Mhorseshoe$global_shrinkage_parameter
local_parameter <- fit_Mhorseshoe$local_shrinkage_parameter
sigma <- fit_Mhorseshoe$sigma_parameter
# 시각화
# global shrinkage parameter trace plot
ggplot(data = data.frame(X = 1:length(global_parameter), Y = log(global_parameter))) +
geom_line(mapping = aes(x = X, y = Y))
mean(log(global_parameter[2501:5000]))
library(Mhorseshoe)
knitr::opts_chunk$set(echo = TRUE)
N <- 300
p <- 1000
W <- Mhorseshoe::make_W(N = N, p = p)
standardized_W <- scale(W[,-1], center = TRUE, scale = TRUE)
response_list <- Mhorseshoe::make_response(standardized_W, non_zero = 30,
SD = 0.1,
fixed_coefficients = 1)
z <- response_list[[1]]
non_zero_index <- response_list[[2]]
non_zero_coefficents <- response_list[[3]]
# approximate 모델 적합
fit_Mhorseshoe <- Mhorseshoe::approximate_algorithm(standardized_W, z,
iteration = 5000, s = 0.01,
xi = 1, sigma = 1, w = 0,
step_check = TRUE)
beta <- fit_Mhorseshoe$beta
global_parameter <- fit_Mhorseshoe$global_shrinkage_parameter
local_parameter <- fit_Mhorseshoe$local_shrinkage_parameter
sigma <- fit_Mhorseshoe$sigma_parameter
View(fit_Mhorseshoe$spand_time)
spend_time <- fit_Mhorseshoe$spand_time
View(spend_time)
install.packages("foreach")
library(foreach)
return(i)
i
foreach(i = 1:5) %do%
{
i
}
i
foreach(i = 1:5) %do%
{
i
}
foreach(i = 1:5, combine = c) %do%
{
i
}
return(i)
foreach(i = 1:5, combine = "c") %do%
{
i
}
foreach(i = 1:5, combine = "c") %do%
{
i
}
foreach(i = 1:5, combine = c) %do%
{
i
}
foreach(i = 1:5, .combine = c) %do%
{
i
}
library(Mhorseshoe)
knitr::opts_chunk$set(echo = TRUE)
# approximate 모델 적합
fit_Mhorseshoe <- Mhorseshoe::approximate_algorithm(standardized_W, z,
iteration = 5000, s = 0.01,
xi = 1, sigma = 1, w = 0,
step_check = TRUE)
library(Mhorseshoe)
library(Mhorseshoe)
knitr::opts_chunk$set(echo = TRUE)
# approximate 모델 적합
fit_Mhorseshoe <- Mhorseshoe::approximate_algorithm(standardized_W, z,
iteration = 5000, s = 0.01,
xi = 1, sigma = 1, w = 0,
step_check = TRUE)
beta <- fit_Mhorseshoe$beta
global_parameter <- fit_Mhorseshoe$global_shrinkage_parameter
local_parameter <- fit_Mhorseshoe$local_shrinkage_parameter
sigma <- fit_Mhorseshoe$sigma_parameter
spend_time <- fit_Mhorseshoe$spand_time
library(Mhorseshoe)
knitr::opts_chunk$set(echo = TRUE)
# approximate 모델 적합
fit_Mhorseshoe <- Mhorseshoe::approximate_algorithm(standardized_W, z,
iteration = 5000, s = 0.01,
xi = 1, sigma = 1, w = 0,
step_check = TRUE)
beta <- fit_Mhorseshoe$beta
global_parameter <- fit_Mhorseshoe$global_shrinkage_parameter
local_parameter <- fit_Mhorseshoe$local_shrinkage_parameter
sigma <- fit_Mhorseshoe$sigma_parameter
spend_time <- fit_Mhorseshoe$spand_time
View(spend_time)
library(Mhorseshoe)
knitr::opts_chunk$set(echo = TRUE)
N <- 300
p <- 1000
W <- Mhorseshoe::make_W(N = N, p = p)
standardized_W <- scale(W[,-1], center = TRUE, scale = TRUE)
response_list <- Mhorseshoe::make_response(standardized_W, non_zero = 30,
SD = 0.1,
fixed_coefficients = 1)
z <- response_list[[1]]
non_zero_index <- response_list[[2]]
non_zero_coefficents <- response_list[[3]]
# approximate 모델 적합
fit_Mhorseshoe <- Mhorseshoe::approximate_algorithm(standardized_W, z,
iteration = 5000, s = 0.01,
xi = 1, sigma = 1, w = 0,
step_check = TRUE)
beta <- fit_Mhorseshoe$beta
global_parameter <- fit_Mhorseshoe$global_shrinkage_parameter
local_parameter <- fit_Mhorseshoe$local_shrinkage_parameter
sigma <- fit_Mhorseshoe$sigma_parameter
spend_time <- fit_Mhorseshoe$spand_time
View(spend_time)
tic()
# approximate 모델 적합
fit_Mhorseshoe <- Mhorseshoe::approximate_algorithm(standardized_W, z,
iteration = 5000, s = 0.01,
xi = 1, sigma = 1, w = 0,
step_check = FALSE)
toc()
library(Mhorseshoe)
knitr::opts_chunk$set(echo = TRUE)
tic()
# approximate 모델 적합
fit_Mhorseshoe <- Mhorseshoe::approximate_algorithm(standardized_W, z,
iteration = 5000, s = 0.01,
xi = 1, sigma = 1, w = 0,
step_check = FALSE)
toc()
tic()
# approximate 모델 적합
fit_Mhorseshoe <- Mhorseshoe::approximate_algorithm(standardized_W, z,
iteration = 5000, s = 0.01,
xi = 1, sigma = 1, w = 0,
step_check = FALSE)
toc()
tic()
# approximate 모델 적합
fit_Mhorseshoe <- Mhorseshoe::approximate_algorithm(standardized_W, z,
iteration = 5000, s = 0.01,
xi = 1, sigma = 1, w = 0,
step_check = FALSE)
toc()
# approximate 모델 적합
fit_Mhorseshoe <- Mhorseshoe::approximate_algorithm(standardized_W, z,
iteration = 5000, s = 0.01,
xi = 1, sigma = 1, w = 0,
step_check = TRUE)
View(fit_Mhorseshoe$spand_time)
sum(fit_Mhorseshoe$spand_time$step1)
# approximate 모델 적합
fit_Mhorseshoe <- Mhorseshoe::approximate_algorithm(standardized_W, z,
iteration = 5000, s = 0.01,
xi = 1, sigma = 1, w = 0,
step_check = TRUE)
sum(fit_Mhorseshoe$spand_time$step1)
library(Mhorseshoe)
# approximate 모델 적합
fit_Mhorseshoe <- Mhorseshoe::approximate_algorithm(standardized_W, z,
iteration = 5000, s = 0.01,
xi = 1, sigma = 1, w = 0,
step_check = TRUE)
knitr::opts_chunk$set(echo = TRUE)
sum(fit_Mhorseshoe$spand_time$step1)
tic()
# approximate 모델 적합
fit_Mhorseshoe <- Mhorseshoe::approximate_algorithm(standardized_W, z,
iteration = 5000, s = 0.01,
xi = 1, sigma = 1, w = 0,
step_check = FALSE)
toc()
tic()
# approximate 모델 적합
fit_Mhorseshoe <- Mhorseshoe::approximate_algorithm(standardized_W, z,
iteration = 5000, s = 0.01,
xi = 1, sigma = 1, w = 0,
step_check = FALSE)
toc()
library(Mhorseshoe)
knitr::opts_chunk$set(echo = TRUE)
# approximate 모델 적합
fit_Mhorseshoe <- Mhorseshoe::approximate_algorithm(standardized_W, z,
iteration = 5000, s = 0.01,
xi = 1, sigma = 1, w = 0,
step_check = FALSE)
tic()
# approximate 모델 적합
fit_Mhorseshoe <- Mhorseshoe::approximate_algorithm(standardized_W, z,
iteration = 5000, s = 0.01,
xi = 1, sigma = 1, w = 0,
step_check = FALSE)
toc()
View(spend_time)
knitr::opts_chunk$set(echo = TRUE)
(4.37*20 + 4.5*3 + 4.17*18 + 4.25*19 + 3.82*15 + 4*7)/(20+3+18+19+15+9+7)
(4.37*20 + 4.5*3 + 4.17*18 + 4.25*19 + 3.82*15 + 4*7)/(20+3+18+19+15+7)
