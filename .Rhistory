approximate_active_set = spend_time1$total_active_column[51:5000],
modified_active_set = spend_time2$`number of active set columns`[51:5000])) +
geom_line(mapping = aes(x = X, y = approximate_active_set, color = "red")) +
geom_line(mapping = aes(x = X, y = modified_active_set, color = "blue")) +
scale_color_manual(values = c("red", "blue"), breaks = c("red", "blue"),
labels = c("approximate_active_set", "modified_active_set")) +
labs(x = "iteration", y = "number of active variable")
ggplot(data = data.frame(X = 51:nrow(spend_time1),
approximate_active_set = spend_time1$total_active_column[51:5000],
modified_active_set = spend_time2$`number of active set columns`[51:5000])) +
geom_line(mapping = aes(x = X, y = approximate_active_set, color = "red")) +
geom_line(mapping = aes(x = X, y = modified_active_set, color = "blue")) +
scale_color_manual(values = c("red", "blue"), breaks = c("red", "blue"),
labels = c("approximate_active_set", "modified_active_set")) +
labs(x = "iteration", y = "number of active variable")
# 시뮬레이션 데이터
N <- 500
p <- 3000 # p가 클수록 차이가 조금 있음.
W <- Mhorseshoe::make_W(N = N, p = p)
W <- W[, -1]
response_list <- Mhorseshoe::make_response(W, non_zero = 20,
SD = 0.1,
fixed_coefficients = 0.5)
z <- response_list[[1]]
non_zero_index <- response_list[[2]]
non_zero_coefficents <- response_list[[3]]
# sigma shrinkage parameter trace plot
ggplot(data = data.frame(X = 2001:length(sigma1), Y = sigma1[2001:length(sigma1)])) +
geom_line(mapping = aes(x = X, y = Y))
# sigma shrinkage parameter trace plot
ggplot(data = data.frame(X = 2001:length(sigma2), Y = sigma2[2001:length(sigma2)])) +
geom_line(mapping = aes(x = X, y = Y))
# 시뮬레이션 데이터
N <- 500
p <- 3000 # p가 클수록 차이가 조금 있음.
W <- Mhorseshoe::make_W(N = N, p = p)
W <- W[, -1]
response_list <- Mhorseshoe::make_response(W, non_zero = 20,
SD = 0.1,
fixed_coefficients = 0.3)
z <- response_list[[1]]
non_zero_index <- response_list[[2]]
non_zero_coefficents <- response_list[[3]]
# modified model
fit_Mhorseshoe <- modified_approximate_algorithm(W, z, iteration = 5000,
fixed_xi = TRUE, xi = exp(20),
step_check = TRUE)
beta2 <- fit_Mhorseshoe$beta
local_parameter2 <- fit_Mhorseshoe$local_shrinkage_parameter
sigma2 <- fit_Mhorseshoe$sigma2
spend_time2 <- fit_Mhorseshoe$spand_time
# beta trace plot 확인
for (i in 1:length(non_zero_index)) {
q <- ggplot(data = data.frame(X = 1:nrow(beta2), Y = beta2[, non_zero_index[i]])) +
geom_line(mapping = aes(x = X, y = Y)) +
labs(x = str_c("beta ", non_zero_index[i]), y = "value",
title = str_c("true value = ", non_zero_coefficents[i])) +
coord_cartesian(ylim = c(min(beta2[, non_zero_index[i]]),max(beta2[, non_zero_index[i]])))
ggsave(paste0("./modified/", "beta", non_zero_index[i], ".png"), q,
width = 40, height = 20, units = "cm")
}
# approximate model
fit_approximate <- Mhorseshoe::approximate_algorithm(W, z,
iteration = 5000, s = 0, xi = exp(20),
step_check = TRUE)
beta1 <- fit_approximate$beta
local_parameter1 <- fit_approximate$local_shrinkage_parameter
sigma1 <- fit_approximate$sigma_parameter
spend_time1 <- fit_approximate$spend_time
# beta trace plot 확인
for (i in 1:length(non_zero_index)) {
q <- ggplot(data = data.frame(X = 1:nrow(beta1), Y = beta1[, non_zero_index[i]])) +
geom_line(mapping = aes(x = X, y = Y)) +
labs(x = str_c("beta ", non_zero_index[i]), y = "value",
title = str_c("true value = ", non_zero_coefficents[i])) +
coord_cartesian(ylim = c(min(beta1[, non_zero_index[i]]),max(beta1[, non_zero_index[i]])))
ggsave(paste0("./approximate/", "beta", non_zero_index[i], ".png"), q,
width = 40, height = 20, units = "cm")
}
# 시뮬레이션 데이터
N <- 500
p <- 3000 # p가 클수록 차이가 조금 있음.
W <- Mhorseshoe::make_W(N = N, p = p)
W <- W[, -1]
response_list <- Mhorseshoe::make_response(W, non_zero = 20,
SD = 1,
fixed_coefficients = 0.1)
z <- response_list[[1]]
non_zero_index <- response_list[[2]]
non_zero_coefficents <- response_list[[3]]
# approximate model
fit_approximate <- Mhorseshoe::approximate_algorithm(W, z,
iteration = 5000, s = 0, xi = exp(20),
step_check = TRUE)
beta1 <- fit_approximate$beta
local_parameter1 <- fit_approximate$local_shrinkage_parameter
sigma1 <- fit_approximate$sigma_parameter
spend_time1 <- fit_approximate$spend_time
# beta trace plot 확인
for (i in 1:length(non_zero_index)) {
q <- ggplot(data = data.frame(X = 1:nrow(beta1), Y = beta1[, non_zero_index[i]])) +
geom_line(mapping = aes(x = X, y = Y)) +
labs(x = str_c("beta ", non_zero_index[i]), y = "value",
title = str_c("true value = ", non_zero_coefficents[i])) +
coord_cartesian(ylim = c(min(beta1[, non_zero_index[i]]),max(beta1[, non_zero_index[i]])))
ggsave(paste0("./approximate/", "beta", non_zero_index[i], ".png"), q,
width = 40, height = 20, units = "cm")
}
# modified model
fit_Mhorseshoe <- modified_approximate_algorithm(W, z, iteration = 5000,
fixed_xi = TRUE, xi = exp(20),
step_check = TRUE)
beta2 <- fit_Mhorseshoe$beta
local_parameter2 <- fit_Mhorseshoe$local_shrinkage_parameter
sigma2 <- fit_Mhorseshoe$sigma2
spend_time2 <- fit_Mhorseshoe$spand_time
# beta trace plot 확인
for (i in 1:length(non_zero_index)) {
q <- ggplot(data = data.frame(X = 1:nrow(beta2), Y = beta2[, non_zero_index[i]])) +
geom_line(mapping = aes(x = X, y = Y)) +
labs(x = str_c("beta ", non_zero_index[i]), y = "value",
title = str_c("true value = ", non_zero_coefficents[i])) +
coord_cartesian(ylim = c(min(beta2[, non_zero_index[i]]),max(beta2[, non_zero_index[i]])))
ggsave(paste0("./modified/", "beta", non_zero_index[i], ".png"), q,
width = 40, height = 20, units = "cm")
}
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(invgamma)
library(MASS)
library(Rcpp)
library(horseshoe)
library(tictoc)
library(Mhorseshoe)
# 시뮬레이션 데이터
N <- 500
p <- 3000 # p가 클수록 차이가 조금 있음.
W <- Mhorseshoe::make_W(N = N, p = p)
W <- W[, -1]
W <- scale(W, center = TRUE, scale = TRUE)
response_list <- Mhorseshoe::make_response(W, non_zero = 20,
SD = 1,
fixed_coefficients = 0.1)
z <- response_list[[1]]
non_zero_index <- response_list[[2]]
non_zero_coefficents <- response_list[[3]]
# modified model
fit_Mhorseshoe <- modified_approximate_algorithm(W, z, iteration = 5000,
fixed_xi = TRUE, xi = exp(20),
step_check = TRUE)
diag(t(W) %*% W)
# 시뮬레이션 데이터
N <- 500
p <- 3000 # p가 클수록 차이가 조금 있음.
W <- Mhorseshoe::make_W(N = N, p = p)
W <- W[, -1]
W <- scale(W, center = TRUE, scale = TRUE)/sqrt(499)
response_list <- Mhorseshoe::make_response(W, non_zero = 20,
SD = 1,
fixed_coefficients = 0.1)
z <- response_list[[1]]
non_zero_index <- response_list[[2]]
non_zero_coefficents <- response_list[[3]]
diag(t(W) %*% W)
# modified model
fit_Mhorseshoe <- modified_approximate_algorithm(W, z, iteration = 5000,
fixed_xi = TRUE, xi = exp(20),
step_check = TRUE)
# 시뮬레이션 데이터
N <- 500
p <- 3000 # p가 클수록 차이가 조금 있음, W만 t(W) %*% W의 대각 성분이 1이 되도록 표준화할 경우 더 shrinkage 시킨다.
W <- Mhorseshoe::make_W(N = N, p = p)
W <- W[, -1]
W <- scale(W, center = TRUE, scale = TRUE)/sqrt(499)
response_list <- Mhorseshoe::make_response(W, non_zero = 20,
SD = 1,
fixed_coefficients = 5)
z <- response_list[[1]]
non_zero_index <- response_list[[2]]
non_zero_coefficents <- response_list[[3]]
# modified model
fit_Mhorseshoe <- modified_approximate_algorithm(W, z, iteration = 5000,
fixed_xi = TRUE, xi = exp(20),
step_check = TRUE)
# modified model
fit_Mhorseshoe <- modified_approximate_algorithm(W, z, iteration = 5000,
fixed_xi = TRUE, xi = exp(15),
step_check = TRUE)
# approximate model
fit_approximate <- Mhorseshoe::approximate_algorithm(W, z,
iteration = 5000, s = 0, xi = exp(15),
step_check = TRUE)
library(Mhorseshoe)
knitr::opts_chunk$set(echo = TRUE)
# modified model
fit_Mhorseshoe <- modified_approximate_algorithm(W, z, iteration = 5000,
fixed_xi = TRUE, xi = exp(15),
step_check = TRUE)
beta2 <- fit_Mhorseshoe$beta
local_parameter2 <- fit_Mhorseshoe$local_shrinkage_parameter
sigma2 <- fit_Mhorseshoe$sigma2
spend_time2 <- fit_Mhorseshoe$spand_time
# beta trace plot 확인
for (i in 1:length(non_zero_index)) {
q <- ggplot(data = data.frame(X = 1:nrow(beta2), Y = beta2[, non_zero_index[i]])) +
geom_line(mapping = aes(x = X, y = Y)) +
labs(x = str_c("beta ", non_zero_index[i]), y = "value",
title = str_c("true value = ", non_zero_coefficents[i])) +
coord_cartesian(ylim = c(min(beta2[, non_zero_index[i]]),max(beta2[, non_zero_index[i]])))
ggsave(paste0("./modified/", "beta", non_zero_index[i], ".png"), q,
width = 40, height = 20, units = "cm")
}
# modified model
fit_Mhorseshoe <- modified_approximate_algorithm(W, z, iteration = 5000,
fixed_xi = FALSE, s = 0.001, xi = exp(15),
step_check = TRUE)
# approximate model
fit_approximate <- Mhorseshoe::approximate_algorithm(W, z,
iteration = 5000, s = 0.001, xi = exp(15),
step_check = TRUE)
beta1 <- fit_approximate$beta
local_parameter1 <- fit_approximate$local_shrinkage_parameter
sigma1 <- fit_approximate$sigma_parameter
spend_time1 <- fit_approximate$spend_time
beta2 <- fit_Mhorseshoe$beta
local_parameter2 <- fit_Mhorseshoe$local_shrinkage_parameter
sigma2 <- fit_Mhorseshoe$sigma2
spend_time2 <- fit_Mhorseshoe$spand_time
# beta trace plot 확인
for (i in 1:length(non_zero_index)) {
q <- ggplot(data = data.frame(X = 1:nrow(beta1), Y = beta1[, non_zero_index[i]])) +
geom_line(mapping = aes(x = X, y = Y)) +
labs(x = str_c("beta ", non_zero_index[i]), y = "value",
title = str_c("true value = ", non_zero_coefficents[i])) +
coord_cartesian(ylim = c(min(beta1[, non_zero_index[i]]),max(beta1[, non_zero_index[i]])))
ggsave(paste0("./approximate/", "beta", non_zero_index[i], ".png"), q,
width = 40, height = 20, units = "cm")
}
# beta trace plot 확인
for (i in 1:length(non_zero_index)) {
q <- ggplot(data = data.frame(X = 1:nrow(beta2), Y = beta2[, non_zero_index[i]])) +
geom_line(mapping = aes(x = X, y = Y)) +
labs(x = str_c("beta ", non_zero_index[i]), y = "value",
title = str_c("true value = ", non_zero_coefficents[i])) +
coord_cartesian(ylim = c(min(beta2[, non_zero_index[i]]),max(beta2[, non_zero_index[i]])))
ggsave(paste0("./modified/", "beta", non_zero_index[i], ".png"), q,
width = 40, height = 20, units = "cm")
}
# modified model
fit_Mhorseshoe <- modified_approximate_algorithm(W, z, iteration = 5000,
fixed_xi = TRUE, xi = exp(15),
step_check = TRUE)
2
beta2 <- fit_Mhorseshoe$beta
local_parameter2 <- fit_Mhorseshoe$local_shrinkage_parameter
sigma2 <- fit_Mhorseshoe$sigma2
spend_time2 <- fit_Mhorseshoe$spand_time
# beta trace plot 확인
for (i in 1:length(non_zero_index)) {
q <- ggplot(data = data.frame(X = 1:nrow(beta2), Y = beta2[, non_zero_index[i]])) +
geom_line(mapping = aes(x = X, y = Y)) +
labs(x = str_c("beta ", non_zero_index[i]), y = "value",
title = str_c("true value = ", non_zero_coefficents[i])) +
coord_cartesian(ylim = c(min(beta2[, non_zero_index[i]]),max(beta2[, non_zero_index[i]])))
ggsave(paste0("./modified/", "beta", non_zero_index[i], ".png"), q,
width = 40, height = 20, units = "cm")
}
# modified model
fit_Mhorseshoe <- modified_approximate_algorithm(W, z, iteration = 5000,
fixed_xi = TRUE, xi = exp(10),
step_check = TRUE)
# modified model
fit_Mhorseshoe <- modified_approximate_algorithm(W, z, iteration = 5000,
fixed_xi = FALSE, s = 0.001, xi = exp(10),
step_check = TRUE)
beta2 <- fit_Mhorseshoe$beta
local_parameter2 <- fit_Mhorseshoe$local_shrinkage_parameter
sigma2 <- fit_Mhorseshoe$sigma2
spend_time2 <- fit_Mhorseshoe$spand_time
# beta trace plot 확인
for (i in 1:length(non_zero_index)) {
q <- ggplot(data = data.frame(X = 1:nrow(beta2), Y = beta2[, non_zero_index[i]])) +
geom_line(mapping = aes(x = X, y = Y)) +
labs(x = str_c("beta ", non_zero_index[i]), y = "value",
title = str_c("true value = ", non_zero_coefficents[i])) +
coord_cartesian(ylim = c(min(beta2[, non_zero_index[i]]),max(beta2[, non_zero_index[i]])))
ggsave(paste0("./modified/", "beta", non_zero_index[i], ".png"), q,
width = 40, height = 20, units = "cm")
}
# modified model
fit_Mhorseshoe <- modified_approximate_algorithm(W, z, iteration = 10000,
fixed_xi = FALSE, s = 0.001, xi = exp(10),
step_check = TRUE)
beta2 <- fit_Mhorseshoe$beta
local_parameter2 <- fit_Mhorseshoe$local_shrinkage_parameter
sigma2 <- fit_Mhorseshoe$sigma2
spend_time2 <- fit_Mhorseshoe$spand_time
log(17141691229)
# beta trace plot 확인
for (i in 1:length(non_zero_index)) {
q <- ggplot(data = data.frame(X = 1:nrow(beta2), Y = beta2[, non_zero_index[i]])) +
geom_line(mapping = aes(x = X, y = Y)) +
labs(x = str_c("beta ", non_zero_index[i]), y = "value",
title = str_c("true value = ", non_zero_coefficents[i])) +
coord_cartesian(ylim = c(min(beta2[, non_zero_index[i]]),max(beta2[, non_zero_index[i]])))
ggsave(paste0("./modified/", "beta", non_zero_index[i], ".png"), q,
width = 40, height = 20, units = "cm")
}
# approximate model
fit_approximate <- Mhorseshoe::approximate_algorithm(W, z,
iteration = 10000, s = 0.001, xi = exp(10),
step_check = TRUE)
beta1 <- fit_approximate$beta
local_parameter1 <- fit_approximate$local_shrinkage_parameter
sigma1 <- fit_approximate$sigma_parameter
spend_time1 <- fit_approximate$spend_time
# beta trace plot 확인
for (i in 1:length(non_zero_index)) {
q <- ggplot(data = data.frame(X = 1:nrow(beta1), Y = beta1[, non_zero_index[i]])) +
geom_line(mapping = aes(x = X, y = Y)) +
labs(x = str_c("beta ", non_zero_index[i]), y = "value",
title = str_c("true value = ", non_zero_coefficents[i])) +
coord_cartesian(ylim = c(min(beta1[, non_zero_index[i]]),max(beta1[, non_zero_index[i]])))
ggsave(paste0("./approximate/", "beta", non_zero_index[i], ".png"), q,
width = 40, height = 20, units = "cm")
}
# modified model
fit_Mhorseshoe <- modified_approximate_algorithm(W, z, iteration = 10000,
fixed_xi = FALSE, s = 0.01, xi = 1,
step_check = TRUE)
# modified model
fit_Mhorseshoe <- modified_approximate_algorithm(W, z, iteration = 10000,
fixed_xi = FALSE, s = 0.001, xi = 1,
step_check = TRUE)
beta2 <- fit_Mhorseshoe$beta
local_parameter2 <- fit_Mhorseshoe$local_shrinkage_parameter
sigma2 <- fit_Mhorseshoe$sigma2
spend_time2 <- fit_Mhorseshoe$spand_time
# beta trace plot 확인
for (i in 1:length(non_zero_index)) {
q <- ggplot(data = data.frame(X = 1:nrow(beta2), Y = beta2[, non_zero_index[i]])) +
geom_line(mapping = aes(x = X, y = Y)) +
labs(x = str_c("beta ", non_zero_index[i]), y = "value",
title = str_c("true value = ", non_zero_coefficents[i])) +
coord_cartesian(ylim = c(min(beta2[, non_zero_index[i]]),max(beta2[, non_zero_index[i]])))
ggsave(paste0("./modified/", "beta", non_zero_index[i], ".png"), q,
width = 40, height = 20, units = "cm")
}
# 시뮬레이션 데이터
N <- 1000
p <- 3000 # p가 클수록 차이가 조금 있음, 할 경우 더 shrinkage 시킨다.  너무 애매모호한 경우에는 그냥 active set을 많이 첨가시켜서 분석하는 것이 더 좋아보임.
W <- Mhorseshoe::make_W(N = N, p = p)
W <- W[, -1]
W <- scale(W, center = TRUE, scale = TRUE)/sqrt(999)
response_list <- Mhorseshoe::make_response(W, non_zero = 20,
SD = 1,
fixed_coefficients = 5)
z <- response_list[[1]]
non_zero_index <- response_list[[2]]
non_zero_coefficents <- response_list[[3]]
diag(t(W) %*% W)
# modified model
fit_Mhorseshoe <- modified_approximate_algorithm(W, z, iteration = 10000,
fixed_xi = FALSE, s = 0.001, xi = exp(10),
step_check = TRUE)
beta2 <- fit_Mhorseshoe$beta
local_parameter2 <- fit_Mhorseshoe$local_shrinkage_parameter
sigma2 <- fit_Mhorseshoe$sigma2
spend_time2 <- fit_Mhorseshoe$spand_time
# beta trace plot 확인
for (i in 1:length(non_zero_index)) {
q <- ggplot(data = data.frame(X = 1:nrow(beta2), Y = beta2[, non_zero_index[i]])) +
geom_line(mapping = aes(x = X, y = Y)) +
labs(x = str_c("beta ", non_zero_index[i]), y = "value",
title = str_c("true value = ", non_zero_coefficents[i])) +
coord_cartesian(ylim = c(min(beta2[, non_zero_index[i]]),max(beta2[, non_zero_index[i]])))
ggsave(paste0("./modified/", "beta", non_zero_index[i], ".png"), q,
width = 40, height = 20, units = "cm")
}
# 시뮬레이션 데이터
N <- 1000
p <- 3000 # p가 클수록 차이가 조금 있음, 할 경우 더 shrinkage 시킨다.  너무 애매모호한 경우에는 그냥 active set을 많이 첨가시켜서 분석하는 것이 더 좋아보임.
W <- Mhorseshoe::make_W(N = N, p = p)
W <- W[, -1]
# W <- scale(W, center = TRUE, scale = TRUE)/sqrt(999)
response_list <- Mhorseshoe::make_response(W, non_zero = 20,
SD = 1,
fixed_coefficients = 5)
z <- response_list[[1]]
non_zero_index <- response_list[[2]]
non_zero_coefficents <- response_list[[3]]
diag(t(W) %*% W)
# modified model
fit_Mhorseshoe <- modified_approximate_algorithm(W, z, iteration = 10000,
fixed_xi = FALSE, s = 0.001, xi = exp(10),
step_check = TRUE)
# modified model
fit_Mhorseshoe <- modified_approximate_algorithm(W, z, iteration = 10000,
fixed_xi = FALSE, s = 0.001, xi = exp(10),
step_check = TRUE)
# 시뮬레이션 데이터
N <- 500
p <- 3000 # p가 클수록 차이가 조금 있음, 할 경우 더 shrinkage 시킨다.  너무 애매모호한 경우에는 그냥 active set을 많이 첨가시켜서 분석하는 것이 더 좋아보임.
W <- Mhorseshoe::make_W(N = N, p = p)
W <- W[, -1]
# W <- scale(W, center = TRUE, scale = TRUE)/sqrt(999)
response_list <- Mhorseshoe::make_response(W, non_zero = 20,
SD = 1,
fixed_coefficients = 5)
z <- response_list[[1]]
non_zero_index <- response_list[[2]]
non_zero_coefficents <- response_list[[3]]
# modified model
fit_Mhorseshoe <- modified_approximate_algorithm(W, z, iteration = 10000,
fixed_xi = FALSE, s = 0.001, xi = exp(10),
step_check = TRUE)
# modified model
fit_Mhorseshoe <- modified_approximate_algorithm(W, z, iteration = 10000,
fixed_xi = FALSE, s = 0.01, xi = exp(10),
step_check = TRUE)
# approximate model
fit_approximate <- Mhorseshoe::approximate_algorithm(W, z,
iteration = 10000, s = 0.01, xi = exp(10),
step_check = TRUE)
# modified model
fit_Mhorseshoe <- modified_approximate_algorithm(W, z, iteration = 10000,
fixed_xi = FALSE, s = 0.01, xi = exp(15),
step_check = TRUE)
# modified model
fit_Mhorseshoe <- modified_approximate_algorithm(W, z, iteration = 10000,
fixed_xi = FALSE, s = 0.001, xi = exp(15),
step_check = TRUE)
beta2 <- fit_Mhorseshoe$beta
local_parameter2 <- fit_Mhorseshoe$local_shrinkage_parameter
sigma2 <- fit_Mhorseshoe$sigma2
spend_time2 <- fit_Mhorseshoe$spand_time
# beta trace plot 확인
for (i in 1:length(non_zero_index)) {
ggplot(data = data.frame(X = 1:nrow(beta2), Y = beta2[, non_zero_index[i]])) +
geom_line(mapping = aes(x = X, y = Y)) +
labs(x = str_c("beta ", non_zero_index[i]), y = "value",
title = str_c("true value = ", non_zero_coefficents[i])) +
coord_cartesian(ylim = c(min(beta2[, non_zero_index[i]]),max(beta2[, non_zero_index[i]])))
}
# beta trace plot 확인
for (i in 1:length(non_zero_index)) {
print(ggplot(data = data.frame(X = 1:nrow(beta2), Y = beta2[, non_zero_index[i]])) +
geom_line(mapping = aes(x = X, y = Y)) +
labs(x = str_c("beta ", non_zero_index[i]), y = "value",
title = str_c("true value = ", non_zero_coefficents[i])) +
coord_cartesian(ylim = c(min(beta2[, non_zero_index[i]]),max(beta2[, non_zero_index[i]]))))
}
# approximate model
fit_approximate <- Mhorseshoe::approximate_algorithm(W, z,
iteration = 10000, s = 0.001, xi = exp(15),
step_check = TRUE)
# modified model
fit_Mhorseshoe <- modified_approximate_algorithm(W, z, iteration = 10000,
fixed_xi = FALSE, s = 0.001, xi = exp(10),
step_check = TRUE)
# modified model
fit_Mhorseshoe <- modified_approximate_algorithm(W, z, iteration = 10000,
fixed_xi = FALSE, s = 0.01, xi = exp(10),
step_check = TRUE)
# approximate model
fit_approximate <- Mhorseshoe::approximate_algorithm(W, z,
iteration = 10000, s = 0.01, xi = exp(10),
step_check = TRUE)
# 시뮬레이션 데이터
N <- 500
p <- 3000 # p가 클수록 차이가 조금 있음, 할 경우 더 shrinkage 시킨다.  너무 애매모호한 경우에는 그냥 active set을 많이 첨가시켜서 분석하는 것이 더 좋아보임.
W <- Mhorseshoe::make_W(N = N, p = p)
W <- W[, -1]
W <- scale(W, center = TRUE, scale = TRUE)
response_list <- Mhorseshoe::make_response(W, non_zero = 20,
SD = 1,
fixed_coefficients = 5)
z <- response_list[[1]]
non_zero_index <- response_list[[2]]
non_zero_coefficents <- response_list[[3]]
# modified model
fit_Mhorseshoe <- modified_approximate_algorithm(W, z, iteration = 10000,
fixed_xi = FALSE, s = 0.01, xi = exp(10),
step_check = TRUE)
beta2 <- fit_Mhorseshoe$beta
local_parameter2 <- fit_Mhorseshoe$local_shrinkage_parameter
sigma2 <- fit_Mhorseshoe$sigma2
spend_time2 <- fit_Mhorseshoe$spand_time
# beta trace plot 확인
for (i in 1:length(non_zero_index)) {
print(ggplot(data = data.frame(X = 1:nrow(beta2), Y = beta2[, non_zero_index[i]])) +
geom_line(mapping = aes(x = X, y = Y)) +
labs(x = str_c("beta ", non_zero_index[i]), y = "value",
title = str_c("true value = ", non_zero_coefficents[i])) +
coord_cartesian(ylim = c(min(beta2[, non_zero_index[i]]),max(beta2[, non_zero_index[i]]))))
}
# approximate model
fit_approximate <- Mhorseshoe::approximate_algorithm(W, z,
iteration = 10000, s = 0.01, xi = exp(10),
step_check = TRUE)
# modified model
fit_Mhorseshoe <- modified_approximate_algorithm(W, z, iteration = 10000,
fixed_xi = TRUE, xi = exp(10),
step_check = TRUE)
# modified model
fit_Mhorseshoe <- modified_approximate_algorithm(W, z, iteration = 10000,
fixed_xi = TRUE, xi = exp(15),
step_check = TRUE)
# approximate model
fit_approximate <- Mhorseshoe::approximate_algorithm(W, z,
iteration = 10000, s = 0, xi = exp(15),
step_check = TRUE)
