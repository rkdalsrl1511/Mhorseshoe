cat("내 방법 : ", fit_amcmc$det_d[i], "원래 방법 : ", fit_amcmc$det_k[i], "\n")
}
for (i in 1:1000) {
cat(i, ". 내 방법 : ", fit_amcmc$det_d[i], "원래 방법 : ", fit_amcmc$det_k[i], "\n")
}
library(Mhorseshoe)
library(Mhorseshoe)
library(Mhorseshoe)
library(Mhorseshoe)
library(Mhorseshoe)
library(Mhorseshoe)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(invgamma)
library(MASS)
library(Rcpp)
library(horseshoe)
library(tictoc)
library(Mhorseshoe)
tic()
fit_Mamcmc <- Mhorseshoe::modified_approximate_algorithm_c(standardized_W, z,
iteration = 5000,
threshold = p)
library(Mhorseshoe)
library(Mhorseshoe)
library(Mhorseshoe)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(invgamma)
library(MASS)
library(Rcpp)
library(horseshoe)
library(tictoc)
library(Mhorseshoe)
# 시뮬레이션 데이터 생성
N <- 200
p <- 1000
W <- Mhorseshoe::make_W(N = N, p = p)
standardized_W <- scale(W[,-1], center = TRUE, scale = TRUE)
response_list <- Mhorseshoe::make_response(standardized_W, non_zero = 10,
SD = 1, fixed_coefficients = 5)
z <- response_list[[1]]
non_zero_index <- response_list[[2]]
non_zero_coefficents <- response_list[[3]]
tic()
fit_Mamcmc <- Mhorseshoe::modified_approximate_algorithm_c(standardized_W, z,
iteration = 5000,
threshold = p)
tic()
fit_Mamcmc <- Mhorseshoe::modified_approximate_algorithm_dep(standardized_W, z,
iteration = 5000,
threshold = p)
library(Mhorseshoe)
knitr::opts_chunk$set(echo = TRUE)
tic()
fit_Mamcmc <- Mhorseshoe::modified_approximate_algorithm_dep(standardized_W, z,
iteration = 5000,
threshold = p)
toc()
beta <- fit_Mamcmc$beta
# beta trace plot 확인
for (i in 1:length(non_zero_index)) {
print(ggplot(data = data.frame(X = 1:nrow(beta), Y = beta[, non_zero_index[i]])) + geom_line(mapping = aes(x = X, y = Y)) + labs(x = str_c("beta ", non_zero_index[i]), y = "value", title = str_c("true value = ", non_zero_coefficents[i])) + coord_cartesian(ylim = c(min(beta[, non_zero_index[i]]),max(beta[, non_zero_index[i]]))))
}
tail(beta[, non_zero_index])
tic()
fit_Mamcmc <- Mhorseshoe::modified_approximate_algorithm(standardized_W, z,
iteration = 5000,
threshold = p)
toc()
tic()
fit_Mamcmc <- Mhorseshoe::modified_approximate_algorithm_dep(standardized_W, z,
iteration = 5000,
threshold = p)
toc()
beta <- fit_Mamcmc$beta
# beta trace plot 확인
for (i in 1:length(non_zero_index)) {
print(ggplot(data = data.frame(X = 1:nrow(beta), Y = beta[, non_zero_index[i]])) + geom_line(mapping = aes(x = X, y = Y)) + labs(x = str_c("beta ", non_zero_index[i]), y = "value", title = str_c("true value = ", non_zero_coefficents[i])) + coord_cartesian(ylim = c(min(beta[, non_zero_index[i]]),max(beta[, non_zero_index[i]]))))
}
tic()
fit_Mamcmc <- Mhorseshoe::modified_approximate_algorithm(standardized_W, z,
iteration = 5000,
threshold = p)
toc()
tic()
fit_Mamcmc <- Mhorseshoe::modified_approximate_algorithm(standardized_W, z,
iteration = 10000,
threshold = p)
toc()
tic()
fit_Mamcmc2 <- Mhorseshoe::modified_approximate_algorithm_dep(standardized_W, z,
iteration = 10000,
threshold = p)
toc()
beta <- fit_Mamcmc$beta
# beta trace plot 확인
for (i in 1:length(non_zero_index)) {
print(ggplot(data = data.frame(X = 1:nrow(beta), Y = beta[, non_zero_index[i]])) + geom_line(mapping = aes(x = X, y = Y)) + labs(x = str_c("beta ", non_zero_index[i]), y = "value", title = str_c("true value = ", non_zero_coefficents[i])) + coord_cartesian(ylim = c(min(beta[, non_zero_index[i]]),max(beta[, non_zero_index[i]]))))
}
beta <- fit_Mamcmc2$beta
# beta trace plot 확인
for (i in 1:length(non_zero_index)) {
print(ggplot(data = data.frame(X = 1:nrow(beta), Y = beta[, non_zero_index[i]])) + geom_line(mapping = aes(x = X, y = Y)) + labs(x = str_c("beta ", non_zero_index[i]), y = "value", title = str_c("true value = ", non_zero_coefficents[i])) + coord_cartesian(ylim = c(min(beta[, non_zero_index[i]]),max(beta[, non_zero_index[i]]))))
}
beta <- fit_Mamcmc$beta
# beta trace plot 확인
for (i in 1:length(non_zero_index)) {
print(ggplot(data = data.frame(X = 1:nrow(beta), Y = beta[, non_zero_index[i]])) + geom_line(mapping = aes(x = X, y = Y)) + labs(x = str_c("beta ", non_zero_index[i]), y = "value", title = str_c("true value = ", non_zero_coefficents[i])) + coord_cartesian(ylim = c(min(beta[, non_zero_index[i]]),max(beta[, non_zero_index[i]]))))
}
beta <- fit_Mamcmc2$beta
# beta trace plot 확인
for (i in 1:length(non_zero_index)) {
print(ggplot(data = data.frame(X = 1:nrow(beta), Y = beta[, non_zero_index[i]])) + geom_line(mapping = aes(x = X, y = Y)) + labs(x = str_c("beta ", non_zero_index[i]), y = "value", title = str_c("true value = ", non_zero_coefficents[i])) + coord_cartesian(ylim = c(min(beta[, non_zero_index[i]]),max(beta[, non_zero_index[i]]))))
}
sigma <- fit_Mamcmc$sigma2
# sigma trace plot
ggplot(data = data.frame(X = 1:length(sigma), Y = sigma[1:length(sigma)])) +
geom_line(mapping = aes(x = X, y = Y))
# sigma trace plot
ggplot(data = data.frame(X = 100:length(sigma), Y = sigma[100:length(sigma)])) +
geom_line(mapping = aes(x = X, y = Y))
# sigma trace plot
ggplot(data = data.frame(X = 1000:length(sigma), Y = sigma[1000:length(sigma)])) +
geom_line(mapping = aes(x = X, y = Y))
sigma <- fit_Mamcmc2$sigma2
# sigma trace plot
ggplot(data = data.frame(X = 1000:length(sigma), Y = sigma[1000:length(sigma)])) +
geom_line(mapping = aes(x = X, y = Y))
# 시뮬레이션 데이터 생성
N <- 200
p <- 1000
W <- Mhorseshoe::make_W(N = N, p = p)
standardized_W <- scale(W[,-1], center = TRUE, scale = TRUE)
response_list <- Mhorseshoe::make_response(standardized_W, non_zero = 10,
SD = 5, fixed_coefficients = 5)
z <- response_list[[1]]
non_zero_index <- response_list[[2]]
non_zero_coefficents <- response_list[[3]]
tic()
fit_Mamcmc <- Mhorseshoe::modified_approximate_algorithm(standardized_W, z,
iteration = 5000,
threshold = p)
toc()
tic()
fit_Mamcmc2 <- Mhorseshoe::modified_approximate_algorithm_dep(standardized_W, z,
iteration = 5000,
threshold = p)
toc()
library(Mhorseshoe)
library(Mhorseshoe)
knitr::opts_chunk$set(echo = TRUE)
tic()
fit_Mamcmc2 <- Mhorseshoe::modified_approximate_algorithm_dep(standardized_W, z,
iteration = 5000,
threshold = p)
toc()
tic()
fit_Mamcmc2 <- Mhorseshoe::modified_approximate_algorithm_dep(standardized_W, z,
iteration = 5000,
threshold = p)
toc()
tic()
fit_Mamcmc2 <- Mhorseshoe::modified_approximate_algorithm_dep(standardized_W, z,
iteration = 5000,
threshold = p)
toc()
library(Mhorseshoe)
knitr::opts_chunk$set(echo = TRUE)
tic()
fit_Mamcmc2 <- Mhorseshoe::modified_approximate_algorithm_dep(standardized_W, z,
iteration = 5000,
threshold = p)
toc()
beta <- fit_Mamcmc$beta
beta <- fit_Mamcmc2$beta
beta <- fit_Mamcmc2$beta
# beta trace plot 확인
for (i in 1:length(non_zero_index)) {
print(ggplot(data = data.frame(X = 1:nrow(beta), Y = beta[, non_zero_index[i]])) + geom_line(mapping = aes(x = X, y = Y)) + labs(x = str_c("beta ", non_zero_index[i]), y = "value", title = str_c("true value = ", non_zero_coefficents[i])) + coord_cartesian(ylim = c(min(beta[, non_zero_index[i]]),max(beta[, non_zero_index[i]]))))
}
library(Mhorseshoe)
knitr::opts_chunk$set(echo = TRUE)
sigma <- fit_Mamcmc2$sigma2
# sigma trace plot
ggplot(data = data.frame(X = 1000:length(sigma), Y = sigma[1000:length(sigma)])) +
geom_line(mapping = aes(x = X, y = Y))
sigma <- fit_Mamcmc$sigma2
# sigma trace plot
ggplot(data = data.frame(X = 1000:length(sigma), Y = sigma[1000:length(sigma)])) +
geom_line(mapping = aes(x = X, y = Y))
sigma <- fit_Mamcmc$sigma2
# sigma trace plot
ggplot(data = data.frame(X = 1000:length(sigma), Y = sigma[1000:length(sigma)])) +
geom_line(mapping = aes(x = X, y = Y))
beta <- fit_Mamcmc$beta
# beta trace plot 확인
for (i in 1:length(non_zero_index)) {
print(ggplot(data = data.frame(X = 1:nrow(beta), Y = beta[, non_zero_index[i]])) + geom_line(mapping = aes(x = X, y = Y)) + labs(x = str_c("beta ", non_zero_index[i]), y = "value", title = str_c("true value = ", non_zero_coefficents[i])) + coord_cartesian(ylim = c(min(beta[, non_zero_index[i]]),max(beta[, non_zero_index[i]]))))
}
beta <- fit_Mamcmc2$beta
# beta trace plot 확인
for (i in 1:length(non_zero_index)) {
print(ggplot(data = data.frame(X = 1:nrow(beta), Y = beta[, non_zero_index[i]])) + geom_line(mapping = aes(x = X, y = Y)) + labs(x = str_c("beta ", non_zero_index[i]), y = "value", title = str_c("true value = ", non_zero_coefficents[i])) + coord_cartesian(ylim = c(min(beta[, non_zero_index[i]]),max(beta[, non_zero_index[i]]))))
}
tic()
fit_Mamcmc2 <- Mhorseshoe::modified_approximate_algorithm_dep(standardized_W, z,
iteration = 5000,
threshold = p)
toc()
tic()
fit_Mamcmc2 <- Mhorseshoe::modified_approximate_algorithm_dep(standardized_W, z,
iteration = 5000,
threshold = p)
toc()
beta <- fit_Mamcmc2$beta
# beta trace plot 확인
for (i in 1:length(non_zero_index)) {
print(ggplot(data = data.frame(X = 1:nrow(beta), Y = beta[, non_zero_index[i]])) + geom_line(mapping = aes(x = X, y = Y)) + labs(x = str_c("beta ", non_zero_index[i]), y = "value", title = str_c("true value = ", non_zero_coefficents[i])) + coord_cartesian(ylim = c(min(beta[, non_zero_index[i]]),max(beta[, non_zero_index[i]]))))
}
sigma <- fit_Mamcmc2$sigma2
# sigma trace plot
ggplot(data = data.frame(X = 1000:length(sigma), Y = sigma[1000:length(sigma)])) +
geom_line(mapping = aes(x = X, y = Y))
tic()
fit_Mamcmc <- Mhorseshoe::modified_approximate_algorithm(standardized_W, z,
iteration = 5000,
threshold = p)
toc()
beta <- fit_Mamcmc$beta
# beta trace plot 확인
for (i in 1:length(non_zero_index)) {
print(ggplot(data = data.frame(X = 1:nrow(beta), Y = beta[, non_zero_index[i]])) + geom_line(mapping = aes(x = X, y = Y)) + labs(x = str_c("beta ", non_zero_index[i]), y = "value", title = str_c("true value = ", non_zero_coefficents[i])) + coord_cartesian(ylim = c(min(beta[, non_zero_index[i]]),max(beta[, non_zero_index[i]]))))
}
beta <- fit_Mamcmc2$beta
# beta trace plot 확인
for (i in 1:length(non_zero_index)) {
print(ggplot(data = data.frame(X = 1:nrow(beta), Y = beta[, non_zero_index[i]])) + geom_line(mapping = aes(x = X, y = Y)) + labs(x = str_c("beta ", non_zero_index[i]), y = "value", title = str_c("true value = ", non_zero_coefficents[i])) + coord_cartesian(ylim = c(min(beta[, non_zero_index[i]]),max(beta[, non_zero_index[i]]))))
}
sigma <- fit_Mamcmc$sigma2
# sigma trace plot
ggplot(data = data.frame(X = 1000:length(sigma), Y = sigma[1000:length(sigma)])) +
geom_line(mapping = aes(x = X, y = Y))
sigma <- fit_Mamcmc2$sigma2
# sigma trace plot
ggplot(data = data.frame(X = 1000:length(sigma), Y = sigma[1000:length(sigma)])) +
geom_line(mapping = aes(x = X, y = Y))
sigma1 <- fit_Mamcmc$sigma2
sigma2 <- fit_Mamcmc2$sigma2
sigma1 <- fit_Mamcmc$sigma2
sigma2 <- fit_Mamcmc2$sigma2
# sigma trace plot
ggplot(data = data.frame(X = 1000:length(sigma1), Y = sigma[1000:length(sigma1)])) +
geom_line(mapping = aes(x = X, y = Y))
ggplot(data = data.frame(X = 1000:length(sigma2), Y = sigma[1000:length(sigma2)])) +
geom_line(mapping = aes(x = X, y = Y))
sigma1 <- fit_Mamcmc$sigma2
sigma2 <- fit_Mamcmc2$sigma2
# sigma trace plot
ggplot(data = data.frame(X = 1:length(sigma1), Y = sigma[1:length(sigma1)])) +
geom_line(mapping = aes(x = X, y = Y))
ggplot(data = data.frame(X = 1:length(sigma2), Y = sigma[1:length(sigma2)])) +
geom_line(mapping = aes(x = X, y = Y))
sigma1 <- fit_Mamcmc$sigma2
sigma2 <- fit_Mamcmc2$sigma2
# sigma trace plot
ggplot(data = data.frame(X = 1:length(sigma1), Y = sigma1[1:length(sigma1)])) +
geom_line(mapping = aes(x = X, y = Y))
ggplot(data = data.frame(X = 1:length(sigma2), Y = sigma2[1:length(sigma2)])) +
geom_line(mapping = aes(x = X, y = Y))
# sigma trace plot
ggplot(data = data.frame(X = 1000:length(sigma1), Y = sigma1[1000:length(sigma1)])) +
geom_line(mapping = aes(x = X, y = Y))
ggplot(data = data.frame(X = 1000:length(sigma2), Y = sigma2[1000:length(sigma2)])) +
geom_line(mapping = aes(x = X, y = Y))
tic()
fit_amcmc <- Mhorseshoe::approximate_algorithm(standardized_W, z,
iteration = 5000)
toc()
beta <- fit_amcmc$beta
# beta trace plot 확인
for (i in 1:length(non_zero_index)) {
print(ggplot(data = data.frame(X = 1:nrow(beta), Y = beta[, non_zero_index[i]])) + geom_line(mapping = aes(x = X, y = Y)) + labs(x = str_c("beta ", non_zero_index[i]), y = "value", title = str_c("true value = ", non_zero_coefficents[i])) + coord_cartesian(ylim = c(min(beta[, non_zero_index[i]]),max(beta[, non_zero_index[i]]))))
}
sigma3 <- fit_amcmc$sigma_parameter
ggplot(data = data.frame(X = 1000:length(sigma3), Y = sigma3[1000:length(sigma3)])) +
geom_line(mapping = aes(x = X, y = Y))
ggplot(data = data.frame(X = 1000:length(sigma2), Y = sigma2[1000:length(sigma2)])) +
geom_line(mapping = aes(x = X, y = Y))
# sigma trace plot
ggplot(data = data.frame(X = 1000:length(sigma1), Y = sigma1[1000:length(sigma1)])) +
geom_line(mapping = aes(x = X, y = Y))
ggplot(data = data.frame(X = 1000:length(sigma3), Y = sigma3[1000:length(sigma3)])) +
geom_line(mapping = aes(x = X, y = Y))
ggplot(data = data.frame(X = 1000:length(sigma2), Y = sigma2[1000:length(sigma2)])) +
geom_line(mapping = aes(x = X, y = Y))
ggplot(data = data.frame(X = 1000:length(sigma3), Y = sigma3[1000:length(sigma3)])) +
geom_line(mapping = aes(x = X, y = Y))
ggplot(data = data.frame(X = 1000:length(sigma2), Y = sigma2[1000:length(sigma2)])) +
geom_line(mapping = aes(x = X, y = Y))
fit_Mamcmc2$local_shrinkage_parameter[, non_zero_index] %>% View()
fit_Mamcmc2$local_shrinkage_parameter[, -non_zero_index] %>% View()
fit_amcmc$local_shrinkage_parameter[, non_zero_index] %>% View()
global <- fit_amcmc$global_shrinkage_parameter
M <- 5
K <- 1000
batch <- rep(0, M)
for (i in 1:M) {
batch[i] <- mean(global[(K*(i-1) + 1):(K * i)])
}
batch_mean <- mean(batch)
MCSE <- sqrt(K * (sum(batch - batch_mean)^2) / M)
MCSE
global <- log(fit_amcmc$global_shrinkage_parameter)
M <- 5
K <- 1000
batch <- rep(0, M)
global <- log(fit_amcmc$global_shrinkage_parameter)
M <- 5
K <- 1000
batch <- rep(0, M)
for (i in 1:M) {
batch[i] <- mean(global[(K*(i-1) + 1):(K * i)])
}
batch_mean <- mean(batch)
MCSE <- sqrt(K * (sum(batch - batch_mean)^2) / M)
MCSE
beta1 <- fit_amcmc$beta[, non_zero_index[1]]
M <- 5
K <- 1000
batch <- rep(0, M)
for (i in 1:M) {
batch[i] <- mean(beta1[(K*(i-1) + 1):(K * i)])
}
batch_mean <- mean(batch)
MCSE <- sqrt(K * (sum(batch - batch_mean)^2) / M)
MCSE
ggplot(data = data.frame(X = 1:length(global), Y = global)) +
geom_line(mapping = aes(x = X, y = Y)) +
labs(title = "global shrinkage parameter")
ggplot(data = data.frame(X = 1:length(global), Y = global)) +
geom_line(mapping = aes(x = X, y = Y)) +
labs(title = "global shrinkage parameter")
library(Mhorseshoe)
knitr::opts_chunk$set(echo = TRUE)
tic()
fit_Mamcmc2 <- Mhorseshoe::modified_approximate_algorithm_dep(standardized_W, z,
iteration = 5000,
threshold = p)
library(Mhorseshoe)
knitr::opts_chunk$set(echo = TRUE)
tic()
fit_Mamcmc2 <- Mhorseshoe::modified_approximate_algorithm_dep(standardized_W, z,
iteration = 5000,
threshold = p)
toc()
beta <- fit_Mamcmc2$beta
# beta trace plot 확인
for (i in 1:length(non_zero_index)) {
print(ggplot(data = data.frame(X = 1:nrow(beta), Y = beta[, non_zero_index[i]])) + geom_line(mapping = aes(x = X, y = Y)) + labs(x = str_c("beta ", non_zero_index[i]), y = "value", title = str_c("true value = ", non_zero_coefficents[i])) + coord_cartesian(ylim = c(min(beta[, non_zero_index[i]]),max(beta[, non_zero_index[i]]))))
}
tail(beta[, non_zero_index])
# 시뮬레이션 데이터 생성
N <- 300
p <- 3000
W <- Mhorseshoe::make_W(N = N, p = p)
standardized_W <- scale(W[,-1], center = TRUE, scale = TRUE)
response_list <- Mhorseshoe::make_response(standardized_W, non_zero = 10,
SD = 5, fixed_coefficients = 5)
z <- response_list[[1]]
non_zero_index <- response_list[[2]]
non_zero_coefficents <- response_list[[3]]
tic()
fit_amcmc <- Mhorseshoe::approximate_algorithm(standardized_W, z,
iteration = 5000)
toc()
tic()
fit_Mamcmc <- Mhorseshoe::modified_approximate_algorithm(standardized_W, z,
iteration = 5000,
threshold = p)
toc()
tic()
fit_Mamcmc2 <- Mhorseshoe::modified_approximate_algorithm_dep(standardized_W, z,
iteration = 5000,
threshold = p)
toc()
beta <- fit_Mamcmc2$beta
# beta trace plot 확인
for (i in 1:length(non_zero_index)) {
print(ggplot(data = data.frame(X = 1:nrow(beta), Y = beta[, non_zero_index[i]])) + geom_line(mapping = aes(x = X, y = Y)) + labs(x = str_c("beta ", non_zero_index[i]), y = "value", title = str_c("true value = ", non_zero_coefficents[i])) + coord_cartesian(ylim = c(min(beta[, non_zero_index[i]]),max(beta[, non_zero_index[i]]))))
}
beta <- fit_Mamcmc$beta
# beta trace plot 확인
for (i in 1:length(non_zero_index)) {
print(ggplot(data = data.frame(X = 1:nrow(beta), Y = beta[, non_zero_index[i]])) + geom_line(mapping = aes(x = X, y = Y)) + labs(x = str_c("beta ", non_zero_index[i]), y = "value", title = str_c("true value = ", non_zero_coefficents[i])) + coord_cartesian(ylim = c(min(beta[, non_zero_index[i]]),max(beta[, non_zero_index[i]]))))
}
beta <- fit_amcmc$beta
# beta trace plot 확인
for (i in 1:length(non_zero_index)) {
print(ggplot(data = data.frame(X = 1:nrow(beta), Y = beta[, non_zero_index[i]])) + geom_line(mapping = aes(x = X, y = Y)) + labs(x = str_c("beta ", non_zero_index[i]), y = "value", title = str_c("true value = ", non_zero_coefficents[i])) + coord_cartesian(ylim = c(min(beta[, non_zero_index[i]]),max(beta[, non_zero_index[i]]))))
}
tail(beta[, non_zero_index])
sigma1 <- fit_Mamcmc$sigma2
sigma2 <- fit_Mamcmc2$sigma2
sigma3 <- fit_amcmc$sigma_parameter
# sigma trace plot
ggplot(data = data.frame(X = 1000:length(sigma1), Y = sigma1[1000:length(sigma1)])) +
geom_line(mapping = aes(x = X, y = Y))
ggplot(data = data.frame(X = 1000:length(sigma2), Y = sigma2[1000:length(sigma2)])) +
geom_line(mapping = aes(x = X, y = Y))
ggplot(data = data.frame(X = 1000:length(sigma3), Y = sigma3[1000:length(sigma3)])) +
geom_line(mapping = aes(x = X, y = Y))
round(0.1)
round(0.5)
round(0.6)
round(0.51)
library(Mhorseshoe)
knitr::opts_chunk$set(echo = TRUE)
tic()
fit_Mamcmc2 <- Mhorseshoe::modified_approximate_algorithm_dep(standardized_W, z,
iteration = 3000,
threshold = p)
toc()
round(39.5)
round(39.4)
beta <- fit_Mamcmc2$beta
# beta trace plot 확인
for (i in 1:length(non_zero_index)) {
print(ggplot(data = data.frame(X = 1:nrow(beta), Y = beta[, non_zero_index[i]])) + geom_line(mapping = aes(x = X, y = Y)) + labs(x = str_c("beta ", non_zero_index[i]), y = "value", title = str_c("true value = ", non_zero_coefficents[i])) + coord_cartesian(ylim = c(min(beta[, non_zero_index[i]]),max(beta[, non_zero_index[i]]))))
}
library(Mhorseshoe)
knitr::opts_chunk$set(echo = TRUE)
tic()
fit_Mamcmc2 <- Mhorseshoe::modified_approximate_algorithm_dep(standardized_W, z,
iteration = 3000,
threshold = p)
toc()
beta <- fit_Mamcmc2$beta
# beta trace plot 확인
for (i in 1:length(non_zero_index)) {
print(ggplot(data = data.frame(X = 1:nrow(beta), Y = beta[, non_zero_index[i]])) + geom_line(mapping = aes(x = X, y = Y)) + labs(x = str_c("beta ", non_zero_index[i]), y = "value", title = str_c("true value = ", non_zero_coefficents[i])) + coord_cartesian(ylim = c(min(beta[, non_zero_index[i]]),max(beta[, non_zero_index[i]]))))
}
sort(c(1,2,3))
tic()
fit_Mamcmc2 <- Mhorseshoe::modified_approximate_algorithm_dep(standardized_W, z,
iteration = 3000,
threshold = p)
toc()
beta <- fit_Mamcmc2$beta
# beta trace plot 확인
for (i in 1:length(non_zero_index)) {
print(ggplot(data = data.frame(X = 1:nrow(beta), Y = beta[, non_zero_index[i]])) + geom_line(mapping = aes(x = X, y = Y)) + labs(x = str_c("beta ", non_zero_index[i]), y = "value", title = str_c("true value = ", non_zero_coefficents[i])) + coord_cartesian(ylim = c(min(beta[, non_zero_index[i]]),max(beta[, non_zero_index[i]]))))
}
library(Mhorseshoe)
knitr::opts_chunk$set(echo = TRUE)
tic()
fit_Mamcmc2 <- Mhorseshoe::modified_approximate_algorithm_dep(standardized_W, z,
iteration = 3000,
threshold = p)
toc()
beta <- fit_Mamcmc2$beta
# beta trace plot 확인
for (i in 1:length(non_zero_index)) {
print(ggplot(data = data.frame(X = 1:nrow(beta), Y = beta[, non_zero_index[i]])) + geom_line(mapping = aes(x = X, y = Y)) + labs(x = str_c("beta ", non_zero_index[i]), y = "value", title = str_c("true value = ", non_zero_coefficents[i])) + coord_cartesian(ylim = c(min(beta[, non_zero_index[i]]),max(beta[, non_zero_index[i]]))))
}
tic()
fit_Mamcmc <- Mhorseshoe::modified_approximate_algorithm(standardized_W, z,
iteration = 3000,
threshold = p)
toc()
beta <- fit_Mamcmc$beta
# beta trace plot 확인
for (i in 1:length(non_zero_index)) {
print(ggplot(data = data.frame(X = 1:nrow(beta), Y = beta[, non_zero_index[i]])) + geom_line(mapping = aes(x = X, y = Y)) + labs(x = str_c("beta ", non_zero_index[i]), y = "value", title = str_c("true value = ", non_zero_coefficents[i])) + coord_cartesian(ylim = c(min(beta[, non_zero_index[i]]),max(beta[, non_zero_index[i]]))))
}
beta <- fit_Mamcmc2$beta
# beta trace plot 확인
for (i in 1:length(non_zero_index)) {
print(ggplot(data = data.frame(X = 1:nrow(beta), Y = beta[, non_zero_index[i]])) + geom_line(mapping = aes(x = X, y = Y)) + labs(x = str_c("beta ", non_zero_index[i]), y = "value", title = str_c("true value = ", non_zero_coefficents[i])) + coord_cartesian(ylim = c(min(beta[, non_zero_index[i]]),max(beta[, non_zero_index[i]]))))
}
sigma1 <- fit_Mamcmc$sigma2
sigma2 <- fit_Mamcmc2$sigma2
sigma3 <- fit_amcmc$sigma_parameter
# sigma trace plot
ggplot(data = data.frame(X = 1000:length(sigma1), Y = sigma1[1000:length(sigma1)])) +
geom_line(mapping = aes(x = X, y = Y))
ggplot(data = data.frame(X = 1000:length(sigma2), Y = sigma2[1000:length(sigma2)])) +
geom_line(mapping = aes(x = X, y = Y))
ggplot(data = data.frame(X = 1000:length(sigma3), Y = sigma3[1000:length(sigma3)])) +
geom_line(mapping = aes(x = X, y = Y))
library(Mhorseshoe)
knitr::opts_chunk$set(echo = TRUE)
tic()
fit_Mamcmc <- Mhorseshoe::modified_approximate_algorithm(standardized_W, z,
iteration = 3000,
threshold = p)
toc()
beta <- fit_Mamcmc$beta
# beta trace plot 확인
for (i in 1:length(non_zero_index)) {
print(ggplot(data = data.frame(X = 1:nrow(beta), Y = beta[, non_zero_index[i]])) + geom_line(mapping = aes(x = X, y = Y)) + labs(x = str_c("beta ", non_zero_index[i]), y = "value", title = str_c("true value = ", non_zero_coefficents[i])) + coord_cartesian(ylim = c(min(beta[, non_zero_index[i]]),max(beta[, non_zero_index[i]]))))
}
sigma1 <- fit_Mamcmc$sigma2
sigma2 <- fit_Mamcmc2$sigma2
sigma3 <- fit_amcmc$sigma_parameter
# sigma trace plot
ggplot(data = data.frame(X = 1000:length(sigma1), Y = sigma1[1000:length(sigma1)])) +
geom_line(mapping = aes(x = X, y = Y))
ggplot(data = data.frame(X = 1000:length(sigma2), Y = sigma2[1000:length(sigma2)])) +
geom_line(mapping = aes(x = X, y = Y))
ggplot(data = data.frame(X = 1000:length(sigma3), Y = sigma3[1000:length(sigma3)])) +
geom_line(mapping = aes(x = X, y = Y))
