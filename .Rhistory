example_z <- example_response_list[[2]]
example_non_zero_index <- example_response_list[[3]]
example_non_zero_coefficents <- example_response_list[[4]]
# xi_0
xi_0 <- ((50 / 4950) / sqrt(500))^(-2)
example2 <- Mhorseshoe::approximate_algorithm(example_W, example_z, iteration = 5000,
s = 0.001, xi = xi_0, max_Epsilon = 10^(40),
step_check = TRUE)
example3 <- Mhorseshoe::approximate_algorithm(example_W, example_z, iteration = 5000,
s = 0.01, xi = 1, max_Epsilon = 10^(40),
step_check = TRUE)
example4 <- Mhorseshoe::approximate_algorithm(example_W, example_z, iteration = 5000,
s = 1, xi = 1, max_Epsilon = 10^(40),
step_check = TRUE)
m_example2 <- Mhorseshoe::sampling_modified(example_W, example_z, iteration = 5000,
s = 0.001, xi = xi_0, t = 10,
max_Epsilon = 10^(40),
step_check = TRUE)
m_example3 <- Mhorseshoe::sampling_modified(example_W, example_z, iteration = 5000,
s = 0.01, xi = 1, t = 30,
max_Epsilon = 10^(40),
step_check = TRUE)
m_example4 <- Mhorseshoe::sampling_modified(example_W, example_z, iteration = 5000,
s = 1, xi = 1, t = 30,
max_Epsilon = 10^(40),
step_check = TRUE)
# example & m_example active_set
example_beta <- example2$beta
example_spend_time <- example2$spend_time
m_example_beta <- m_example2$beta
m_example_spend_time <- m_example2$spend_time
ggplot(data = data.frame(X = 101:nrow(example_spend_time),
approximate_active_set = example_spend_time$total_active_column[101:nrow(example_spend_time)],
modified_active_set = m_example_spend_time$`number of active set columns`[101:nrow(m_example_spend_time)])) +
geom_line(mapping = aes(x = X, y = approximate_active_set, color = "red")) +
geom_line(mapping = aes(x = X, y = modified_active_set, color = "blue")) +
scale_color_manual(values = c("red", "blue"), breaks = c("red", "blue"),
labels = c("approximate_active_set", "modified_active_set")) +
labs(x = "iteration", y = "number of active set")
# example & m_example active_set
example_beta <- example3$beta
example_spend_time <- example3$spend_time
m_example_beta <- m_example3$beta
m_example_spend_time <- m_example3$spend_time
ggplot(data = data.frame(X = 101:nrow(example_spend_time),
approximate_active_set = example_spend_time$total_active_column[101:nrow(example_spend_time)],
modified_active_set = m_example_spend_time$`number of active set columns`[101:nrow(m_example_spend_time)])) +
geom_line(mapping = aes(x = X, y = approximate_active_set, color = "red")) +
geom_line(mapping = aes(x = X, y = modified_active_set, color = "blue")) +
scale_color_manual(values = c("red", "blue"), breaks = c("red", "blue"),
labels = c("approximate_active_set", "modified_active_set")) +
labs(x = "iteration", y = "number of active set")
# example & m_example active_set
example_beta <- example4$beta
example_spend_time <- example4$spend_time
m_example_beta <- m_example4$beta
m_example_spend_time <- m_example4$spend_time
ggplot(data = data.frame(X = 101:nrow(example_spend_time),
approximate_active_set = example_spend_time$total_active_column[101:nrow(example_spend_time)],
modified_active_set = m_example_spend_time$`number of active set columns`[101:nrow(m_example_spend_time)])) +
geom_line(mapping = aes(x = X, y = approximate_active_set, color = "red")) +
geom_line(mapping = aes(x = X, y = modified_active_set, color = "blue")) +
scale_color_manual(values = c("red", "blue"), breaks = c("red", "blue"),
labels = c("approximate_active_set", "modified_active_set")) +
labs(x = "iteration", y = "number of active set")
simulation4_log_xi1 <- log(m_example2$global_shrinkage_parameter)
simulation4_log_xi2 <- log(m_example3$global_shrinkage_parameter)
simulation4_log_xi3 <- log(m_example4$global_shrinkage_parameter)
simulation4_log_xi3 <- log(m_example4$global_shrinkage_parameter)
ggplot(data = data.frame(X = 1:5000,
simulation4_log_xi4 = simulation4_log_xi4[1:5000])) +
geom_line(mapping = aes(x = X, y = simulation4_log_xi4))
ggplot(data = data.frame(X = 1:5000,
simulation4_log_xi = simulation4_log_xi3[1:5000])) +
geom_line(mapping = aes(x = X, y = simulation4_log_xi))
simulation4_log_xi3 <- m_example4$global_shrinkage_parameter
ggplot(data = data.frame(X = 1:5000,
simulation4_log_xi = simulation4_log_xi3[1:5000])) +
geom_line(mapping = aes(x = X, y = simulation4_log_xi))
ggplot(data = data.frame(X = 1:5000,
simulation4_log_xi = simulation4_log_xi3[1:5000])) +
geom_line(mapping = aes(x = X, y = simulation4_log_xi)) +
coord_cartesian(ylim = c(min(simulation4_log_xi[1001:5000]),
max(simulation4_log_xi[1001:5000])))
ggplot(data = data.frame(X = 1:5000,
simulation4_log_xi = simulation4_log_xi3[1:5000])) +
geom_line(mapping = aes(x = X, y = simulation4_log_xi)) +
coord_cartesian(ylim = c(min(simulation4_log_xi[1001:5000]),
max(simulation4_log_xi[1001:5000])))
ggplot(data = data.frame(X = 1:5000,
simulation4_log_xi = simulation4_log_xi3[1:5000])) +
geom_line(mapping = aes(x = X, y = simulation4_log_xi)) +
coord_cartesian(ylim = c(min(simulation3_log_xi[1001:5000]),
max(simulation3_log_xi[1001:5000])))
ggplot(data = data.frame(X = 1:5000,
simulation4_log_xi = simulation4_log_xi3[1:5000])) +
geom_line(mapping = aes(x = X, y = simulation4_log_xi)) +
coord_cartesian(ylim = c(min(simulation4_log_xi3[1001:5000]),
max(simulation4_log_xi3[1001:5000])))
ggplot(data = data.frame(X = 1:5000,
simulation4_log_xi = simulation4_log_xi3[1:5000])) +
geom_line(mapping = aes(x = X, y = simulation4_log_xi)) +
coord_cartesian(ylim = c(min(simulation4_log_xi3[1001:5000]),
max(1e+16)))
ggplot(data = data.frame(X = 1:5000,
simulation4_log_xi = simulation4_log_xi3[1:5000])) +
geom_line(mapping = aes(x = X, y = simulation4_log_xi)) +
coord_cartesian(ylim = c(min(simulation4_log_xi3[1001:5000]),
max(5e+15)))
coord_cartesian(ylim = c(min(simulation4_log_xi3[1001:5000])
ggplot(data = data.frame(X = 1:5000,
simulation4_log_xi = simulation4_log_xi3[1:5000])) +
geom_line(mapping = aes(x = X, y = simulation4_log_xi))
simulation4_log_xi3 <- log(m_example3$global_shrinkage_parameter)
ggplot(data = data.frame(X = 1:5000,
simulation4_log_xi = simulation4_log_xi3[1:5000])) +
geom_line(mapping = aes(x = X, y = simulation4_log_xi))
simulation4_log_xi3 <- m_example3$global_shrinkage_parameter
ggplot(data = data.frame(X = 1:5000,
simulation4_log_xi = simulation4_log_xi3[1:5000])) +
geom_line(mapping = aes(x = X, y = simulation4_log_xi))
simulation4_log_xi3 <- log(m_example2$global_shrinkage_parameter)
ggplot(data = data.frame(X = 1:5000,
simulation4_log_xi = simulation4_log_xi3[1:5000])) +
geom_line(mapping = aes(x = X, y = simulation4_log_xi))
simulation4_log_xi3 <- m_example2$global_shrinkage_parameter
ggplot(data = data.frame(X = 1:5000,
simulation4_log_xi = simulation4_log_xi3[1:5000])) +
geom_line(mapping = aes(x = X, y = simulation4_log_xi))
ggplot(data = data.frame(X = 1:5000,
simulation4_log_xi = simulation4_log_xi3[1:5000])) +
geom_line(mapping = aes(x = X, y = simulation4_log_xi))
simulation4_log_xi3 <- log(m_example4$global_shrinkage_parameter)
simulation_xi <- log(m_example4$global_shrinkage_parameter)
q <- ggplot(data = data.frame(X = 1:5000,
simulation_xi = simulation_xi[1:5000])) +
geom_line(mapping = aes(x = X, y = simulation_xi)) +
labs(title = "case 4 log(xi) graph")
ggsave(paste0("./5000실험기록/", "case4_log_xi", ".png"), q)
simulation_xi <- m_example4$global_shrinkage_parameter
q <- ggplot(data = data.frame(X = 1:5000,
simulation_xi = simulation_xi[1:5000])) +
geom_line(mapping = aes(x = X, y = simulation_xi)) +
labs(title = "case 4 xi graph")
ggsave(paste0("./5000실험기록/", "case4_xi", ".png"), q)
simulation_xi <- log(m_example3$global_shrinkage_parameter)
q <- ggplot(data = data.frame(X = 1:5000,
simulation_xi = simulation_xi[1:5000])) +
geom_line(mapping = aes(x = X, y = simulation_xi)) +
labs(title = "case 3 log(xi) graph")
ggsave(paste0("./5000실험기록/", "case3_log_xi", ".png"), q)
simulation_xi <- m_example3$global_shrinkage_parameter
simulation_xi <- m_example3$global_shrinkage_parameter
q <- ggplot(data = data.frame(X = 1:5000,
simulation_xi = simulation_xi[1:5000])) +
geom_line(mapping = aes(x = X, y = simulation_xi)) +
labs(title = "case 3 xi graph")
ggsave(paste0("./5000실험기록/", "case3_xi", ".png"), q)
# m_example beta trace plot
m_example_beta <- m_example1$beta
m_example_spend_time <- m_example1$spend_time
for (i in 1:length(example_non_zero_index)) {
q <- ggplot(data = data.frame(X = 1001:nrow(m_example_beta),
Y = m_example_beta[1001:nrow(m_example_beta), example_non_zero_index[i]])) +
geom_line(mapping = aes(x = X, y = Y)) +
labs(x = str_c("beta ", example_non_zero_index[i]), y = "value",
title = str_c("true value = ", example_non_zero_coefficents[i])) +
coord_cartesian(ylim = c(min(m_example_beta[1001:nrow(m_example_beta), example_non_zero_index[i]]),
max(m_example_beta[1001:nrow(m_example_beta), example_non_zero_index[i]])))
#ggsave(paste0("./5000실험기록/m_sample_fix/", "beta", example_non_zero_index[i], ".png"), q)
print(q)
}
for (i in 1:length(example_non_zero_index)) {
q <- ggplot(data = data.frame(X = 1001:nrow(m_example_beta),
Y = m_example_beta[1001:nrow(m_example_beta), example_non_zero_index[i]])) +
geom_line(mapping = aes(x = X, y = Y)) +
labs(x = str_c("beta ", example_non_zero_index[i]), y = "value",
title = str_c("true value = ", example_non_zero_coefficents[i])) +
coord_cartesian(ylim = c(min(m_example_beta[1001:nrow(m_example_beta), example_non_zero_index[i]]),
max(m_example_beta[1001:nrow(m_example_beta), example_non_zero_index[i]])))
ggsave(paste0("./5000실험기록/s비교용/", "beta", example_non_zero_index[i], ".png"), q)
# print(q)
}
m_example4 <- Mhorseshoe::sampling_modified(example_W, example_z, iteration = 5000,
s = 1, xi = 1, t = 10,
max_Epsilon = 10^(40),
step_check = TRUE)
# m_example beta trace plot
m_example_beta <- m_example4$beta
m_example_spend_time <- m_example4$spend_time
# m_example beta trace plot
m_example_beta <- m_example4$beta
m_example_spend_time <- m_example4$spend_time
for (i in 1:length(example_non_zero_index)) {
q <- ggplot(data = data.frame(X = 1001:nrow(m_example_beta),
Y = m_example_beta[1001:nrow(m_example_beta), example_non_zero_index[i]])) +
geom_line(mapping = aes(x = X, y = Y)) +
labs(x = str_c("beta ", example_non_zero_index[i]), y = "value",
title = str_c("true value = ", example_non_zero_coefficents[i])) +
coord_cartesian(ylim = c(min(m_example_beta[1001:nrow(m_example_beta), example_non_zero_index[i]]),
max(m_example_beta[1001:nrow(m_example_beta), example_non_zero_index[i]])))
ggsave(paste0("./5000실험기록/s비교용/", "beta", example_non_zero_index[i], ".png"), q)
print(q)
}
m_example4 <- Mhorseshoe::sampling_modified(example_W, example_z, iteration = 5000,
s = 1, xi = 1, t = 10,
max_Epsilon = 10^(40),
step_check = TRUE)
# m_example beta trace plot
m_example_beta <- m_example4$beta
m_example_spend_time <- m_example4$spend_time
for (i in 1:length(example_non_zero_index)) {
q <- ggplot(data = data.frame(X = 1001:nrow(m_example_beta),
Y = m_example_beta[1001:nrow(m_example_beta), example_non_zero_index[i]])) +
geom_line(mapping = aes(x = X, y = Y)) +
labs(x = str_c("beta ", example_non_zero_index[i]), y = "value",
title = str_c("true value = ", example_non_zero_coefficents[i])) +
coord_cartesian(ylim = c(min(m_example_beta[1001:nrow(m_example_beta), example_non_zero_index[i]]),
max(m_example_beta[1001:nrow(m_example_beta), example_non_zero_index[i]])))
#ggsave(paste0("./5000실험기록/s비교용/", "beta", example_non_zero_index[i], ".png"), q)
print(q)
}
m_example4 <- Mhorseshoe::sampling_modified(example_W, example_z, iteration = 5000,
s = 1, xi = 1, t = 10,
max_Epsilon = 10^(40),
step_check = TRUE)
for (i in 1:length(example_non_zero_index)) {
q <- ggplot(data = data.frame(X = 1001:nrow(m_example_beta),
Y = m_example_beta[1001:nrow(m_example_beta), example_non_zero_index[i]])) +
geom_line(mapping = aes(x = X, y = Y)) +
labs(x = str_c("beta ", example_non_zero_index[i]), y = "value",
title = str_c("true value = ", example_non_zero_coefficents[i])) +
coord_cartesian(ylim = c(min(m_example_beta[1001:nrow(m_example_beta), example_non_zero_index[i]]),
max(m_example_beta[1001:nrow(m_example_beta), example_non_zero_index[i]])))
ggsave(paste0("./5000실험기록/s비교용/", "beta", example_non_zero_index[i], ".png"), q)
#print(q)
}
m_example4 <- Mhorseshoe::sampling_modified(example_W, example_z, iteration = 5000,
s = 1, xi = 1, t = 50,
max_Epsilon = 10^(40),
step_check = TRUE)
# m_example beta trace plot
m_example_beta <- m_example4$beta
m_example_spend_time <- m_example4$spend_time
for (i in 1:length(example_non_zero_index)) {
q <- ggplot(data = data.frame(X = 1001:nrow(m_example_beta),
Y = m_example_beta[1001:nrow(m_example_beta), example_non_zero_index[i]])) +
geom_line(mapping = aes(x = X, y = Y)) +
labs(x = str_c("beta ", example_non_zero_index[i]), y = "value",
title = str_c("true value = ", example_non_zero_coefficents[i])) +
coord_cartesian(ylim = c(min(m_example_beta[1001:nrow(m_example_beta), example_non_zero_index[i]]),
max(m_example_beta[1001:nrow(m_example_beta), example_non_zero_index[i]])))
ggsave(paste0("./5000실험기록/s비교용/", "beta", example_non_zero_index[i], ".png"), q)
#print(q)
}
for (i in 1:length(example_non_zero_index)) {
q <- ggplot(data = data.frame(X = 1001:nrow(m_example_beta),
Y = m_example_beta[1001:nrow(m_example_beta), example_non_zero_index[i]])) +
geom_line(mapping = aes(x = X, y = Y)) +
labs(x = str_c("beta ", example_non_zero_index[i]), y = "value",
title = str_c("true value = ", example_non_zero_coefficents[i])) +
coord_cartesian(ylim = c(min(m_example_beta[1001:nrow(m_example_beta), example_non_zero_index[i]]),
max(m_example_beta[1001:nrow(m_example_beta), example_non_zero_index[i]])))
#ggsave(paste0("./5000실험기록/s비교용/", "beta", example_non_zero_index[i], ".png"), q)
print(q)
}
m_example4 <- Mhorseshoe::sampling_modified(example_W, example_z, iteration = 5000,
s = 1, xi = 1, t = 10,
max_Epsilon = 10^(40),
step_check = TRUE)
m_example3 <- Mhorseshoe::sampling_modified(example_W, example_z, iteration = 5000,
s = 1, xi = 1, t = 30,
max_Epsilon = 10^(40),
step_check = TRUE)
m_example4 <- Mhorseshoe::sampling_modified(example_W, example_z, iteration = 5000,
s = 0.01, xi = 1, t = 30,
max_Epsilon = 10^(40),
step_check = TRUE)
m_example4 <- Mhorseshoe::sampling_modified(example_W, example_z, iteration = 5000,
s = 1, xi = 1, t = 30,
max_Epsilon = 10^(40),
step_check = TRUE)
# m_example beta trace plot
m_example_beta <- m_example4$beta
m_example_spend_time <- m_example4$spend_time
for (i in 1:length(example_non_zero_index)) {
q <- ggplot(data = data.frame(X = 1001:nrow(m_example_beta),
Y = m_example_beta[1001:nrow(m_example_beta), example_non_zero_index[i]])) +
geom_line(mapping = aes(x = X, y = Y)) +
labs(x = str_c("beta ", example_non_zero_index[i]), y = "value",
title = str_c("true value = ", example_non_zero_coefficents[i])) +
coord_cartesian(ylim = c(min(m_example_beta[1001:nrow(m_example_beta), example_non_zero_index[i]]),
max(m_example_beta[1001:nrow(m_example_beta), example_non_zero_index[i]])))
#ggsave(paste0("./5000실험기록/s비교용/", "beta", example_non_zero_index[i], ".png"), q)
print(q)
}
# m_example beta trace plot
m_example_beta <- m_example3$beta
m_example_spend_time <- m_example3$spend_time
for (i in 1:length(example_non_zero_index)) {
q <- ggplot(data = data.frame(X = 1001:nrow(m_example_beta),
Y = m_example_beta[1001:nrow(m_example_beta), example_non_zero_index[i]])) +
geom_line(mapping = aes(x = X, y = Y)) +
labs(x = str_c("beta ", example_non_zero_index[i]), y = "value",
title = str_c("true value = ", example_non_zero_coefficents[i])) +
coord_cartesian(ylim = c(min(m_example_beta[1001:nrow(m_example_beta), example_non_zero_index[i]]),
max(m_example_beta[1001:nrow(m_example_beta), example_non_zero_index[i]])))
#ggsave(paste0("./5000실험기록/s비교용/", "beta", example_non_zero_index[i], ".png"), q)
print(q)
}
# sample case 실험
m_example_list <- list()
example_list <- list()
#simulation_setting <- data.frame(s = c(0.01, 1),
#                                 xi = c(1, 1),
#                                 epsilon = c(10^(40), 10^(40)),
#                                 t = c(30, 30))
simulation_setting <- data.frame(s = 0.01,
xi = 1,
t = 10,
epsilon = 10^(40))
repeat_time <- 10
# m_example 반복 알고리즘
for (i in 1:nrow(simulation_setting)) {
zero_l2 <- 0
nonzero_l2 <- 0
total_time <- 0
for (j in 1:repeat_time) {
repeat_example <- Mhorseshoe::sampling_modified(example_W, example_z, iteration = 5000,
s = simulation_setting$s[i],
xi = simulation_setting$xi[i],
t = simulation_setting$t[i],
max_Epsilon = simulation_setting$epsilon[i],
step_check = TRUE)
repeat_example_beta <- repeat_example$beta
repeat_example_spend_time <- repeat_example$spend_time
repeat_example_beta_mean <- apply(repeat_example_beta[1001:5000, ], MARGIN = 2, mean)
nonzero_l2 <- nonzero_l2 + sqrt(t(example_non_zero_coefficents - repeat_example_beta_mean[example_non_zero_index]) %*% (example_non_zero_coefficents - repeat_example_beta_mean[example_non_zero_index]))
zero_l2 <- zero_l2 + t(repeat_example_beta_mean[-example_non_zero_index]) %*% (repeat_example_beta_mean[-example_non_zero_index])
total_time <- total_time + sum(repeat_example_spend_time$total_time)
rm(repeat_example, repeat_example_beta, repeat_example_spend_time)
}
m_example_list[[i]] <- c(zero_l2/repeat_time, nonzero_l2/repeat_time, total_time/repeat_time)
}
knitr::opts_chunk$set(echo = TRUE)
example_response_list <- readRDS(file = "./5000실험기록/response_list.rds")
example_W <- example_response_list[[1]]
example_z <- example_response_list[[2]]
example_non_zero_index <- example_response_list[[3]]
example_non_zero_coefficents <- example_response_list[[4]]
# xi_0
xi_0 <- ((50 / 4950) / sqrt(500))^(-2)
# SNR
var(example_W[, example_non_zero_index] %*% example_non_zero_coefficents) / (t(example_z - example_W[, example_non_zero_index] %*% example_non_zero_coefficents) %*% (example_z - example_W[, example_non_zero_index] %*% example_non_zero_coefficents) / (499))
# sample case 실험
m_example_list <- list()
example_list <- list()
simulation_setting <- data.frame(s = 0.01,
xi = 1,
t = 10,
epsilon = 10^(40))
repeat_time <- 10
# m_example 반복 알고리즘
for (i in 1:nrow(simulation_setting)) {
zero_l2 <- 0
nonzero_l2 <- 0
total_time <- 0
for (j in 1:repeat_time) {
repeat_example <- Mhorseshoe::sampling_modified(example_W, example_z, iteration = 5000,
s = simulation_setting$s[i],
xi = simulation_setting$xi[i],
t = simulation_setting$t[i],
max_Epsilon = simulation_setting$epsilon[i],
step_check = TRUE)
repeat_example_beta <- repeat_example$beta
repeat_example_spend_time <- repeat_example$spend_time
repeat_example_beta_mean <- apply(repeat_example_beta[1001:5000, ], MARGIN = 2, mean)
nonzero_l2 <- nonzero_l2 + sqrt(t(example_non_zero_coefficents - repeat_example_beta_mean[example_non_zero_index]) %*% (example_non_zero_coefficents - repeat_example_beta_mean[example_non_zero_index]))
zero_l2 <- zero_l2 + t(repeat_example_beta_mean[-example_non_zero_index]) %*% (repeat_example_beta_mean[-example_non_zero_index])
total_time <- total_time + sum(repeat_example_spend_time$total_time)
rm(repeat_example, repeat_example_beta, repeat_example_spend_time)
}
m_example_list[[i]] <- c(zero_l2/repeat_time, nonzero_l2/repeat_time, total_time/repeat_time)
}
# sample case 실험
m_example_list <- list()
example_list <- list()
#simulation_setting <- data.frame(s = c(0.01, 1),
#                                 xi = c(1, 1),
#                                 epsilon = c(10^(40), 10^(40)),
#                                 t = c(30, 30))
simulation_setting <- data.frame(s = 0.01,
xi = 1,
t = 10,
epsilon = 10^(40))
repeat_time <- 10
# m_example 반복 알고리즘
for (i in 1:nrow(simulation_setting)) {
zero_l2 <- 0
nonzero_l2 <- 0
total_time <- 0
for (j in 1:repeat_time) {
repeat_example <- Mhorseshoe::sampling_modified(example_W, example_z, iteration = 3000,
s = simulation_setting$s[i],
xi = simulation_setting$xi[i],
t = simulation_setting$t[i],
max_Epsilon = simulation_setting$epsilon[i],
step_check = TRUE)
repeat_example_beta <- repeat_example$beta
repeat_example_spend_time <- repeat_example$spend_time
repeat_example_beta_mean <- apply(repeat_example_beta[1001:3000, ], MARGIN = 2, mean)
nonzero_l2 <- nonzero_l2 + sqrt(t(example_non_zero_coefficents - repeat_example_beta_mean[example_non_zero_index]) %*% (example_non_zero_coefficents - repeat_example_beta_mean[example_non_zero_index]))
zero_l2 <- zero_l2 + t(repeat_example_beta_mean[-example_non_zero_index]) %*% (repeat_example_beta_mean[-example_non_zero_index])
total_time <- total_time + sum(repeat_example_spend_time$total_time)
rm(repeat_example, repeat_example_beta, repeat_example_spend_time)
}
m_example_list[[i]] <- c(zero_l2/repeat_time, nonzero_l2/repeat_time, total_time/repeat_time)
}
m_example_list
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(invgamma)
library(MASS)
library(Rcpp)
library(horseshoe)
library(tictoc)
library(Mhorseshoe)
library(Mhorseshoe)
knitr::opts_chunk$set(echo = TRUE)
example_response_list <- readRDS(file = "./5000실험기록/response_list.rds")
example_W <- example_response_list[[1]]
example_z <- example_response_list[[2]]
example_non_zero_index <- example_response_list[[3]]
example_non_zero_coefficents <- example_response_list[[4]]
# SNR
var(example_W[, example_non_zero_index] %*% example_non_zero_coefficents) / (t(example_z - example_W[, example_non_zero_index] %*% example_non_zero_coefficents) %*% (example_z - example_W[, example_non_zero_index] %*% example_non_zero_coefficents) / (499))
# xi_0
xi_0 <- ((50 / 4950) / sqrt(500))^(-2)
example <- Mhorseshoe::approximate_algorithm(example_W, example_z, iteration = 5000,
s = 0.01, xi = xi_0, max_Epsilon = 10^(40),
step_check = TRUE)
example <- Mhorseshoe::approximate_algorithm(example_W, example_z, iteration = 5000,
s = 0.001, xi = xi_0, max_Epsilon = 10^(40),
step_check = TRUE)
# example beta trace plot
example_beta <- example$beta
example_spend_time <- example$spend_time
for (i in 1:length(example_non_zero_index)) {
q <- ggplot(data = data.frame(X = 1001:nrow(example_beta),
Y = example_beta[1001:nrow(example_beta), example_non_zero_index[i]])) +
geom_line(mapping = aes(x = X, y = Y)) +
labs(x = str_c("beta ", example_non_zero_index[i]), y = "value",
title = str_c("true value = ", example_non_zero_coefficents[i])) +
coord_cartesian(ylim = c(min(example_beta[1001:nrow(example_beta), example_non_zero_index[i]]),
max(example_beta[1001:nrow(example_beta), example_non_zero_index[i]])))
#ggsave(paste0("./5000실험기록/a_sample_fix/", "beta", example_non_zero_index[i], ".png"), q)
print(q)
}
View(example_spend_time)
sum(example_spend_time$total_time)
example_beta_mean <- apply(example_beta[1001:5000, ], MARGIN = 2, mean)
sqrt(t(example_non_zero_coefficents - example_beta_mean[example_non_zero_index]) %*% (example_non_zero_coefficents - example_beta_mean[example_non_zero_index]))
t(example_beta_mean[-example_non_zero_index]) %*% (example_beta_mean[-example_non_zero_index])
library(Mhorseshoe)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(invgamma)
library(MASS)
library(Rcpp)
library(horseshoe)
library(tictoc)
library(Mhorseshoe)
example_response_list <- readRDS(file = "./5000실험기록/response_list.rds")
example_W <- example_response_list[[1]]
example_z <- example_response_list[[2]]
example_non_zero_index <- example_response_list[[3]]
example_non_zero_coefficents <- example_response_list[[4]]
# xi_0
xi_0 <- ((50 / 4950) / sqrt(500))^(-2)
example <- Mhorseshoe::approximate_algorithm(example_W, example_z, iteration = 5000,
s = 0.001, xi = xi_0, max_Epsilon = 10^(40),
step_check = TRUE)
# example beta trace plot
example_beta <- example$beta
example_spend_time <- example$spend_time
View(example_spend_time)
for (i in 1:length(example_non_zero_index)) {
q <- ggplot(data = data.frame(X = 1001:nrow(example_beta),
Y = example_beta[1001:nrow(example_beta), example_non_zero_index[i]])) +
geom_line(mapping = aes(x = X, y = Y)) +
labs(x = str_c("beta ", example_non_zero_index[i]), y = "value",
title = str_c("true value = ", example_non_zero_coefficents[i])) +
coord_cartesian(ylim = c(min(example_beta[1001:nrow(example_beta), example_non_zero_index[i]]),
max(example_beta[1001:nrow(example_beta), example_non_zero_index[i]])))
#ggsave(paste0("./5000실험기록/a_sample_fix/", "beta", example_non_zero_index[i], ".png"), q)
print(q)
}
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(invgamma)
library(MASS)
library(Rcpp)
library(horseshoe)
library(tictoc)
library(Mhorseshoe)
eps
prettyNum()
prettyNum(unlist(.Machine))
prettyNum(unlist(.Machine))
.Machine
.Machine$double.eps
.Machine$double.eps
