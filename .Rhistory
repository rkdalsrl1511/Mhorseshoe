response_list4 <- Mhorseshoe::make_simulation_data(N = 500, p = 3000, W_mean = 0, W_sd = 1,
non_zero = 30, error_sd = 10, fixed_coefficients = 10)
W4 <- response_list4[[1]]
z4 <- response_list4[[2]]
non_zero_index4 <- response_list4[[3]]
non_zero_coefficents4 <- response_list4[[4]]
fit_sampling_modified_3000 <- Mhorseshoe::sampling_modified(W4, z4, xi = exp(15), s = 0.01,
iteration = 5000,
step_check = TRUE)
simulation4_beta <- fit_sampling_modified_3000$beta
simulation4_spend_time <- fit_sampling_modified_3000$spand_time
# modified 3000 beta trace plot
for (i in 1:length(non_zero_index4)) {
q <- ggplot(data = data.frame(X = 1:nrow(simulation4_beta),
Y = simulation4_beta[, non_zero_index4[i]])) +
geom_line(mapping = aes(x = X, y = Y)) +
labs(x = str_c("beta ", non_zero_index4[i]), y = "value",
title = str_c("true value = ", non_zero_coefficents4[i])) +
coord_cartesian(ylim = c(min(simulation4_beta[, non_zero_index4[i]]),
max(simulation4_beta[, non_zero_index4[i]])))
print(q)
}
fit_sampling_approximate_3000 <- Mhorseshoe::approximate_algorithm(W4, z4, iteration = 5000,
s = 0.01, xi = exp(15))
simulation4_beta <- fit_sampling_approximate_3000$beta
simulation4_spend_time <- fit_sampling_approximate_3000$spand_time
# approximate 3000 beta trace plot
for (i in 1:length(non_zero_index4)) {
q <- ggplot(data = data.frame(X = 1:nrow(simulation4_beta),
Y = simulation4_beta[, non_zero_index4[i]])) +
geom_line(mapping = aes(x = X, y = Y)) +
labs(x = str_c("beta ", non_zero_index4[i]), y = "value",
title = str_c("true value = ", non_zero_coefficents4[i])) +
coord_cartesian(ylim = c(min(simulation4_beta[, non_zero_index4[i]]),
max(simulation4_beta[, non_zero_index4[i]])))
print(q)
}
simulation4_beta <- fit_sampling_modified_3000$beta
simulation4_spend_time <- fit_sampling_modified_3000$spand_time
# modified 3000 beta trace plot
for (i in 1:length(non_zero_index4)) {
q <- ggplot(data = data.frame(X = 1:nrow(simulation4_beta),
Y = simulation4_beta[, non_zero_index4[i]])) +
geom_line(mapping = aes(x = X, y = Y)) +
labs(x = str_c("beta ", non_zero_index4[i]), y = "value",
title = str_c("true value = ", non_zero_coefficents4[i])) +
coord_cartesian(ylim = c(min(simulation4_beta[, non_zero_index4[i]]),
max(simulation4_beta[, non_zero_index4[i]])))
print(q)
}
simulation4_beta2 <- fit_sampling_approximate_3000$beta
simulation4_spend_time2 <- fit_sampling_approximate_3000$spand_time
# 3000
ggplot(data = data.frame(X = 101:nrow(simulation4_spend_time),
approximate_active_set = simulation4_spend_time2$total_active_column[101:nrow(simulation4_spend_time)],
modified_active_set = simulation4_spend_time$`number of active set columns`[101:nrow(simulation4_spend_time)])) +
geom_line(mapping = aes(x = X, y = approximate_active_set, color = "red")) +
geom_line(mapping = aes(x = X, y = modified_active_set, color = "blue")) +
scale_color_manual(values = c("red", "blue"), breaks = c("red", "blue"),
labels = c("approximate_active_set", "modified_active_set")) +
labs(x = "iteration", y = "number of active variable")
simulation4_spend_time2 <- fit_sampling_approximate_3000$spend_time
# 3000
ggplot(data = data.frame(X = 101:nrow(simulation4_spend_time),
approximate_active_set = simulation4_spend_time2$total_active_column[101:nrow(simulation4_spend_time)],
modified_active_set = simulation4_spend_time$`number of active set columns`[101:nrow(simulation4_spend_time)])) +
geom_line(mapping = aes(x = X, y = approximate_active_set, color = "red")) +
geom_line(mapping = aes(x = X, y = modified_active_set, color = "blue")) +
scale_color_manual(values = c("red", "blue"), breaks = c("red", "blue"),
labels = c("approximate_active_set", "modified_active_set")) +
labs(x = "iteration", y = "number of active variable")
simulation4_spend_time2 <- fit_sampling_approximate_3000$spend_time
fit_sampling_approximate_3000 <- Mhorseshoe::approximate_algorithm(W4, z4, iteration = 5000,
s = 0.01, xi = exp(15),
step_check = TRUE)
simulation4_beta2 <- fit_sampling_approximate_3000$beta
simulation4_spend_time2 <- fit_sampling_approximate_3000$spend_time
# approximate 3000 beta trace plot
for (i in 1:length(non_zero_index4)) {
q <- ggplot(data = data.frame(X = 1:nrow(simulation4_beta),
Y = simulation4_beta[, non_zero_index4[i]])) +
geom_line(mapping = aes(x = X, y = Y)) +
labs(x = str_c("beta ", non_zero_index4[i]), y = "value",
title = str_c("true value = ", non_zero_coefficents4[i])) +
coord_cartesian(ylim = c(min(simulation4_beta[, non_zero_index4[i]]),
max(simulation4_beta[, non_zero_index4[i]])))
print(q)
}
# approximate 3000 beta trace plot
for (i in 1:length(non_zero_index4)) {
q <- ggplot(data = data.frame(X = 1:nrow(simulation4_beta2),
Y = simulation4_beta2[, non_zero_index4[i]])) +
geom_line(mapping = aes(x = X, y = Y)) +
labs(x = str_c("beta ", non_zero_index4[i]), y = "value",
title = str_c("true value = ", non_zero_coefficents4[i])) +
coord_cartesian(ylim = c(min(simulation4_beta2[, non_zero_index4[i]]),
max(simulation4_beta2[, non_zero_index4[i]])))
print(q)
}
# approximate 3000 beta trace plot
for (i in 1:length(non_zero_index4)) {
q <- ggplot(data = data.frame(X = 1:nrow(simulation4_beta2),
Y = simulation4_beta2[, non_zero_index4[i]])) +
geom_line(mapping = aes(x = X, y = Y)) +
labs(x = str_c("beta ", non_zero_index4[i]), y = "value",
title = str_c("true value = ", non_zero_coefficents4[i])) +
coord_cartesian(ylim = c(min(simulation4_beta2[, non_zero_index4[i]]),
max(simulation4_beta2[, non_zero_index4[i]])))
print(q)
}
# 3000
ggplot(data = data.frame(X = 101:nrow(simulation4_spend_time),
approximate_active_set = simulation4_spend_time2$total_active_column[101:nrow(simulation4_spend_time)],
modified_active_set = simulation4_spend_time$`number of active set columns`[101:nrow(simulation4_spend_time)])) +
geom_line(mapping = aes(x = X, y = approximate_active_set, color = "red")) +
geom_line(mapping = aes(x = X, y = modified_active_set, color = "blue")) +
scale_color_manual(values = c("red", "blue"), breaks = c("red", "blue"),
labels = c("approximate_active_set", "modified_active_set")) +
labs(x = "iteration", y = "number of active variable")
# 3000
ggplot(data = data.frame(X = 101:nrow(simulation4_spend_time),
approximate_active_set = simulation4_spend_time2$total_active_column[101:nrow(simulation4_spend_time)],
modified_active_set = simulation4_spend_time$`number of active set columns`[101:nrow(simulation4_spend_time)])) +
geom_line(mapping = aes(x = X, y = approximate_active_set, color = "red")) +
geom_line(mapping = aes(x = X, y = modified_active_set, color = "blue")) +
scale_color_manual(values = c("red", "blue"), breaks = c("red", "blue"),
labels = c("approximate_active_set", "modified_active_set")) +
labs(x = "iteration", y = "number of active variable")
response_list4 <- Mhorseshoe::make_simulation_data(N = 500, p = 3000, W_mean = 0, W_sd = 1,
non_zero = 30, error_sd = 15, fixed_coefficients = 10)
response_list4 <- Mhorseshoe::make_simulation_data(N = 500, p = 3000, W_mean = 0, W_sd = 1,
non_zero = 30, error_sd = 30, fixed_coefficients = 10)
W4 <- response_list4[[1]]
z4 <- response_list4[[2]]
non_zero_index4 <- response_list4[[3]]
non_zero_coefficents4 <- response_list4[[4]]
fit_sampling_modified_3000 <- Mhorseshoe::sampling_modified(W4, z4, xi = exp(15), s = 0.01,
iteration = 5000,
step_check = TRUE)
simulation4_beta <- fit_sampling_modified_3000$beta
simulation4_spend_time <- fit_sampling_modified_3000$spand_time
# modified 3000 beta trace plot
for (i in 1:length(non_zero_index4)) {
q <- ggplot(data = data.frame(X = 1:nrow(simulation4_beta),
Y = simulation4_beta[, non_zero_index4[i]])) +
geom_line(mapping = aes(x = X, y = Y)) +
labs(x = str_c("beta ", non_zero_index4[i]), y = "value",
title = str_c("true value = ", non_zero_coefficents4[i])) +
coord_cartesian(ylim = c(min(simulation4_beta[, non_zero_index4[i]]),
max(simulation4_beta[, non_zero_index4[i]])))
print(q)
}
fit_sampling_approximate_3000 <- Mhorseshoe::approximate_algorithm(W4, z4, iteration = 5000,
s = 0.01, xi = exp(15),
step_check = TRUE)
response_list4 <- Mhorseshoe::make_simulation_data(N = 500, p = 3000, W_mean = 0, W_sd = 1,
non_zero = 30, error_sd = 10, fixed_coefficients = 10)
W4 <- response_list4[[1]]
z4 <- response_list4[[2]]
non_zero_index4 <- response_list4[[3]]
non_zero_coefficents4 <- response_list4[[4]]
fit_sampling_approximate_3000 <- Mhorseshoe::approximate_algorithm(W4, z4, iteration = 5000,
s = 0.01, xi = exp(15),
step_check = TRUE)
library(Mhorseshoe)
knitr::opts_chunk$set(echo = TRUE)
fit_sampling_approximate_3000 <- Mhorseshoe::approximate_algorithm(W4, z4, iteration = 5000,
s = 0.01, xi = exp(15),
step_check = TRUE)
library(Mhorseshoe)
knitr::opts_chunk$set(echo = TRUE)
fit_sampling_modified_3000 <- Mhorseshoe::sampling_modified(W4, z4, xi = exp(15), s = 0.01,
iteration = 5000,
step_check = TRUE)
simulation4_beta <- fit_sampling_modified_3000$beta
simulation4_spend_time <- fit_sampling_modified_3000$spand_time
# modified 3000 beta trace plot
for (i in 1:length(non_zero_index4)) {
q <- ggplot(data = data.frame(X = 1:nrow(simulation4_beta),
Y = simulation4_beta[, non_zero_index4[i]])) +
geom_line(mapping = aes(x = X, y = Y)) +
labs(x = str_c("beta ", non_zero_index4[i]), y = "value",
title = str_c("true value = ", non_zero_coefficents4[i])) +
coord_cartesian(ylim = c(min(simulation4_beta[, non_zero_index4[i]]),
max(simulation4_beta[, non_zero_index4[i]])))
print(q)
}
fit_sampling_approximate_3000 <- Mhorseshoe::approximate_algorithm(W4, z4, iteration = 5000,
s = 0.01, xi = exp(15),
step_check = TRUE)
simulation4_beta2 <- fit_sampling_approximate_3000$beta
simulation4_spend_time2 <- fit_sampling_approximate_3000$spend_time
# approximate 3000 beta trace plot
for (i in 1:length(non_zero_index4)) {
q <- ggplot(data = data.frame(X = 1:nrow(simulation4_beta2),
Y = simulation4_beta2[, non_zero_index4[i]])) +
geom_line(mapping = aes(x = X, y = Y)) +
labs(x = str_c("beta ", non_zero_index4[i]), y = "value",
title = str_c("true value = ", non_zero_coefficents4[i])) +
coord_cartesian(ylim = c(min(simulation4_beta2[, non_zero_index4[i]]),
max(simulation4_beta2[, non_zero_index4[i]])))
print(q)
}
saveRDS(response_list4, file = "simulation4_data.rds")
saveRDS(fit_sampling_modified_3000, file = "simulation4_modified.rds")
saveRDS(fit_sampling_approximate_3000, file = "simulation4_approximate.rds")
# 3000
ggplot(data = data.frame(X = 101:nrow(simulation4_spend_time),
approximate_active_set = simulation4_spend_time2$total_active_column[101:nrow(simulation4_spend_time)],
modified_active_set = simulation4_spend_time$`number of active set columns`[101:nrow(simulation4_spend_time)])) +
geom_line(mapping = aes(x = X, y = approximate_active_set, color = "red")) +
geom_line(mapping = aes(x = X, y = modified_active_set, color = "blue")) +
scale_color_manual(values = c("red", "blue"), breaks = c("red", "blue"),
labels = c("approximate_active_set", "modified_active_set")) +
labs(x = "iteration", y = "number of active variable")
response_list4 <- readRDS(file = "./simulation4_data.rds")
fit_sampling_approximate_3000 <- readRDS(file = "./simulation4_approximate.rds")
dir.create(path = "./simulation4")
dir.create(path = "./simulation4/approximate")
dir.create(path = "./simulation4/modified")
# modified beta trace plot
for (i in 1:length(non_zero_index4)) {
q <- ggplot(data = data.frame(X = 1:nrow(simulation4_beta),
Y = simulation4_beta[, non_zero_index4[i]])) +
geom_line(mapping = aes(x = X, y = Y)) +
labs(x = str_c("beta ", non_zero_index4[i]), y = "value",
title = str_c("true value = ", non_zero_coefficents4[i])) +
coord_cartesian(ylim = c(min(simulation4_beta[, non_zero_index4[i]]),
max(simulation4_beta[, non_zero_index4[i]])))
ggsave(paste0("./simulation4/modified/", "beta", non_zero_index4[i], ".png"), q,
width = 40, height = 20, units = "cm")
}
# approximate 3000 beta trace plot
for (i in 1:length(non_zero_index4)) {
q <- ggplot(data = data.frame(X = 1:nrow(simulation4_beta2),
Y = simulation4_beta2[, non_zero_index4[i]])) +
geom_line(mapping = aes(x = X, y = Y)) +
labs(x = str_c("beta ", non_zero_index4[i]), y = "value",
title = str_c("true value = ", non_zero_coefficents4[i])) +
coord_cartesian(ylim = c(min(simulation4_beta2[, non_zero_index4[i]]),
max(simulation4_beta2[, non_zero_index4[i]])))
ggsave(paste0("./simulation4/approximate/", "beta", non_zero_index4[i], ".png"), q,
width = 40, height = 20, units = "cm")
}
# 3000
ggplot(data = data.frame(X = 101:nrow(simulation4_spend_time),
approximate_active_set = simulation4_spend_time2$total_active_column[101:nrow(simulation4_spend_time)],
modified_active_set = simulation4_spend_time$`number of active set columns`[101:nrow(simulation4_spend_time)])) +
geom_line(mapping = aes(x = X, y = approximate_active_set, color = "red")) +
geom_line(mapping = aes(x = X, y = modified_active_set, color = "blue")) +
scale_color_manual(values = c("red", "blue"), breaks = c("red", "blue"),
labels = c("approximate_active_set", "modified_active_set")) +
labs(x = "iteration", y = "number of active variable")
# 3000
ggplot(data = data.frame(X = 101:nrow(simulation4_spend_time),
approximate_active_set = simulation4_spend_time2$total_active_column[101:nrow(simulation4_spend_time)],
modified_active_set = simulation4_spend_time$`number of active set columns`[101:nrow(simulation4_spend_time)])) +
geom_line(mapping = aes(x = X, y = approximate_active_set, color = "red")) +
geom_line(mapping = aes(x = X, y = modified_active_set, color = "blue")) +
scale_color_manual(values = c("red", "blue"), breaks = c("red", "blue"),
labels = c("approximate_active_set", "modified_active_set")) +
labs(x = "iteration", y = "number of active variable")
# active_set graph
ggplot(data = data.frame(X = 101:nrow(simulation4_spend_time),
approximate_active_set = simulation4_spend_time2$total_active_column[101:nrow(simulation4_spend_time)],
modified_active_set = simulation4_spend_time$`number of active set columns`[101:nrow(simulation4_spend_time)])) +
geom_line(mapping = aes(x = X, y = approximate_active_set, color = "red")) +
geom_line(mapping = aes(x = X, y = modified_active_set, color = "blue")) +
scale_color_manual(values = c("red", "blue"), breaks = c("red", "blue"),
labels = c("approximate_active_set", "modified_active_set")) +
labs(x = "iteration", y = "number of active variable")
simulation4_beta <- fit_simulation4_modified$beta
simulation4_spend_time <- fit_simulation4_modified$spand_time
fit_simulation4_modified <- readRDS(file = "./simulation4_modified.rds")
simulation4_beta <- fit_simulation4_modified$beta
simulation4_spend_time <- fit_simulation4_modified$spand_time
fit_simulation4_approximate <- readRDS(file = "./simulation4_approximate.rds")
simulation4_beta2 <- fit_simulation4_approximate$beta
simulation4_spend_time2 <- fit_simulation4_approximate$spend_time
# active_set graph
ggplot(data = data.frame(X = 101:nrow(simulation4_spend_time),
approximate_active_set = simulation4_spend_time2$total_active_column[101:nrow(simulation4_spend_time)],
modified_active_set = simulation4_spend_time$`number of active set columns`[101:nrow(simulation4_spend_time)])) +
geom_line(mapping = aes(x = X, y = approximate_active_set, color = "red")) +
geom_line(mapping = aes(x = X, y = modified_active_set, color = "blue")) +
scale_color_manual(values = c("red", "blue"), breaks = c("red", "blue"),
labels = c("approximate_active_set", "modified_active_set")) +
labs(x = "iteration", y = "number of active variable")
# sigma grapth
simulation4_sigma <- fit_simulation4_modified$sigma2
simulation4_sigma2 <- fit_simulation4_approximate$sigma_parameter
ggplot(data = data.frame(X = 1:length(simulation4_sigma),
modified_sigma = simulation4_sigma,
approximate_sigma = simulation4_sigma2)) +
geom_line(mapping = aes(x = X, y = modified_sigma))
ggplot(data = data.frame(X = 101:length(simulation4_sigma),
modified_sigma = simulation4_sigma[101:length(simulation4_sigma)],
approximate_sigma = simulation4_sigma2[101:length(simulation4_sigma)])) +
geom_line(mapping = aes(x = X, y = modified_sigma))
ggplot(data = data.frame(X = 101:length(simulation4_sigma),
modified_sigma = simulation4_sigma[101:length(simulation4_sigma)],
approximate_sigma = simulation4_sigma2[101:length(simulation4_sigma)])) +
geom_line(mapping = aes(x = X, y = modified_sigma)) +
geom_line(mapping = aes(x = X, y = approximate_sigma))
ggplot(data = data.frame(X = 501:length(simulation4_sigma),
modified_sigma = simulation4_sigma[501:length(simulation4_sigma)],
approximate_sigma = simulation4_sigma2[501:length(simulation4_sigma)])) +
geom_line(mapping = aes(x = X, y = modified_sigma)) +
geom_line(mapping = aes(x = X, y = approximate_sigma))
ggplot(data = data.frame(X = 501:length(simulation4_sigma),
modified_sigma = simulation4_sigma[501:length(simulation4_sigma)],
approximate_sigma = simulation4_sigma2[501:length(simulation4_sigma)])) +
geom_line(mapping = aes(x = X, y = modified_sigma, color = "red")) +
geom_line(mapping = aes(x = X, y = approximate_sigma, color = "blue"))
ggplot(data = data.frame(X = 501:length(simulation4_sigma),
modified_sigma = simulation4_sigma[501:length(simulation4_sigma)],
approximate_sigma = simulation4_sigma2[501:length(simulation4_sigma)])) +
geom_line(mapping = aes(x = X, y = modified_sigma, color = "red")) +
geom_line(mapping = aes(x = X, y = approximate_sigma, color = "blue")) +
scale_color_manual(values = c("red", "blue"), breaks = c("red", "blue"),
labels = c("modified_sigma", "approximate_sigma"))
ggplot(data = data.frame(X = 1:length(simulation4_spend_time$total_time),
modified_time = simulation4_spend_time$total_time,
approximate_time = simulation4_spend_time2$total_time)) +
geom_line(mapping = aes(x = X, y = modified_sigma, color = "red")) +
geom_line(mapping = aes(x = X, y = approximate_sigma, color = "blue")) +
scale_color_manual(values = c("red", "blue"), breaks = c("red", "blue"),
labels = c("modified_sigma", "approximate_sigma"))
ggplot(data = data.frame(X = 1:length(simulation4_spend_time$total_time),
modified_time = simulation4_spend_time$total_time,
approximate_time = simulation4_spend_time2$total_time)) +
geom_line(mapping = aes(x = X, y = modified_sigma, color = "red"))
ggplot(data = data.frame(X = 1:length(simulation4_spend_time$total_time),
modified_time = simulation4_spend_time$total_time,
approximate_time = simulation4_spend_time2$total_time)) +
geom_line(mapping = aes(x = X, y = modified_time, color = "red"))
ggplot(data = data.frame(X = 1:length(simulation4_spend_time$total_time),
modified_time = simulation4_spend_time$total_time,
approximate_time = simulation4_spend_time2$total_time)) +
geom_line(mapping = aes(x = X, y = modified_time, color = "red")) +
geom_line(mapping = aes(x = X, y = approximate_time, color = "blue")) +
scale_color_manual(values = c("red", "blue"), breaks = c("red", "blue"),
labels = c("modified_time_per_iteration",
"approximate_time_per_iteration"))
ggplot(data = data.frame(X = 1:length(simulation4_spend_time$total_time),
modified_time = simulation4_spend_time$total_time,
approximate_time = simulation4_spend_time2$total_time)) +
geom_line(mapping = aes(x = X, y = modified_time, color = "red", alpha = 0.5)) +
geom_line(mapping = aes(x = X, y = approximate_time, color = "blue", alpha = 0.5)) +
scale_color_manual(values = c("red", "blue"), breaks = c("red", "blue"),
labels = c("modified_time_per_iteration",
"approximate_time_per_iteration"))
# spend_time_per_iteration graph
ggplot(data = data.frame(X = 1:length(simulation4_spend_time$total_time),
modified_time = simulation4_spend_time$total_time,
approximate_time = simulation4_spend_time2$total_time)) +
geom_line(mapping = aes(x = X, y = modified_time, color = "red", alpha = 0.5)) +
geom_line(mapping = aes(x = X, y = approximate_time, color = "blue", alpha = 0.5)) +
scale_color_manual(values = c("red", "blue"), breaks = c("red", "blue"),
labels = c("modified_time_per_iteration",
"approximate_time_per_iteration"))
simulation4_log_xi <- fit_simulation4_modified$global_shrinkage_parameter
simulation4_log_xi2 <- fit_simulation4_approximate$global_shrinkage_parameter
simulation4_log_xi <- log(fit_simulation4_modified$global_shrinkage_parameter)
simulation4_log_xi2 <- log(fit_simulation4_approximate$global_shrinkage_parameter)
simulation4_log_xi2 <- log(fit_simulation4_approximate$global_shrinkage_parameter)
?scale_
simulation4_log_xi <- log(fit_simulation4_modified$global_shrinkage_parameter)
simulation4_log_xi2 <- log(fit_simulation4_approximate$global_shrinkage_parameter)
ggplot(data = data.frame(X = 1:length(simulation4_log_xi),
modified_log_xi = simulation4_log_xi[1:length(simulation4_log_xi)])) +
geom_line(mapping = aes(x = X, y = modified_log_xi))
ggplot(data = data.frame(X = 1:length(simulation4_log_xi2),
approximate_log_xi = simulation4_log_xi2[1:length(simulation4_log_xi2)])) +
geom_line(mapping = aes(x = X, y = approximate_log_xi))
ggplot(data = data.frame(X = 1:length(simulation4_log_xi),
modified_log_xi = simulation4_log_xi[1:length(simulation4_log_xi)])) +
geom_line(mapping = aes(x = X, y = modified_log_xi))
ggplot(data = data.frame(X = 1:length(simulation4_log_xi),
modified_log_xi = simulation4_log_xi[1:length(simulation4_log_xi)],
approximate_log_xi = simulation4_log_xi2[1:length(simulation4_log_xi2)])) +
geom_line(mapping = aes(x = X, y = modified_log_xi)) +
geom_line(mapping = aes(x = X, y = approximate_log_xi))
ggplot(data = data.frame(X = 1:length(simulation4_log_xi),
modified_log_xi = simulation4_log_xi[1:length(simulation4_log_xi)],
approximate_log_xi = simulation4_log_xi2[1:length(simulation4_log_xi2)])) +
geom_line(mapping = aes(x = X, y = modified_log_xi, color = "red")) +
geom_line(mapping = aes(x = X, y = approximate_log_xi, color = "blue")) +
scale_color_manual(values = c("red", "blue"), breaks = c("red", "blue"),
labels = c("modified_log_xi",
"approximate_log_xi"))
# xi graph
simulation4_log_xi <- log(fit_sampling_modified_1000$global_shrinkage_parameter)
simulation4_log_xi2 <- log(fit_sampling_approximate_1000$global_shrinkage_parameter)
ggplot(data = data.frame(X = 1:length(simulation4_log_xi),
modified_log_xi = simulation4_log_xi[1:length(simulation4_log_xi)],
approximate_log_xi = simulation4_log_xi2[1:length(simulation4_log_xi2)])) +
geom_line(mapping = aes(x = X, y = modified_log_xi, color = "red")) +
geom_line(mapping = aes(x = X, y = approximate_log_xi, color = "blue")) +
scale_color_manual(values = c("red", "blue"), breaks = c("red", "blue"),
labels = c("modified_log_xi",
"approximate_log_xi"))
# xi graph
simulation4_log_xi <- log(fit_sampling_modified_2000$global_shrinkage_parameter)
simulation4_log_xi2 <- log(fit_sampling_approximate_2000$global_shrinkage_parameter)
ggplot(data = data.frame(X = 1:length(simulation4_log_xi),
modified_log_xi = simulation4_log_xi[1:length(simulation4_log_xi)],
approximate_log_xi = simulation4_log_xi2[1:length(simulation4_log_xi2)])) +
geom_line(mapping = aes(x = X, y = modified_log_xi, color = "red")) +
geom_line(mapping = aes(x = X, y = approximate_log_xi, color = "blue")) +
scale_color_manual(values = c("red", "blue"), breaks = c("red", "blue"),
labels = c("modified_log_xi",
"approximate_log_xi"))
# xi graph
simulation4_log_xi <- log(fit_sampling_modified_3000$global_shrinkage_parameter)
simulation4_log_xi2 <- log(fit_sampling_approximate_3000$global_shrinkage_parameter)
ggplot(data = data.frame(X = 1:length(simulation4_log_xi),
modified_log_xi = simulation4_log_xi[1:length(simulation4_log_xi)],
approximate_log_xi = simulation4_log_xi2[1:length(simulation4_log_xi2)])) +
geom_line(mapping = aes(x = X, y = modified_log_xi, color = "red")) +
geom_line(mapping = aes(x = X, y = approximate_log_xi, color = "blue")) +
scale_color_manual(values = c("red", "blue"), breaks = c("red", "blue"),
labels = c("modified_log_xi",
"approximate_log_xi"))
# xi graph
simulation4_log_xi <- log(fit_simulation4_modified$global_shrinkage_parameter)
simulation4_log_xi2 <- log(fit_simulation4_approximate$global_shrinkage_parameter)
ggplot(data = data.frame(X = 1:length(simulation4_log_xi),
modified_log_xi = simulation4_log_xi[1:length(simulation4_log_xi)],
approximate_log_xi = simulation4_log_xi2[1:length(simulation4_log_xi2)])) +
geom_line(mapping = aes(x = X, y = modified_log_xi, color = "red")) +
geom_line(mapping = aes(x = X, y = approximate_log_xi, color = "blue")) +
scale_color_manual(values = c("red", "blue"), breaks = c("red", "blue"),
labels = c("modified_log_xi",
"approximate_log_xi"))
# 그렇다면, exp(10)부터 시작하면 어떤 모양으로 그려질려나?
fit_simulation4_modified <- Mhorseshoe::sampling_modified(W4, z4, xi = exp(10), s = 0.01,
iteration = 5000, step_check = TRUE)
# 그렇다면, exp(10)부터 시작하면 어떤 모양으로 그려질려나?
fit_simulation4_modified <- Mhorseshoe::sampling_modified(W4, z4, xi = exp(10), s = 0.01,
iteration = 5000, step_check = TRUE)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(invgamma)
library(MASS)
library(Rcpp)
library(horseshoe)
library(tictoc)
library(Mhorseshoe)
# 그렇다면, exp(10)부터 시작하면 어떤 모양으로 그려질려나?
fit_simulation4_modified <- Mhorseshoe::sampling_modified(W4, z4, xi = exp(10), s = 0.01,
iteration = 5000, step_check = TRUE)
# 그렇다면, exp(10)부터 시작하면 어떤 모양으로 그려질려나?
fit_simulation4_modified <- Mhorseshoe::sampling_modified(W4, z4, xi = 1, s = 0.01,
iteration = 5000, step_check = TRUE)
# 그렇다면, exp(10)부터 시작하면 어떤 모양으로 그려질려나?
fit_simulation4_modified <- Mhorseshoe::sampling_modified(W4, z4, xi = 1000, s = 0.01,
iteration = 5000, step_check = TRUE)
# 그렇다면, exp(10)부터 시작하면 어떤 모양으로 그려질려나?
fit_simulation4_modified <- Mhorseshoe::sampling_modified(W4, z4, xi = exp(11), s = 0.01,
iteration = 5000, step_check = TRUE)
# 그렇다면, exp(10)부터 시작하면 어떤 모양으로 그려질려나?
fit_simulation4_modified <- Mhorseshoe::sampling_modified(W3, z3, xi = exp(11), s = 0.01,
iteration = 5000, step_check = TRUE)
# 그렇다면, exp(10)부터 시작하면 어떤 모양으로 그려질려나?
fit_simulation4_modified <- Mhorseshoe::sampling_modified(W1, z1, xi = 1, s = 0.01,
iteration = 5000, step_check = TRUE)
library(Mhorseshoe)
knitr::opts_chunk$set(echo = TRUE)
# 그렇다면, exp(10)부터 시작하면 어떤 모양으로 그려질려나?
fit_simulation4_modified <- Mhorseshoe::sampling_modified(W1, z1, xi = 1, s = 0.01,
iteration = 5000, step_check = TRUE)
knitr::opts_chunk$set(echo = TRUE)
fit_simulation4_approximate <- Mhorseshoe::approximate_algorithm(w1, z1, xi = 1, s = 0.01,
iteration = 5000, step_check = TRUE)
fit_simulation4_approximate <- Mhorseshoe::approximate_algorithm(W1, z1, xi = 1, s = 0.01,
iteration = 5000, step_check = TRUE)
# 그렇다면, exp(10)부터 시작하면 어떤 모양으로 그려질려나?
fit_simulation4_modified <- Mhorseshoe::sampling_modified(W1, z1, xi = 1, s = 0.01,
iteration = 5000, step_check = TRUE)
knitr::opts_chunk$set(echo = TRUE)
fit_simulation4_approximate <- Mhorseshoe::approximate_algorithm(W1, z1, xi = 1, s = 0.01,
iteration = 5000, step_check = TRUE)
# 그렇다면, exp(10)부터 시작하면 어떤 모양으로 그려질려나? 아 데이터가 좀 어렵구나.
fit_simulation4_modified <- Mhorseshoe::sampling_modified(W2, z2, xi = 1, s = 0.01,
iteration = 5000, step_check = TRUE)
fit_simulation4_approximate <- Mhorseshoe::approximate_algorithm(W2, z2, xi = 1, s = 0.01,
iteration = 5000, step_check = TRUE)
library(Mhorseshoe)
knitr::opts_chunk$set(echo = TRUE)
ggplot(data = data.frame(X = 1:length(simulation4_log_xi),
modified_log_xi = simulation4_log_xi[1:length(simulation4_log_xi)],
approximate_log_xi = simulation4_log_xi2[1:length(simulation4_log_xi2)])) +
geom_line(mapping = aes(x = X, y = modified_log_xi, color = "red")) +
geom_line(mapping = aes(x = X, y = approximate_log_xi, color = "blue")) +
scale_color_manual(values = c("red", "blue"), breaks = c("red", "blue"),
labels = c("modified_log_xi",
"approximate_log_xi"))
# 그렇다면, exp(10)부터 시작하면 어떤 모양으로 그려질려나? 아 데이터가 좀 어렵구나.
fit_simulation4_modified <- Mhorseshoe::fixed_modified(W1, z1, xi = exp(10),
iteration = 5000, step_check = TRUE)
fit_simulation4_approximate <- Mhorseshoe::approximate_algorithm(W1, z1, xi = exp(10), s = 0,
iteration = 5000, step_check = TRUE)
ggplot(data = data.frame(X = 1:length(simulation4_log_xi),
modified_log_xi = simulation4_log_xi[1:length(simulation4_log_xi)],
approximate_log_xi = simulation4_log_xi2[1:length(simulation4_log_xi2)])) +
geom_line(mapping = aes(x = X, y = modified_log_xi, color = "red")) +
geom_line(mapping = aes(x = X, y = approximate_log_xi, color = "blue")) +
scale_color_manual(values = c("red", "blue"), breaks = c("red", "blue"),
labels = c("modified_log_xi",
"approximate_log_xi"))
log(10^8)
