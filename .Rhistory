#'
# Run with fixed default threshold
result2 <- approx_horseshoe(X, y, burn = 0, iter = 100,
auto.threshold = FALSE)
# Run with fixed custom threshold
result3 <- approx_horseshoe(X, y, burn = 0, iter = 100,
auto.threshold = FALSE, threshold = 1/p)
# Run with fixed custom threshold
for (i in 1:1000) {
result3 <- approx_horseshoe(X, y, burn = 0, iter = 100,
auto.threshold = FALSE, threshold = 1/p)
}
# Run with fixed custom threshold
for (i in 1:1000) {
result3 <- approx_horseshoe(X, y, burn = 0, iter = 100,
auto.threshold = FALSE, threshold = 1/p)
}
# Run with fixed custom threshold
for (i in 1:1000) {
result3 <- approx_horseshoe(X, y, burn = 0, iter = 100,
auto.threshold = FALSE, threshold = 1/p)
}
# Run with fixed custom threshold
for (i in 1:1000) {
result3 <- approx_horseshoe(X, y, burn = 0, iter = 100,
auto.threshold = FALSE, threshold = 1/(5*p))
}
N <- 200
p <- 100
true_beta <- c(rep(1, 10), rep(0, 90))
X <- matrix(1, nrow = N, ncol = p) # Design matrix X.
for (i in 1:p) {
X[, i] <- stats::rnorm(N, mean = 0, sd = 1)
}
y <- vector(mode = "numeric", length = N) # Response variable y.
e <- rnorm(N, mean = 0, sd = 2) # error term e.
for (i in 1:10) {
y <- y + true_beta[i] * X[, i]
}
y <- y + e
#'
# Run with fixed default threshold
result2 <- approx_horseshoe(X, y, burn = 0, iter = 100,
auto.threshold = FALSE)
#'
# Run with fixed default threshold
result2 <- approx_horseshoe(X, y, burn = 0, iter = 100,
auto.threshold = FALSE)
#'
# Run with fixed default threshold
result2 <- approx_horseshoe(X, y, burn = 0, iter = 100,
auto.threshold = FALSE)
# Run with fixed custom threshold
for (i in 1:10) {
result3 <- approx_horseshoe(X, y, burn = 0, iter = 100,
auto.threshold = FALSE, threshold = 1/(5*p))
}
# Run with fixed custom threshold
for (i in 1:10) {
result3 <- approx_horseshoe(X, y, burn = 0, iter = 100,
auto.threshold = FALSE, threshold = 1/(5*p))
}
# Run with fixed custom threshold
for (i in 1:100) {
result3 <- approx_horseshoe(X, y, burn = 0, iter = 100,
auto.threshold = FALSE, threshold = 1/(5*p))
}
# Run with fixed custom threshold
for (i in 1:100) {
result2 <- approx_horseshoe(X, y, burn = 0, iter = 100,
auto.threshold = FALSE)
result3 <- approx_horseshoe(X, y, burn = 0, iter = 100,
auto.threshold = FALSE, threshold = 1/(5*p))
}
#' # Making simulation data.
set.seed(123)
N <- 200
p <- 100
true_beta <- c(rep(1, 10), rep(0, 90))
#'
X <- matrix(1, nrow = N, ncol = p) # Design matrix X.
for (i in 1:p) {
X[, i] <- stats::rnorm(N, mean = 0, sd = 1)
}
y <- vector(mode = "numeric", length = N) # Response variable y.
e <- rnorm(N, mean = 0, sd = 2) # error term e.
for (i in 1:10) {
y <- y + true_beta[i] * X[, i]
}
y <- y + e
library(Mhorseshoe)
for (i in 1:1000) {
result2 <- approx_horseshoe(X, y, burn = 0, iter = 100,
auto.threshold = FALSE)
}
for (i in 1:1000) {
result2 <- approx_horseshoe(X, y, burn = 0, iter = 100,
auto.threshold = FALSE)
}
set.seed(123)
N <- 100
p <- 300
true_beta <- c(rep(1, 10), rep(0, 290))
X <- matrix(1, nrow = N, ncol = p) # Design matrix X.
for (i in 1:p) {
X[, i] <- stats::rnorm(N, mean = 0, sd = 1)
}
y <- vector(mode = "numeric", length = N) # Response variable y.
e <- rnorm(N, mean = 0, sd = 2) # error term e.
for (i in 1:10) {
y <- y + true_beta[i] * X[, i]
}
y <- y + e
for (i in 1:1000) {
result2 <- approx_horseshoe(X, y, burn = 0, iter = 50,
auto.threshold = FALSE)
}
set.seed(123)
N <- 200
p <- 100
true_beta <- c(rep(1, 10), rep(0, 290))
true_beta <- c(rep(1, 10), rep(0, 90))
set.seed(123)
N <- 200
p <- 100
true_beta <- c(rep(1, 10), rep(0, 90))
X <- matrix(1, nrow = N, ncol = p) # Design matrix X.
for (i in 1:p) {
X[, i] <- stats::rnorm(N, mean = 0, sd = 1)
}
y <- vector(mode = "numeric", length = N) # Response variable y.
e <- rnorm(N, mean = 0, sd = 2) # error term e.
for (i in 1:10) {
y <- y + true_beta[i] * X[, i]
}
y <- y + e
for (i in 1:1000) {
result2 <- approx_horseshoe(X, y, burn = 0, iter = 50,
auto.threshold = FALSE, threshold = 1/(5 * p))
}
#' # Making simulation data.
set.seed(123)
N <- 200
p <- 100
true_beta <- c(rep(1, 10), rep(0, 90))
#'
X <- matrix(1, nrow = N, ncol = p) # Design matrix X.
for (i in 1:p) {
X[, i] <- stats::rnorm(N, mean = 0, sd = 1)
}
#'
y <- vector(mode = "numeric", length = N) # Response variable y.
e <- rnorm(N, mean = 0, sd = 2) # error term e.
for (i in 1:10) {
y <- y + true_beta[i] * X[, i]
}
y <- y + e
for (i in 1:1000) {
result2 <- approx_horseshoe(X, y, burn = 0, iter = 100,
auto.threshold = FALSE, threshold = 1/(5 * p))
}
for (i in 1:1000) {
result2 <- approx_horseshoe(X, y, burn = 0, iter = 100,
auto.threshold = FALSE, threshold = 1/p)
}
#' # Making simulation data.
set.seed(123)
N <- 200
p <- 100
true_beta <- c(rep(1, 30), rep(0, 70))
#'
X <- matrix(1, nrow = N, ncol = p) # Design matrix X.
for (i in 1:p) {
X[, i] <- stats::rnorm(N, mean = 0, sd = 1)
}
#'
y <- vector(mode = "numeric", length = N) # Response variable y.
e <- rnorm(N, mean = 0, sd = 2) # error term e.
for (i in 1:10) {
y <- y + true_beta[i] * X[, i]
}
y <- y + e
for (i in 1:1000) {
result2 <- approx_horseshoe(X, y, burn = 0, iter = 100,
auto.threshold = FALSE, threshold = 1/p)
}
#' # Making simulation data.
set.seed(123)
N <- 200
p <- 100
true_beta <- c(rep(1, 10), rep(0, 90))
#'
X <- matrix(1, nrow = N, ncol = p) # Design matrix X.
for (i in 1:p) {
X[, i] <- stats::rnorm(N, mean = 0, sd = 1)
}
#'
y <- vector(mode = "numeric", length = N) # Response variable y.
e <- rnorm(N, mean = 0, sd = 2) # error term e.
for (i in 1:10) {
y <- y + true_beta[i] * X[, i]
}
y <- y + e
for (i in 1:1000) {
result2 <- approx_horseshoe(X, y, burn = 0, iter = 100,
auto.threshold = FALSE, threshold = 1/(5 * p))
}
1/0
mean(Inf)
quantile(Inf, probs = c(0.025, 0.975))
remove.packages("Mhorseshoe")
library(Mhorseshoe)
#' # Making simulation data.
set.seed(123)
N <- 200
p <- 100
true_beta <- c(rep(1, 10), rep(0, 90))
#'
X <- matrix(1, nrow = N, ncol = p) # Design matrix X.
for (i in 1:p) {
X[, i] <- stats::rnorm(N, mean = 0, sd = 1)
}
#'
y <- vector(mode = "numeric", length = N) # Response variable y.
e <- rnorm(N, mean = 0, sd = 2) # error term e.
for (i in 1:10) {
y <- y + true_beta[i] * X[, i]
}
y <- y + e
result2 <- approx_horseshoe(X, y, burn = 0, iter = 100,
auto.threshold = FALSE, threshold = 1/(p))
#'
#' # Run with auto.threshold option
#' result1 <- approx_horseshoe(X, y, burn = 0, iter = 100)
#'
# Run with fixed custom threshold
for (i in 1:1000) {
result2 <- approx_horseshoe(X, y, burn = 0, iter = 100,
auto.threshold = FALSE, threshold = 1/(p))
}
warnings()
result2 <- approx_horseshoe(X, y, burn = 0, iter = 100,
auto.threshold = FALSE, threshold = 1/(p))
result2 <- approx_horseshoe(X, y, burn = 0, iter = 100,
auto.threshold = FALSE, threshold = 1/(p))
result2 <- approx_horseshoe(X, y, burn = 0, iter = 100,
auto.threshold = FALSE, threshold = 1/(p))
result2 <- approx_horseshoe(X, y, burn = 0, iter = 100,
auto.threshold = FALSE, threshold = 1/(p))
result2 <- approx_horseshoe(X, y, burn = 0, iter = 100,
auto.threshold = FALSE, threshold = 1/(p))
result2 <- approx_horseshoe(X, y, burn = 0, iter = 100,
auto.threshold = FALSE, threshold = 1/(p))
result2 <- approx_horseshoe(X, y, burn = 0, iter = 100,
auto.threshold = FALSE, threshold = 1/(p))
result2 <- approx_horseshoe(X, y, burn = 0, iter = 100,
auto.threshold = FALSE, threshold = 1/(p))
result2 <- approx_horseshoe(X, y, burn = 0, iter = 100,
auto.threshold = FALSE, threshold = 1/(p))
result2 <- approx_horseshoe(X, y, burn = 0, iter = 100,
auto.threshold = FALSE, threshold = 1/(p))
result2 <- approx_horseshoe(X, y, burn = 0, iter = 100,
auto.threshold = FALSE, threshold = 1/(p))
result2 <- approx_horseshoe(X, y, burn = 0, iter = 100,
auto.threshold = FALSE, threshold = 1/(p))
result2 <- approx_horseshoe(X, y, burn = 0, iter = 100,
auto.threshold = FALSE, threshold = 1/(p))
result2 <- approx_horseshoe(X, y, burn = 0, iter = 100,
auto.threshold = FALSE, threshold = 1/(p))
result2$BetaHat
View(result2$BetaSamples)
result2$LeftCI
result2$TauHat
result2$TauSamples
result2$LambdaHat
result2$ActiveSet
result2$ActiveMean
1:0
1:2
1:0
library(Mhorseshoe)
#' # Making simulation data.
set.seed(123)
N <- 200
p <- 100
true_beta <- c(rep(1, 10), rep(0, 90))
#'
X <- matrix(1, nrow = N, ncol = p) # Design matrix X.
for (i in 1:p) {
X[, i] <- stats::rnorm(N, mean = 0, sd = 1)
}
#'
y <- vector(mode = "numeric", length = N) # Response variable y.
e <- rnorm(N, mean = 0, sd = 2) # error term e.
for (i in 1:10) {
y <- y + true_beta[i] * X[, i]
}
y <- y + e
result2 <- approx_horseshoe(X, y, burn = 0, iter = 100,
auto.threshold = FALSE, threshold = 1/(p))
result2 <- approx_horseshoe(X, y, burn = 0, iter = 100,
auto.threshold = FALSE, threshold = 1/(p))
result2 <- approx_horseshoe(X, y, burn = 0, iter = 100,
auto.threshold = FALSE, threshold = 1/(p))
result2 <- approx_horseshoe(X, y, burn = 0, iter = 100,
auto.threshold = FALSE, threshold = 1/(p))
result2 <- approx_horseshoe(X, y, burn = 0, iter = 100,
auto.threshold = FALSE, threshold = 1/(p))
result2 <- approx_horseshoe(X, y, burn = 0, iter = 100,
auto.threshold = FALSE, threshold = 1/(p))
result2 <- approx_horseshoe(X, y, burn = 0, iter = 100,
auto.threshold = FALSE, threshold = 1/(p))
result2 <- approx_horseshoe(X, y, burn = 0, iter = 100,
auto.threshold = FALSE, threshold = 1/(p))
result2 <- approx_horseshoe(X, y, burn = 0, iter = 100,
auto.threshold = FALSE, threshold = 1/(p))
result2$TauHat
result2$TauSamples
result2 <- approx_horseshoe(X, y, burn = 0, iter = 1,
auto.threshold = FALSE, threshold = 1/(p))
result2 <- approx_horseshoe(X, y, burn = 0, iter = 1,
auto.threshold = FALSE, threshold = 1/(p))
result2 <- approx_horseshoe(X, y, burn = 0, iter = 2,
auto.threshold = FALSE, threshold = 1/(p))
result2$TauSamples
result2 <- approx_horseshoe(X, y, burn = 0, iter = 100,
auto.threshold = FALSE, threshold = 5)
result2 <- approx_horseshoe(X, y, burn = 0, iter = 100,
auto.threshold = FALSE, threshold = 5)
result2 <- approx_horseshoe(X, y, burn = 0, iter = 100,
auto.threshold = FALSE, threshold = 5)
result2$TauSamples
result2 <- approx_horseshoe(X, y, burn = 0, iter = 100,
auto.threshold = FALSE, threshold = 5)
result2$TauSamples
result2$BetaHat
result2$BetaSamples
result2$ActiveSet
result2$ActiveMean
result2 <- approx_horseshoe(X, y, burn = 0, iter = 100,
auto.threshold = FALSE, threshold = 5)
result2$ActiveMean
result2 <- approx_horseshoe(X, y, burn = 0, iter = 100,
auto.threshold = FALSE, threshold = 5)
result2$ActiveMean
result2$BetaSamples
result2$TauSamples
result2 <- approx_horseshoe(X, y, burn = 0, iter = 100,
auto.threshold = FALSE, threshold = 5)
result2$TauSamples
sum(result2$ActiveSet[1, ])
sum(result2$ActiveSet[2, ])
sum(result2$ActiveSet[3, ])
sum(result2$ActiveSet[2, ])
sum(result2$ActiveSet[1, ])
result2 <- approx_horseshoe(X, y, burn = 0, iter = 100,
auto.threshold = FALSE, threshold = 10)
sum(result2$ActiveSet[1, ])
sum(result2$ActiveSet[2, ])
result2$TauSamples
result2$TauSamples^(-2) * result2$LambdaSamples[1 ,]^(-2)
betahat <- apply(result2$BetaSamples, 2, mean)
result2 <- approx_horseshoe(X, y, burn = 0, iter = 100,
auto.threshold = FALSE, threshold = 10)
result2 <- approx_horseshoe(X, y, burn = 0, iter = 100,
auto.threshold = FALSE, threshold = 1/p)
sum(result2$ActiveSet[1, ])
sum(result2$ActiveSet[2, ])
sum(result3$ActiveSet[2, ])
sum(result2$ActiveSet[3, ])
sum(result2$ActiveSet[89, ])
sum(result2$ActiveSet[100, ])
result2 <- approx_horseshoe(X, y, burn = 0, iter = 100,
auto.threshold = FALSE, threshold = 1)
sum(result2$ActiveSet[1, ])
sum(result2$ActiveSet[2, ])
sum(result2$ActiveSet[3, ])
sum(result2$ActiveSet[100, ])
library(Mhorseshoe)
#' # Making simulation data.
set.seed(123)
N <- 200
p <- 100
true_beta <- c(rep(1, 10), rep(0, 90))
#'
X <- matrix(1, nrow = N, ncol = p) # Design matrix X.
for (i in 1:p) {
X[, i] <- stats::rnorm(N, mean = 0, sd = 1)
}
#'
y <- vector(mode = "numeric", length = N) # Response variable y.
e <- rnorm(N, mean = 0, sd = 2) # error term e.
for (i in 1:10) {
y <- y + true_beta[i] * X[, i]
}
y <- y + e
result2 <- approx_horseshoe(X, y, burn = 0, iter = 100,
auto.threshold = FALSE, threshold = 1)
result2 <- approx_horseshoe(X, y, burn = 0, iter = 100,
auto.threshold = FALSE, threshold = 1)
1:1
apply(c(1,2,3), 2, mean)
apply(as.matrix(c(1,2,3)), 2, mean)
as.matrix(c(1,2,3))
c(1,2,3)
ex <- matrix(1, nrow = 1, ncol= 1)
ex
ex <- matrix(1, nrow = 1, ncol= 3)
ex
apply(ex[1, ]2, mean)
apply(ex[1, ], 2, mean)
apply(ex[1, drop = FALSE], 2, mean)
apply(ex[1, , drop = FALSE], 2, mean)
ex
apply(ex[1:0, , drop = FALSE], 2, mean)
ex[1:0, , drop = FALSE]
library(Mhorseshoe)
#' # Making simulation data.
set.seed(123)
N <- 200
p <- 100
true_beta <- c(rep(1, 10), rep(0, 90))
#'
X <- matrix(1, nrow = N, ncol = p) # Design matrix X.
for (i in 1:p) {
X[, i] <- stats::rnorm(N, mean = 0, sd = 1)
}
#'
y <- vector(mode = "numeric", length = N) # Response variable y.
e <- rnorm(N, mean = 0, sd = 2) # error term e.
for (i in 1:10) {
y <- y + true_beta[i] * X[, i]
}
y <- y + e
result2 <- approx_horseshoe(X, y, burn = 0, iter = 100,
auto.threshold = FALSE, threshold = 1)
result2$BetaHat
result2$BetaSamples
result2$ActiveSet
sum(result2$ActiveSet)
result2 <- approx_horseshoe(X, y, burn = 0, iter = 100,
auto.threshold = FALSE, threshold = 1)
result2 <- approx_horseshoe(X, y, burn = 0, iter = 1,
auto.threshold = FALSE, threshold = 1/p)
result2$BetaHat
result2$ActiveSet
sum(result2$ActiveSet)
sum(result2$TauHat)
library(Mhorseshoe)
#' # Making simulation data.
set.seed(123)
N <- 200
p <- 100
true_beta <- c(rep(1, 10), rep(0, 90))
#'
X <- matrix(1, nrow = N, ncol = p) # Design matrix X.
for (i in 1:p) {
X[, i] <- stats::rnorm(N, mean = 0, sd = 1)
}
#'
y <- vector(mode = "numeric", length = N) # Response variable y.
e <- rnorm(N, mean = 0, sd = 2) # error term e.
for (i in 1:10) {
y <- y + true_beta[i] * X[, i]
}
y <- y + e
#'
#' # Run with auto.threshold option
#' result1 <- approx_horseshoe(X, y, burn = 0, iter = 100)
#'
#' # Run with fixed custom threshold
result2 <- approx_horseshoe(X, y, burn = 0, iter = 100,
auto.threshold = FALSE, threshold = 1)
result2$BetaHat
result2$ActiveSet
result2$TauSamples
result2$LambdaHat
1/result2$LambdaHat
#'
#' # Run with auto.threshold option
#' result1 <- approx_horseshoe(X, y, burn = 0, iter = 100)
#'
#' # Run with fixed custom threshold
result2 <- approx_horseshoe(X, y, burn = 0, iter = 100,
auto.threshold = FALSE, threshold = 1)
#'
#' # Run with auto.threshold option
#' result1 <- approx_horseshoe(X, y, burn = 0, iter = 100)
#'
#' # Run with fixed custom threshold
result2 <- approx_horseshoe(X, y, burn = 0, iter = 1,
auto.threshold = FALSE, threshold = 1/p)
result2$LambdaHat
result2$BetaHat
#'
#' # Run with auto.threshold option
#' result1 <- approx_horseshoe(X, y, burn = 0, iter = 100)
#'
#' # Run with fixed custom threshold
result2 <- approx_horseshoe(X, y, burn = 0, iter = 10,
auto.threshold = FALSE, threshold = 1/p)
result2$BetaHat
#'
#' # Run with auto.threshold option
#' result1 <- approx_horseshoe(X, y, burn = 0, iter = 100)
#'
#' # Run with fixed custom threshold
result2 <- approx_horseshoe(X, y, burn = 0, iter = 1,
auto.threshold = FALSE, threshold = 1/p)
result2$BetaHat
result2$TauHat
result2$LambdaHat
